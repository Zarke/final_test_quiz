{

  "0": {
      "pitanje": "Дата је наредба декларације, а затим и наредба форматираног излаза: <br> floatx = 5.56; printf(\" x = %f/tx = %g/n\", x, x); <br> Након извршења ових наредби на екрану ће се приказати вредности променљивих у задатом формату:",
      "moguci_odgovori": {
          "0": "x = 5.560000e+000 x= 0",
          "1": "x = 5.560000 x = 5.560000e+000",
          "2": "x = 5.560000 x = 5.56",
          "3": "x = 5.56 x = 5.560000e+000"
      },
      "tacni_odgovori": [2]
  },

  "1": {
    "pitanje": "У програмском језику Ц подаци су предмет обраде. Сваки податак има одређене особине које чине тип податка. Тип податка је одређен и дефинисан:",
    "moguci_odgovori": {
        "0": "Скупом могућих вредности које може да узме податак",
        "1": "Скупом операција које могу да се изврше над подацима",
        "2": "Скупом могућих вредности које може да узме податак и скупом операција које могу да се изврше над подацима"
    },
    "tacni_odgovori": [2]
},

  "2": {
    "pitanje": "Дата је декларација набројивог типа податка boja : <br> enum boja {crna, plava, zelena, crvena=4, bela=15}; <br> Имајући у виду дефиницију набројивог типа податка одредити вредности које имају константе crna, plava, zelena, crvena i bela. ",
    "moguci_odgovori": {
        "0": "crna =0, plava = 1, zelena=2, crvena = 4, bela = 15",
        "1": "crna =1, plava = 2, zelena=3, crvena = 4, bela = 15",
        "2": "crna =255, plava = 254, zelena=253, crvena = 4, bela = 15"
    },
    "tacni_odgovori": [0]
},

  "3": {
    "pitanje": "Декларисана је целобројна променљива и додељена јој је вредност логичког израза: int <br> x; x= 1==10\f>\f5; <br> Имајући у виду приоритет оператора, одредити вредност променљиве х после извршења ове наредбе.",
    "moguci_odgovori": {
        "0": "Променљива добија вредност логичке неистине, тј. X = 0 ",
        "1": "Променљива добија вредност логичке истине, тј. X = 1",
        "2": "Вредност логичког израза се не може доделити целобројној променљивој",
        "3": "Променљива добија вредност логичке истине, тј. било који број различит од 0"
    },
    "tacni_odgovori": [1]
},

  "4": {
    "pitanje": "Програмски језик Ц има у својим библиотекама функције које могу да се користе позивањем за одређене параметре. Функција rand() из библиотеке stdlib.h се често користи као генератор случајних бројева. Дат је код: <br> int slucajniBroj, broj; slucajniBroj = rand() % broj; <br> Који исказ дефинише опсег генерисаног случајног броја:",
    "moguci_odgovori": {
        "0": "Функција генерише случајан број са интервала 1 до (број).",
        "1": "Функција генерише случајан број са интервала 0 до (број - 1)",
        "2": "Функција генерише случајан број са интервала 0 до (број).",
        "3": "Функција генерише случајан број са интервала 1 до (број - 1)."
    },
    "tacni_odgovori": [1]
},

  "5": {
    "pitanje": "Дата је наредба у Ц језику. Наредба проверава да ли је број паран или непаран. Проценити која наредба даје тачно решење.",
    "moguci_odgovori": {
        "0": "(broj % 2 == 1) ? printf(\"PARAN!!\") : printf(\"NEPARAN!!\");",
        "1": "(broj % 2) ? printf(\"PARAN!!\") : printf(\"NEPARAN!!\");",
        "2": "(broj % 2 == 0) ? printf(\"PARAN!!\") : printf(\"NEPARAN!!\");",
        "3": "(broj & 1) ? printf(\"PARAN!!\") : printf(\"NEPARAN!!\");",
        "4": "(broj & 0x1 == 0) ? printf(\"PARAN!!\") : printf(\"NEPARAN!!\");",
        "5": ". (broj & 1 == 1) ? printf(\"PARAN!!\") : printf(\"NEPARAN!!\");"
    },
    "tacni_odgovori": [2]
},

  "6": {
    "pitanje": "Дата је декларација променљивих int a, b, c; Израчунати вредности коју ће променљиве имати по извршењу следећих наредби: <br> a = c = 6; <br> b = 7; <br> a = b++ - 2; <br> c = ++b - 2;",
    "moguci_odgovori": {
        "0": "a =5 b = 9 c = 7",
        "1": "a = 4 b= 6 c = 7",
        "2": "a = 4 b = 5 c = 8",
        "3": "a = 6 b = 6 c = 6"
    },
    "tacni_odgovori": [0]
},

  "7": {
    "pitanje": "Којом се кључном речи при кодирању у програмском језику Ц, у наредби вишеструког гранања обележавају вредности за које се улази у поједине гране:",
    "moguci_odgovori": {
        "0": "switch",
        "1": "break",
        "2": "return",
        "3": "case"
    },
    "tacni_odgovori": [3]
},

  "8": {
    "pitanje": "Дате су четири варијанте Ц кода којим се одређује вредност максимума између два целобројна податка. Одредити који је тачно написан код:",
    "moguci_odgovori": {
        "0": "max=b; if(max\f<\fa) max=a; printf(\"/nMaksimum = %d\",&max);",
        "1": "b=max; if(max\f<\fa) max=a; printf(\"/nMaksimum = %d\",&max);",
        "2": "max=b; if(max\f<\fa) max=a; printf(\"/nMaksimum = %d\",max);",
        "3": "max=a; if(b\f<\fmax) max=b; printf(\"/nMaksimum = %d\",max);"
    },
    "tacni_odgovori": [2]
},

  "9": {
    "pitanje": "Дата је if-else наредба: <br> if(a==3 || a==5) p++; else p--; <br> Одредити који код представља дату стуктуру приказану помоћу једне switch наредбе:",
    "moguci_odgovori": {
        "0": "switch(a){ case 3, 5: p++;break; default: p--; } ",
        "1": "switch(a){ case 3: case 5: p++;break; p--; } ",
        "2": "switch(a){ case 3: case 5: p++;break; default: p--; }",
        "3": "switch(a){ case 3: case 5: p++; default: p--; } "
    },
    "tacni_odgovori": [2]
},

"10": {
    "pitanje": "Програмски језик Ц има наредбе које омогућавају промену тока управљања у неку другу тачку програма. Једна од наредби за промену тока извршења програма, омогућава: <br> превремено завршавање циклуса (for, while ili do-while) скакањем на прву наредбунепосредно иза циклуса, <br> прескакање следећих наредби унутар селекције switch <br> очување структурности програма изван циклуса. <br> Помоћу које наредбе се постижу горе наведени искази:  ",
    "moguci_odgovori": {
        "0": "continue",
        "1": "gotoxy",
        "2": "break",
        "3": "sizeof"
    },
    "tacni_odgovori": [2]
},

"11": {
    "pitanje": "Дата је декларација променљивих и део програмског кода: <br> int j, m, x[100], prom; <br> prom=0; <br> for(j=m-1;j\f>\f=0;j--) prom+=x[j]; <br> Описати шта ради for циклус са елементима низа x. ",
    "moguci_odgovori": {
        "0": "Сортира низ x од n елемената у растућем редоследу",
        "1": "Сабира елементе низа x од n елемената",
        "2": "Инвертује (обрће) елементе низа x од n елемената",
        "3": "Одређује број позитивних елемената низ x од n елемената ",
        "4": "Ротира елементе низа x од n елемената за једно место у десно"
    },
    "tacni_odgovori": [1]
},

"12": {
    "pitanje": "Једна од наредби за промену тока извршења програма у програмском језику Ц, омогућава: <br> у случају када се налази унутар наредби while и do-while, прелазак на поновно испитивање услова циклуса <br> у случају наредбе for прелазак на извршавање израза 2 (тј. услова) <br> у случају угњеждених циклуса, прескачу се само преостале наредбе најдубљег циклуса. <br> наредба не нарушава структуираност програма ван циклуса <br> ако се налази унутар наредбе switch која се налази унутар неког циклуса, скок се врши на крај тог циклуса уз наравно прескакање наредби које су биле унутар селекције switch. <br> Одредити за коју наредбуваже горе наведени искази: ",
    "moguci_odgovori": {
        "0": "continue",
        "1": "gotoxy",
        "2": "break",
        "3": "sizeof"
    },
    "tacni_odgovori": [0]
},

"13": {
    "pitanje": "Дати су искази који садрже дефиницију низа. Који од понуђених тачно дефинишу низ:",
    "moguci_odgovori": {
        "0": "Низ је основни тип података који се састоји од једног податка.",
        "1": "Низ је сложени тип података који се састоји од више података различитог типа, а који могу бити основни или изведени подаци",
        "2": "Низ је сложени тип података који се састоји од више података истог типа, а који су подаци основног типа.",
        "3": "Низ је сложени тип података који се састоји од више података истог типа, а који могу бити основни или изведени "
    },
    "tacni_odgovori": [3]
},

"14": {
    "pitanje": "Ако се наредбом p++ вредност показивача p увећа за 2, одредити тачну декларацију показивача p: ",
    "moguci_odgovori": {
        "0": "char *p; ",
        "1": "short *p; ",
        "2": "long *p; ",
        "3": "float *p; "
    },
    "tacni_odgovori": [1]
},

"15": {
    "pitanje": "Наредбом програмског језика Ц декларисан је показивач p као показивач на цео број, коме је у наставку кода додељен простор за смештање вектора целих бројева дужине n. Одредити исправно написану наредбу којом се простор на који показује показивач p, смањује за 2 елемента.",
    "moguci_odgovori": {
        "0": "p=calloc(p, sizeof(int)*(n-2));",
        "1": "calloc(p,sizeof(int)*(n-2));",
        "2": "p=realloc(p, n-2);",
        "3": "p=realloc(p, sizeof(int)*(n-2)); ",
        "4": "realloc(p, n-2); ",
        "5": "realloc(p, sizeof(int)*(n-2)); "
    },
    "tacni_odgovori": [3]
},

"16": {
    "pitanje": "У програму написаном на програмском језику Ц дата је декларација дводимензионалног поља и његова иницијализација: <br> unsigned a[3][4]={{2, 4},{4, 6, 7, 3},{2, 1, 3}}; <br> Одредити које вредности ће се доделити елементима декларисане матрице а.",
    "moguci_odgovori": {
        "0": "0 0 2 4 <br> 4 6 7 3 <br> 0 2 1 3 ",
        "1": "2 4 4 6 <br> 7 3 2 1 <br> 0 0 0 0 ",
        "2": "2 4 0 0 <br> 4 6 7 3 <br> 2 1 3 0 ",
        "3": "2 0 0 4 <br> 4 6 7 3 <br> 2 1 0 3 "
    },
    "tacni_odgovori": [2]
},

"17": {
    "pitanje": "У програмском језику C дефинисана је показивачка променљива. Одредити која од понуђених је тачна дефиниција показивачке променљиве: ",
    "moguci_odgovori": {
        "0": "Показивач је променљива која садржи вредност друге променљиве, константе или објекта",
        "1": "Показивач је променљива која садржи адресу друге променљиве, објекта или функције",
        "2": "Показивач је променљива која представља алијас друге променљиве, објекта или функције",
        "3": "Показивач је сложени тип података који у себи садржи адресе променљивих на које показује."
    },
    "tacni_odgovori": [1]
},

"18": {
    "pitanje": "У програму написаном у програмском језику C дата је декларација дводимензионалног поља: <br> unsigned i, j, a[MAXV][MAXK]; <br> Одредити везу између елемента матрице а са индексима i и j и вредности показивача који показује на тај елемент. Која од веза је исправно написана: ",
    "moguci_odgovori": {
        "0": "a[i][j]\f<\f\f>\f*(a + MAXK*i +j) ",
        "1": "a[i][j]\f<\f\f>\f*(a + MAXV*i +j)",
        "2": "a[i][j]\f<\f\f>\f*((unsigned *)a + MAXK*i +j) ",
        "3": "a[i][j]\f<\f\f>\f*((unsigned *)a + MAXV*i +j)"
    },
    "tacni_odgovori": [2]
},

"19": {
    "pitanje": "На левој страни је дата дефиниција функције void zameni(int *a, int *b), а на десној страни део кода, написан на програмском језику Ц, који позива дефинисану функцију. <br> void zameni(int *a, int *b) <br> { <br> int temp; <br> temp = *a; <br> *a = *b; <br> *b = temp; <br> } <br> <br> int a = 3, b = 4; <br> zameni(&a, &b); <br> printf('a=%d i b=%d',a,b); <br> Одредити које вредности ће променљиве a и b добити после извршавања кода. ",
    "moguci_odgovori": {
        "0": "a=3 i b=3 ",
        "1": "a=4 i b=4 ",
        "2": "a=3 i b=4 ",
        "3": "a=4 i b=3"
    },
    "tacni_odgovori": [3]
},

"20": {
    "pitanje": "У програмском језику Ц дат је прототип функције funkcija() и декларисане су променљиве у функцији main(). У понуђеним одговорима дати су позиви функције за декларисане променљиве. <br> void funkcija(int *x, int *y, int **p); <br> void main(){ <br> int a=5, b=7, c=15, *poc; <br> poc = &c; <br> } <br> Одредити исправно записан позив декларисане функције: ",
    "moguci_odgovori": {
        "0": "funkcija(a, b, &poc); ",
        "1": "funkcija(&a, &b, &poc); ",
        "2": "funkcija(&a, &b, poc);",
        "3": "c = funkcija(&a, &b, &poc);"
    },
    "tacni_odgovori": [1]
},

"21": {
    "pitanje": " Потребно је у програмском језику Ц дефинисати функцију pravougaonik(), која   израчунава обим и површину правоугаоника. Функција pravougaonik() преко вредности функције враћа обим правоугаоника, а преносом параметара по референци и показивача poc враћа површину правоугаоника. Улазни аргументи функције су странице a и b које су типа float. Одредити која од дефиниција функција је исправна. ",
    "moguci_odgovori": {
        "0": "float pravougaonik(float a, float b, float *poc){ <br>  return 2*a+2*b; <br> *poc=a*b; <br> } ",
        "1": "float pravougaonik(float a, float b, float poc){  <br> poc=a*b;  <br> return 2*a+2*b; <br> }",
        "2": "float pravougaonik(float a, float b, float&poc){  <br> poc=a*b; <br> return 2*a+2*b; <br> }",
        "3": "float pravougaonik(float a, float b, float *poc){ <br> *poc=a*b; <br> return 2*a+2*b; <br> } "
    },
    "tacni_odgovori": [3]
},

"22": {
    "pitanje": "Дат је део кода програма написаног у програмском језику Ц. Одредити шта ће се исписати на екрану након његовог извршавања. <br> char s[20]={'A','c','a',' ','j','e','\\0','d','o','b','a','r'}; <br> char t[12]={'A','c','a',' ','j','e','\\0','d','o','b','a','r'}; <br> char *poc=s+7; <br> printf(\"\\nString = %s\\n\",poc); <br> printf(\"String = %s\\n\",s+4); <br> printf(\"Znak = %c\\n\",*poc); <br> printf(\"String = %s\\n\",t+7);",
    "moguci_odgovori": {
        "0": "String = Aca je dobar <br> String = Aca <br> Znak = A <br> Aca je dobar",
        "1": "String = Acа <br> String = je <br> Znak = d <br> Neće prikazati ništa ",
        "2": "String = dobar <br> String = je <br> Znak = d <br> Nepredvidivo jer string t ima 12 znakova koliko i rezervisani prostor, a poslednji znak nije \\0'",
        "3": " String = dobar <br> String = dobar <br> Znak = d <br> Nepredvidivo jer string t ima 12 znakova koliko i rezervisani prostor, a poslednji znak nije \\0'"
    },
    "tacni_odgovori": [2]
},

"23": {
    "pitanje": "Дат је програм написан на програмском језику Ц који садржи функцију void zameni(int a, int b и функцију main() у ојој ксу декларисане променљиве које се користе као стварни параметри при позиву дате функције. Анализирати код и проценити које вредности променљивих a и b ће бити исписане након извршења програма. <br> void zameni(int a, int b) <br> { <br> int temp; <br> temp = a; <br> a = b; <br> b = temp; <br> } <br> int main() <br> { <br> int a = 3, b = 4; <br> zameni(a, b); <br> printf(\"\\n a=%d i b=%d\", a, b); <br> }",
    "moguci_odgovori": {
        "0": "a=3 i b=3",
        "1": "a=4 i b=4",
        "2": "a=3 i b=4",
        "3": "a=4 i b=3"
    },
    "tacni_odgovori": [2]
},

"24": {
    "pitanje": "У програмском језику Ц декларисане су променљивeи дат је део кода програма: <br> FILE *fp; <br> char str[150]; <br> fp=fopen(\"primer.txt\", \"r\"); <br> fgets(str, 80, fp); <br> Одредити шта је последица извршавања датог кода. ",
    "moguci_odgovori": {
        "0": "Учитава 80 карактера из датотеке и смешта у стринг str",
        "1": "Учитава максимално 150 карактера из датотеке и смешта у стринг str",
        "2": "Учитава стринг из датотеке све док се не учита знак за нови ред или 80 карактера",
        "3": "Учитава стринг из датотеке све док се не учита знак за нови ред или 150 карактера"
    },
    "tacni_odgovori": [2]
},

"25": {
    "pitanje": "У програмском језику Ц декларисане су променљивe и дат је део кода програма: <br> FILE *fp; <br> char str[150]; int br=10; <br> fp=fopen(\"primer.txt\", \"r\"); <br> fseek(fp, br, SEEK_CUR); <br> fgets(str, 80, fp); <br> Одредити шта је последица извршавања датог кода. ",
    "moguci_odgovori": {
        "0": "Учитава 80 карактера из датотеке и смешта у стринг str",
        "1": "Учитава максимално 150 карактера из датотеке и смешта у стринг str. Ако у датотеци нема 150 карактера, учита br=10 карактера.",
        "2": "Учитава стринг из датотеке све док се не учита знак за нови ред или 80 карактера, и то почев од 11. карактера у односу на почетак датотеке.",
        "3": "Учитава стринг из датотеке све док се не учита знак за нови ред или 150 карактера, почев од 80. карактера у датотеци."
    },
    "tacni_odgovori": [2]
},

"26": {
    "pitanje": "У програмском језику Ц декларисан је структурни тип података Ucenik, а затим и променљива која представља низ од max 30 ученика: <br> typedefstruct <br> { <br> char ime[50]; <br> int razred; <br> int ocene[10]; <br> }Ucenik; … <br> Ucenik T[30]; <br> Одредити наредбу којом се другом ученику у низу T уписује оцена 5 из математике, ако знамо да је математика четврта оцена у низу оцена: ",
    "moguci_odgovori": {
        "0": "T[0].ocene[3]=’5’;",
        "1": "T[1].ocene[4]=5;",
        "2": "T[1].ocene[3]=5;",
        "3": "T.ocene[3]=5;"
    },
    "tacni_odgovori": [2]
},

"27": {
    "pitanje": "У програму написаном у програмском језику Ц декларисана је променљива pod типа int. Употрeбом функције fprintf(...) уписати декларисан податак у стандардну излазну датотеку. <br> Одредити исправно написану наредбу: ",
    "moguci_odgovori": {
        "0": "fprintf(pod);",
        "1": "fprintf(\"%d\", pod);",
        "2": "fprintf(\"%d\", pod, stdin);",
        "3": "fprintf(stdout, \"%d\", pod);"
    },
    "tacni_odgovori": [3]
},

"28": {
    "pitanje": "У програмском језику Ц декларисан је структурни тип података Ucenik, а затим и променљива која представља низ од max 30 ученика: <br> typedef struct <br> { <br>  char naziv[30]; <br> int razred, ocena; <br> } Predmet; <br> <br> typedef struct <br> { <br> char ime[20], prezime[20]; <br> Predmet predmeti[10]; <br> }Ucenik; <br> … <br> int i; Ucenik T[30]; <br> Одредити наредбу којом ће се првом ученику у низу T уписати оцена 5 из математике, ако знамо да је математика четврти предмет у низу предмета: ",
    "moguci_odgovori": {
        "0": "T[0]-\f>\fpredmeti[3]-\f>\focena=5;",
        "1": "T[0].predmeti[3].ocena=5;",
        "2": "T[0].predmeti[“matematika”].ocena=5;",
        "3": "T.ocena[3]=5;"
    },
    "tacni_odgovori": [1]
},

"29": {
    "pitanje": "Заокружити број испред траженог одговора. <br> У програмском језику Ц декларисани су структурни типoви података Datum и Letovanje: <br> typedefstruct <br> { <br> int dan, mesec, godina; <br> }Datum; <br> <br> typedefstruct <br> { <br> char destinacija[50]; <br> Datum polazak, povratak; <br> float cena; <br> }Letovanje; <br> Одредити исправно написану наредбу декларације и иницијализације променљиве x типа Letovanje, ако је дестинација Родос, полазак 10.08.2016., а повратак 21.08.2016. Цена је 480€: ",
    "moguci_odgovori": {
        "0": "Letovanje x={\"Rodos\",{2016,8,10},{2016,8,21},480};",
        "1": "Letovanje x={\"Rodos\",{10,8,2016},{21,8,2016},480};",
        "2": "Letovanje x={\"Rodos\",{10,8,2016,21,8,2016},480};",
        "3": "Letovanje x={Rodos,{2016,8,10},{2016,8,21},480};",
        "4": "Letovanje x={\"Rodos\",480,{2016,8,10},{2016,8,21}};"
    },
    "tacni_odgovori": [1]
},

"30": {
    "pitanje": "У програмском језику Ц декларисани су структурни типoви података Tacka3D (који дефинише тачку у простору) и Lopta (одређена центром и полупречником): <br> typedef struct <br> { <br> float x, y, z; <br> }Tacka3D; <br> <br> typedef struct <br> { <br> Tacka3D centar; <br> float R; <br> }Lopta; <br> Одредити исправно написану наредбу декларације и иницијализације променљиве x типа Lopta, тако да јој центар буде у тачки О(2,2,2), а полупречник 10cm:",
    "moguci_odgovori": {
        "0": "Lopta x={10, {2, 2, 2}};",
        "1": "Lopta x={2, 2, 2, 10};",
        "2": "Lopta x={2, 2, 2}, {10};",
        "3": "Lopta x={{2, 2, 2}, 10};"
    },
    "tacni_odgovori": [3]
},

"31": {
    "pitanje": "У програмском језику Ц декларисани су структурни типoви података Zaposleni и Odeljenje, а затим и променљива типа Odeljenje: <br> typedef struct <br> { <br> char ime[50],prezime[50]; <br> float zarade[12]; <br> //plata po mesecima <br> }Zaposleni; <br> <br> typedef struct <br> { <br> char naziv[50]; <br> Zaposleni radnici[200]; <br> //niz svih zaposlenih <br> }Odeljenje; <br> … <br> Odeljenje marketing; <br> Одредити наредбу којом се раднику, који се у евиденцији одељења marketing налази на првој позицији, уписује плата за децембар у износу од 70.000 дин: ",
    "moguci_odgovori": {
        "0": "marketing.radnici[1].zarade[12]=70000;",
        "1": "marketing[0].radnici[0].zarade[11]=70000;",
        "2": "marketing.radnici[0].zarade[11]=70000;",
        "3": "marketing[0].radnici.zarade[11]=70000;"
    },
    "tacni_odgovori": [2]
},

"32": {
    "pitanje": "У програмском језику C декларисан je структурни тип података Ugao, а затим и декларација функције PrviVeciOd која у скупу углова запамћених у улазном фајлу, одређује први угао већи од неког задатог угла. <br> typedefstruct <br> { <br> int stepen, minut, sekund; <br> }Ugao; … <br> Ugao PrviVeciOd(char ime[], Ugao referentni) {…} <br> <br> Ако су у позивајућој функцији декларисане променљиве: <br> Ugao alfa, beta; char name[20]; FILE *in; <br> Заокружити број испред тачно написане наредбе позива функције:",
    "moguci_odgovori": {
        "0": "beta=PrviVeciOd(in, alfa);",
        "1": "beta=PrviVeciOd(name, alfa)",
        "2": "beta=PrviVeciOd(name[20], alfa)",
        "3": "PrviVeciOd(in, alfa, *beta)"
    },
    "tacni_odgovori": [1]
},

"33": {
    "pitanje": "У програмском језику Ц декларисани су структурни типoви података Tacka (одређена координатама), Poligon (одређен бројем и координатама темена) и Piramida (одређена типом основе – троугао, четвороугао... и висином). Потом је декларисана и променљива типа *Piramida: <br> <br> typedefstruct <br> { <br> float x, y; <br> }Tacka; <br> <br> typedefstruct <br> { <br> int brojTemena; <br> Tacka temena[10]; <br> }Poligon; <br> <br> typedefstruct <br> { <br> Poligon osnova; <br> float visina; <br> }Piramida; <br> <br> Piramida *p; <br> Одредити наредбу којом се број темена основе пирамиде на коју показује декларисани показивач *p, поставља на 6: ",
    "moguci_odgovori": {
        "0": "p.osnova.brojTemena=6;",
        "1": "p.osnova-\f>\fbrojTemena=6;",
        "2": "p-\f>\fosnova.brojTemena=6;",
        "3": "p-\f>\fosnova[brojTemena]=6;",
        "4": "p-\f>\fosnova-\f>\fbrojTemena=6;"
    },
    "tacni_odgovori": [2]
},

"34": {
    "pitanje": "У програмском језику Ц декларисана је променљива fp:FILE *fp; и дата је линија кода програма int poz=ftell(fp); <br> Одредити шта је последица извршавања дате линије кода.",
    "moguci_odgovori": {
        "0": "Позиционира се на почетак датотеке ",
        "1": "Позиционира се на крај датотеке",
        "2": "Затвара датотеку",
        "3": "Утврђује тренутну позицију у датотеци"
    },
    "tacni_odgovori": [3]
},

"35": {
    "pitanje": "У програмском језику Ц декларисана је променљива fp: FILE *fp;и линија кода програма fseek(fp,br,SEEK_CUR); <br> Одредити шта је последица извршавања дате линије кода.",
    "moguci_odgovori": {
        "0": "Позиционира се на почетак датотеке ",
        "1": "Позиционира се на крај датотеке ",
        "2": "Позиционира се на br бајтова од почетка датотеке ",
        "3": "Позиционира се на br бајтова од краја датотеке",
        "4": "Позиционира се на br бајтова од тренутне позиције у датотеци"
    },
    "tacni_odgovori": [4]
},

"36": {
    "pitanje": "У програмском језику Ц дат је код програма у коме заглавље main има следећи изглед: void main(int argc, char *argv[])Програм PRIMER.EXE, који има овакво заглавље main функције, стартовати из командне линије наредбом: <br> <br> C:\\TC\\BIN\f>\fPRIMER A:\\primer1.txt A:\\primer2.txt <br> Одредити које су вредности улазних аргумената argc и argv функције main након стартовања програма PRIMER.EXE. ",
    "moguci_odgovori": {
        "0": "аrgc = 3 argv[0] = PRIMER argv[1] = A:\\primer1.txt argv[2] =A:\\primer2.txt",
        "1": "аrgc = 2 argv[0] = A:\\primer1.txt argv[1] = A:\\primer2.txt",
        "2": "аrgc = 2 argv[0] = primer1.txt argv[1] = primer2.txt",
        "3": "аrgc = 3 argv[0] = PRIMER argv[1] = primer1.txt argv[2] = primer2.txt"
    },
    "tacni_odgovori": [0]
},

"37": {
    "pitanje": "У програму написаном у програмском језику Ц декларисана је променљива fp која представља показивач на бинарну датотеку и променљива podatak чија вредност ће се уписати у дефинисану бинарну датотеку. Одредити која од понуђених наредби омогућава упис три бајта у бинарну датотеку:",
    "moguci_odgovori": {
        "0": "fprintf(&podatak, 3, 1, fp);",
        "1": "fprintf(fp, 3, &podatak);",
        "2": "fwrite(podatak, 24, 1, fp);",
        "3": "fwrite(&podatak, 24, 0, fp);",
        "4": "fwrite(&podatak, 3, 1, fp);"
    },
    "tacni_odgovori": [4]
},

"38": {
    "pitanje": "У програму написаном у програмском језику Ц декларисана је променљива fp која представља показивач на бинарну датотеку и променљива podatak у коју ће се уписати прочитани подаци из дефинисане бинарне датотеке. Одредити која од понуђених наредби омогућава учитавање три бајта са тренутне позиције из бинарне датотеке: ",
    "moguci_odgovori": {
        "0": "fread(podatak, 24, 1, fp);",
        "1": "fread(&podatak, 24, 0, fp);",
        "2": "fread(&podatak, 3, 1, fp);",
        "3": "fscanf(&podatak, 3, 1, fp);",
        "4": "fscanf(fp, 3, &podatak);"
    },
    "tacni_odgovori": [2]
},

"39": {
    "pitanje": "Декларисанe су две реалне променљиве које представљају реални и имагинарни део комплексног броја float Re, Im; Кроз извршавање програма ове променљиве могу добити било коју (позитивну или негативну) вредност. Која од наредби приказа ће приказати комплексни број у облику: Z = 1.50 +3.20 j тј. Z = -1.50 -3.20 j (у зависности од знака реалног и имагинарног дела броја):",
    "moguci_odgovori": {
        "0": "printf(\"Z = %.2f %+.2f j\", re, im);",
        "1": "printf(\"Z = %.2f +%.2f j\", re, im);",
        "2": "printf(\"Z = %+.2f %+.2f j\", re, im);",
        "3": "printf(\"Z = %-.2f %-.2f j\", re, im);"
    },
    "tacni_odgovori": [0]
},

"40": {
    "pitanje": "У програмском језику Ц је дата декларација променљивих, а касније у коду извршен позив функције на следећи начин: <br> int k, i; <br> char lista[10][50], ime[50]; <br> <br> if( Formiraj(lista[i], ime, k) == NULL) { ... } <br> <br> На основу позива, проценити каквог је облика прототип функције. ",
    "moguci_odgovori": {
        "0": "void *Formiraj(char s1, char s2, int x); ",
        "1": "char Formiraj(char *s1, char *s2, int x); ",
        "2": "int *Formiraj(char s1[], char s2[], int x); ",
        "3": "int Formiraj(char s1[], char s2[], int x); ",
        "4": "char *Formiraj(char s1, char s2, int x);"
    },
    "tacni_odgovori": [2]
},

"41": {
    "pitanje": "У програмском језику Ц, декларисан је и иницијализован низ целих бројева: <br> <br> int А[7] = {100, 150, 200, 252, 300, 350, 400}; <br> <br> Низ се претражује методом бинарне претраге. Тражена вредност је 300. Одредити број приступа низу (број покушаја) потребних да се пронађе тражена вредност. ",
    "moguci_odgovori": {
        "0": "Два",
        "1": "Три",
        "2": "Пет",
        "3": "Седам"
    },
    "tacni_odgovori": [1]
},

"42": {
    "pitanje": "У програмском језику Ц је дата декларација променљивих, а касније у коду извршен позив функције на следећи начин: <br> <br> int x, y, i, j; <br> float **mat, *vek, z; <br> <br> mat[i] = Formiraj(x, 0.5); <br> <br> На основу позива, проценити каквог је облика прототип функције. ",
    "moguci_odgovori": {
        "0": "float Formiraj(int n, float m); ",
        "1": "void *Formiraj(int n, int m);",
        "2": "float *Formiraj(float n, int m);",
        "3": "float *Formiraj(int n, float m);",
        "4": "float **Formiraj(int n, float m);"
    },
    "tacni_odgovori": [3]
},

"43": {
    "pitanje": "Дата је декларација променљивих и део програмског кода: <br> <br> int i, j, n, x[100], temp; <br> i=0; <br> j=n-1; <br> while(i\f<\fj) temp=x[i], x[i]=x[j], x[j]=temp, i++, j--; <br> <br> Након извршења while циклуса низ x је преуређен. Проценити шта ради овај циклус. ",
    "moguci_odgovori": {
        "0": "Сортира низ x од n елемената у растућем редоследу",
        "1": "Сортира низ x од n елемената у опадајућем редоследу",
        "2": "Инвертује (обрће) елементе низа x од n елемената",
        "3": "Ротира низ x од n елемената за једно место у лево",
        "4": "Ротира елементе низа x од n елемената за једно место у десно"
    },
    "tacni_odgovori": [2]
},
"44": {
    "pitanje": "Декларисане су две целобројне променљиве. Променљива а добија вредност уносом са тастатуре. Затим се вредност логичког израза додељује променљивој х: <br> <br> int x, а; <br> scanf(\"%d\", &a); <br> x = 10!=5 || a\f<\f2; <br> <br> Имајући у виду приоритет оператора, одредити вредност променљиве х после извршења ове наредбе.",
    "moguci_odgovori": {
        "0": "Уколико се заградама не одредити редослед извршавања операција у овом изразу, долази до грешке, тј. „пуцања“ програма ",
        "1": "Без обзира на вредност која се унесе у променљиву а, вредност израза је увек „тачно“, тј. X = 1 ",
        "2": "Без обзира на вредност која се унесе у променљиву а, вредност израза је увек „нетачно“, тј. X = 0",
        "3": "Вредност израза зависи од променљиве а и не може се једнозначно одредити уколико није позната вредност уписана у променљиву а "
    },
    "tacni_odgovori": [1]
},

"45": {
    "pitanje": "Проценити шта ради следећи део Ц кода са подацима а, b, c и d. <br> <br> a=a+(b+c+d); <br> b=a-(b+c+d); <br> c=a-(b+c+d); <br> d=a-(b+c+d); <br> a=a-(b+c+d); <br> printf(\"%d%d %d %d \",a,b,c,d);",
    "moguci_odgovori": {
        "0": "Сортира податке у растућем редоследу.",
        "1": "Сортира податке у опадајућем редоследу",
        "2": "Врши замену података цикличним помаком у десно",
        "3": "Врши замену података цикличним помаком у лево"
    },
    "tacni_odgovori": [2]
},

"46": {
    "pitanje": "Дат је део кода на програмском језику Ц. Анализирати код и одредити које вредности целобројних података a и b ће се исписати након извршења следећих наредби за излаз. <br> <br> int a = 10, b = 2; <br> printf (\"a = %d b = %d\\n\", a, b); <br> printf (\"a---b = %d\\n\", a-- -b); <br> printf (\"a = %d b = %d\\n\", a, b); <br> printf (\"++a+b++ = %d\\n\", ++a + b++); <br> printf (\"a = %d b = %d\\n\", a, b); ",
    "moguci_odgovori": {
        "0": "a = 10b = 2 <br> a---b = 9 <br> a = 9 b = 3 <br> ++a+b++ = 11 <br> a = 10b = 3",
        "1": "a = 10b = 2 <br> a---b = 7 <br> a = 9 b = 2 <br> ++a+b++ = 12 <br> a = 10b = 3",
        "2": "a = 11b = 2 <br> a---b = 8 <br> a = 10b = 3 <br> ++a+b++ = 13 <br> a = 10b = 4 ",
        "3": "a = 10b = 2 <br> a---b = 8 <br> a = 9 b = 2 <br> ++a+b++ = 12 <br> a = 10b = 3 "
    },
    "tacni_odgovori": [3]
},
"47": {
    "pitanje": "У програмском језику Ц декларисане су две целобројне променљиве int k, p;Следећу switch структуру реализовати помоћу if структуре. <br> <br> switch(k){ <br> case 1: case 3: case 5: p-=1;break; <br> case 4: p=p-2;break; <br> } ",
    "moguci_odgovori": {
        "0": "if(k==1 && k==3&& k==4&& k==5) p--;",
        "1": "if(k==1 || k==3 || k==5) p--; elseif(k==4) p-=2;",
        "2": "if(k=1 || k=3 || k=5) p--; elseif(k=4) p-=2;",
        "3": "if(k==1 || k==3|| k==4 || k==5) p--; "
    },
    "tacni_odgovori": [1]
},

"48": {
    "pitanje": "Дат је код на програмском језику Ц: <br> <br> switch(c){ <br> case'P': case'p': printf(\"Pravougaonik \"); <br> case'T': case't': printf(\"Trougao \"); <br> case'K': case'k': printf(\"Krug \"); <br> default: printf(\"Nije geometrijska figura \"); <br> } <br> <br> Имајући у виду да је променљивој char c додељена је вредност 'Т', који од понуђених одговора представља садржај приказан на екрану по извршењу датог програмског сегмента: ",
    "moguci_odgovori": {
        "0": "Trougao",
        "1": "Trougao Krug",
        "2": "Trougao Krug Nije geometrijska figura",
        "3": "Pravougaonik Trougao Krug Nije geometrijska figura"
    },
    "tacni_odgovori": [2]
},

"49": {
    "pitanje": "У програмском језику Ц декларисане су две целобројне променљиве int k, p; <br> Следећу switch структуру реализовати помоћу if структуре. <br> <br> switch(k){ <br> case 1: case 3: case 5: p-=1;break; <br> case 4: p=p-1;break; <br> } ",
    "moguci_odgovori": {
        "0": "if(k==1 && k==3&& k==4&& k==5) p--; ",
        "1": "if(k==1 || k==3 || k==4|| k==5) p--; ",
        "2": "if(k=1 || k=3 || k=4 || k=5) p--; ",
        "3": "if(k=1 && k=3&& k=4 && k=5) p--; "
    },
    "tacni_odgovori": [1]
},

"50": {
    "pitanje": "У програмском језику Ц декларисане су две целобројне променљиве int k, p;Следећу switch структуру реализовати помоћу if структуре. <br> <br> switch(k){ <br> case 1: case 3: case 5: p-=1; <br> case 4: p=p-1; <br> } ",
    "moguci_odgovori": {
        "0": "if(k==1 && k==3&& k==4&& k==5) p--;",
        "1": "if(k==1 || k==3 || k==5) p-=2; elseif(k==4) p-=1;",
        "2": "if(k=1 || k=3 || k=5) p--; elseif(k=4) p--;",
        "3": "if(k==1 || k==3|| k==4 || k==5) p--; "
    },
    "tacni_odgovori": [1]
},

"51": {
    "pitanje": "Дат је део кода на програмском језику Ц који контролише унос карактер променљиве izbor. Анализирати шта се дешава ако корисник у моменту када програм затражи унос избора, укуца слово d. Каква ће бити реакција кода: <br> <br> char izbor; <br> printf('Za izbor unesite D ili N: '); <br> do{ <br> izbor = getch(); <br> }while(izbor!= 'D'&& izbor!='N'); <br> putch(izbor);",
    "moguci_odgovori": {
        "0": "На екрану се приказује унето слово d, излази се из петље и наставља са извршењем програма",
        "1": "На екрану се приказује унето слово d, али се не излази из петље већ се чека унос слова D или N ",
        "2": "На екрану се не приказује ништа и програм се понаша као да „не реагује“ на унос слова d",
        "3": "На екрану се не приказује унето слово, већ само порука којом се тражи поновни унос"
    },
    "tacni_odgovori": [2]
},

"52": {
    "pitanje": "Дат је део кода на програмском језику Ц којим је потребно реализовати унос текста знак по знак са тастатуре, до задавања знака за крај стандардног улаза (CTRL+Z) Код треба да преброји унете знаке не узимајући у обзир знак за крај. Одредити коју наредбу треба убацити на ЈЕДНУ од означених позиција у телу петље да би код био функционалан: <br> <br> char slovo;int brojac=0; <br> while(1){ <br> a) __________________ <br> b) slovo = getchar(); <br> c) __________________ <br> d) brojac++; <br> }",
    "moguci_odgovori": {
        "0": "Наредбу if(slovo==NULL)break;уметнути у линију c)",
        "1": "Наредбу if(slovo==EOF)break;уметнути у линију c)",
        "2": "Наредбу if(slovo==EOF)continue;уметнути у линију a)",
        "3": "Наредбу if(slovo==NULL)continue;уметнути у линију c)",
        "4": "Наредбу if(slovo==EOF)break; уметнути у линију a)"
    },
    "tacni_odgovori": [1]
},

"53": {
    "pitanje": "Дат је део кода на програмском језику Ц којим је потребно реализовати унос и пребројавање унетих цифара. Унос понављати све док се не нађе први знак који није цифра. Одредити коју наредбу треба убацити на означене позиције у кôд да би он био функционалан: <br> <br> char cifra; <br> int brojac=0; <br> while(1) <br> { <br> cifra = getch(); <br> if(________________________){ putch('\\n'); _________ } <br> putch(cifra); <br> brojac++; <br> }",
    "moguci_odgovori": {
        "0": "На прву линију:cifra\f<\f0 || cifra\f>\f9, а на другу:break;",
        "1": "На прву линију:cifra\f<\f'0'&& cifra\f>\f'9', а на другу:break;",
        "2": "На прву линију:cifra\f>\f='0'&& cifra\f<\f='9', а на другу:continue;",
        "3": "На прву линију:cifra\f<\f'0' || cifra\f>\f'9', а на другу:break;",
        "4": "На прву линију: cifra\f<\f'0' || cifra\f>\f'9', а на другу:continue;"
    },
    "tacni_odgovori": [3]
},

"54": {
    "pitanje": "Дат је део кода на програмском језику Ц: <br> <br> for(j=0; j\f<\fn; j++) <br> if(a[j]\f>\f0)s+=a[j]; <br> elsebreak; <br> <br> Свака for петља може се написати коришћењем while и do-while наредбе. Одредити који од понуђених кодова је еквивалентан коду датом у тексту задатка: ",
    "moguci_odgovori": {
        "0": "j=0; <br> while(j\f<\\fn && a[j]\f>\f0) s+=a[j++];",
        "1": "j=0; <br> while(j\f<\fn && a[j++]\f>\f0) s+=a[j];",
        "2": "j=0; <br> while(j\f<\fn || a[j]\f>\f0) s+=a[j++]; ",
        "3": "j=0; <br> while(j\f<\fn && a[j]\f<\f=0) s+=a[j++];" },
    "tacni_odgovori": [0]
},

"55": {
    "pitanje": "Дат је Ц код, који након извршавања исцртава слику помоћу звездица. <br> <br> int i,j,n=7; <br> for(i=1;i\f<\f=n/2;i++){ <br> for(j=1;j\f<\f=n/2-i+1;j++) printf(\" \"); <br> printf(\"*\"); <br> for(j=1;j\f<\f=2*(i-1);j++) printf(\" \"); <br> printf(\"\\b*\\n\"); <br> } <br> for(i=1;i\f<\f=n;i++) printf(\"* \"); <br> <br> Анализирати дати код и одредити која слика ће бити исцртана након његовог извршавања. ",
    "moguci_odgovori": {
        "0": "Primer za n = 7 <br> <br> * * * * * * * <br> * * * * * <br> * * * <br> * ",
        "1": "Primer za n = 7 <br> <br> * * * * * * *     * * * * *   * * *     * ",
        "2": "Primer za n = 7 <br> <br> * <br> *   * <br> *       * <br> * * * * * * * ",
        "3": "Primer za n = 7 <br> <br> * <br> * * * <br> * * * * * <br> * * * * * * * ",
        "4": "Primer za n = 7 <br> <br> * * * * * * * <br> *       * <br> *   * <br> * "
    },
    "tacni_odgovori": [2]
},

"56": {
    "pitanje": "Датa је декларација променљивих unsigned a,b,x и део кода у програмском језику Ц. Одредити шта се налази као резултат у променљивој x након извршења дате наредбе. <br> <br> unsigned a, b, x; <br> x=0; <br> while(a\f>\f=b){ <br> a-=b; <br> x++; <br> } ",
    "moguci_odgovori": {
        "0": "Производ a и b",
        "1": "Збир a и b",
        "2": "Остатак приликом делења",
        "3": "Количник при дељењу a са b"
    },
    "tacni_odgovori": [3]
},

"57": {
    "pitanje": "Датa је декларација променљивих unsigned a,b, x,y, temp и део кода у програмском језику Ц. Одредити шта се налази као резултат у променљивој x и y након извршења датог кода. <br> <br> unsigned a, b, x, y, temp; <br> x=a*b; <br> while(b) temp=a%b, a=b, b=temp; <br> y=b; <br> x/=y; ",
    "moguci_odgovori": {
        "0": "X је производ а и b, а y је количник а са b",
        "1": "X је најмањи заједнички садржалац за а и b, а y највећи заједнички делилац за а и b",
        "2": "X је највећи заједнички делилац за а и b, а y најмањи заједнички садржалац за а и b ",
        "3": "Без обзира на вредности променљивих, долази до грешке у последњој наредби кода",
        "4": "Долази до грешке јер петља понавља само прву наредбу услед изостанка витичастих заграда на телу петље"
    },
    "tacni_odgovori": [3]
},

"58": {
    "pitanje": "Датa је декларација променљивих pod,br и део кода у програмском језику Ц. Закључити шта представља вредност коју променљива br добије извршењем кoда: <br> <br> unsigned pod, br ; <br> pod=128; <br> br=0; <br> while(pod!=0){ <br> if(pod & 0x1) br++; <br> pod\f>\f\f>\f=0x1; <br> } ",
    "moguci_odgovori": {
        "0": "Број јединица у бинарном запису броја pod",
        "1": "Број нула у бинарном запису броја pod",
        "2": "Број цифара у бинарном запису броја pod",
        "3": "Број цифара у хексадецималном запису броја pod"
    },
    "tacni_odgovori": [0]
},

"59": {
    "pitanje": "Дат је део кода на програмском језику Ц, који контролише унос целобројне променљиве n. Одредити вредности које променљива n може добити. <br> <br> do{ <br> printf(\"Unesite N:\\nN = \"); <br> scanf(\"%d\",&n); <br> if(n & 1) printf(\"Greska.\\n\"); <br> }while(n & 1);",
    "moguci_odgovori": {
        "0": "Омогућава унос непарног природног броја",
        "1": "Омогућава унос само позитивног природног броја",
        "2": "Омогућава унос само негативног природног броја",
        "3": "Омогућава унос парног природног броја",
        "4": "Омогућава унос само непарног позитивног природног броја"
    },
    "tacni_odgovori": [3]
},

"60": {
    "pitanje": "Дата је декларација променљивих и део програмског кода: <br> <br> int i, temp, n = 11; <br> int x[30]={ -3, -1, -2, -2, 1,4, 3, 1, 5, -8,5}; <br> temp=x[0]; <br> i=0; <br> while(i\f<\fn-1) x[i++]=x[i+1]; <br> x[n-1]=temp; <br> <br> Просудити на основу наредби које ће бити извршене у while циклусу како ће изгледати трансформисан низ x од n елемената. ",
    "moguci_odgovori": {
        "0": "x[ ] ={ 5, -3, -1, -2, -2, 1, 4, 3, 1, 5, -8}",
        "1": "x[ ] ={ -1, -2, -2, 1, 4, 3, 1, 5, -8, 5, -3 }",
        "2": "x[ ] ={ -2, 0, -1, -1, 2, 5, 4, 2, 6, -7, 6 }",
        "3": "x[ ] ={ -1, -2, -2, 1, 4, 3, 1, 5, -8, 5 }"
    },
    "tacni_odgovori": [1]
},

"61": {
    "pitanje": "Дата је декларација променљивих и део програмског кода: <br> <br> int x[40] ={5, 8, 1, 2, 2, 6, 6, 6, 5}; <br> int br=0, i,n, j; <br> for(i=0;i\f<\fn;i++){ <br> j=0; <br> while(j\f<\fi && x[j]!=x[i]) j++; <br> if(i==j) br++; <br> } <br> <br> Израчунати вредност коју ће променљива br имати по извршењу for циклуса. ",
    "moguci_odgovori": {
        "0": "7",
        "1": "10",
        "2": "5",
        "3": "6"
    },
    "tacni_odgovori": [2]
},

"62": {
    "pitanje": "Сортирање представља процес преуређивања скупа података по неком утврђеном поретку. Дат је део кода на програмском језику Ц који представља један од алгоритама за сортирање. Анализирати дати код и од понуђених одговора изабрати ком алгоритму сортирања припада: <br> <br> for(i=1;i\f<\fn;i++) { <br> temp=a[i]; <br> j=i-1; <br> while(j\f>\f=0 && a[j]\f>\ftemp) a[j+1]=a[j--]; <br> a[j+1]=temp; <br> } ",
    "moguci_odgovori": {
        "0": "selection sort",
        "1": "shell sort",
        "2": "boubble sort",
        "3": "comare selection sort",
        "4": "insertion sort"
    },
    "tacni_odgovori": [4]
},

"63": {
    "pitanje": "Са леве стране је дат редни број, а са десне садржај линије кода написан у програмском језику Ц. Неке од датих наредби ће изазвати грешку или при компајлирању или при извршењу кода: <br> <br> Редни број линије кода      Линија кода <br> a)      int *poc1,a=10; <br> b)      double *poc2; <br> c)      poc1=&8; <br> d)      poc1=&a; <br> e)      poc2=poc1; <br> <br> Заокружити редни број испред одговора у коме су наведене ознаке наредби које изазивају грешку:",
    "moguci_odgovori": {
        "0": "a), b), c)",
        "1": "c), e)",
        "2": "a), c), e)",
        "3": "b), e)"
    },
    "tacni_odgovori": [1]
},

"64": {
    "pitanje": "У програмском језику Ц дата је наредба која декларише и иницијализује променљиве а,b и c. <br> <br> struct elem1{ <br> int x,y; <br> }; <br> struct elem{ <br> struct elem1 poz; <br> int oblik; <br> }; <br> struct elem a = {{1,5},3}, *b, c; <br> b=malloc(sizeof(struct elem)); <br> <br> Koja je наредбa доделе између декларисаних променљивих нетачно написанa:",
    "moguci_odgovori": {
        "0": "c.poz.x = a.poz.x; <br> c.poz.y = a.poz.y; <br> c.oblik = a.oblik;",
        "1": "b-\f>\fpoz.x = a.poz.x; <br> b-\f>\fpoz.y = a.poz.y; <br> b-\f>\foblik = a.oblik;",
        "2": "c = a;",
        "3": "b=a;",
        "4": "b=&a",
        "5": "*b=a;"
    },
    "tacni_odgovori": [4,5]
},

"65": {
    "pitanje": "Дат је део кода у програмском језику Ц. Проценити који од наведених исказа тачно одрећује шта ће се десити након његовог извршавања. <br> <br> int n=10, *poc, *x = (int*)malloc(n*sizeof(int)); <br> for(poc=x; poc\f<\fx+n; poc++) *poc=0;",
    "moguci_odgovori": {
        "0": "Извршавањем кода статички се резервише (алоцира) меморија за смештање низа и врши се иницијализација проласком кроз низ помоћу показивача.",
        "1": "Извршавањем кода дефинише се низ у динамичкој зони меморије и иницијализује проласком кроз низ помоћу индекса",
        "2": "Извршавањем кода дефинише се низ у динамичкој зони меморије и иницијализује проласком кроз низ помоћу показивача.",
        "3": "Извршавањем кода статички се алоцира меморија за низ и врши се иницијализација проласком кроз низ помоћу индекса."
    },
    "tacni_odgovori": [2]
},

"66": {
    "pitanje": "Дат је код рекурзивне функције написан у програмском језику Ц: <br> <br> void prikaz(int k, int n){ <br> printf(\"%d\\t\",k); <br> if(k\f<\fn) prikaz(k+1,n); <br> printf(\"%d\\t\",k); <br> } <br> <br> Проценити шта ће се десити ако се функција позове наредбом: prikaz(4,10);",
    "moguci_odgovori": {
        "0": "4 5 6 7 8 9 10",
        "1": "4 5 6 7 8 9 10 9 8 7 6 5 4",
        "2": "4 5 6 7 8 9 10 10 9 8 7 6 5 4",
        "3": "10 9 8 7 6 5 4"
    },
    "tacni_odgovori": [2]
},

"67": {
    "pitanje": "Дат је код рекурзивне функције написан у програмском језику Ц. Проценити шта ће се десити након њеног извршавања. <br> <br> int fun(int a[], int n) <br> { <br> return (n\f>\f0) ? a[0] + fun(a+1, n-1) : 0; <br> } ",
    "moguci_odgovori": {
        "0": "Сортира низ а од n елемената у растућем редоследу",
        "1": "Сваки елемент низа а од n елемената инкрементује",
        "2": "Сваки елемент низа а од n елемената увећава за вредност првог елемента низа а",
        "3": "Израчунава суму елемената низа а од n елемената.",
        "4": "Обрће елементе низа а од n елемената."
    },
    "tacni_odgovori": [3]
},

"68": {
    "pitanje": "Дат је код функције fun() написане у програмском језику Ц. Изабрати којој функцији из стандардне библиотеке функција ctype.h одговара дата функција. <br> <br> int fun(char c) <br> { <br> return ((c\f>\f='a'&&c\f<\f='z') || <br> (c\f>\f='A'&&c\f<\f='Z') || <br> (c\f>\f='0'&&c\f<\f='9')) ? 1 : 0; <br> } ",
    "moguci_odgovori": {
        "0": "isupper",
        "1": "isalpha",
        "2": "gets",
        "3": "strncat",
        "4": "atoi",
        "5": "strchr",
        "6": "stricmp",
        "7": "isalnum"
    },
    "tacni_odgovori": [7]
},

"69": {
    "pitanje": "Дат је део кода у програмском језику Ц који представља дефиницију функције са прототипом int *trazi(int x[], int n). Проценити шта враћа дефинисана функција. <br> <br> int *trazi(int x[], int n) <br> { <br> int *poc=x; <br> <br> while(poc\f<\fx+n && (*poc\f<\f10 || *poc\f>\f99)) poc++; <br> if(poc==x+n) return NULL; <br> else return poc; <br> } <br> <br> Одредити исказ који тачно описује повратну вредност функције: ",
    "moguci_odgovori": {
        "0": "Враћа вредност првог двоцифреног броја низа x од n елемената, а ако двоцифреног броја нема враћа NULL.",
        "1": "Враћа вредност последњег позитивног двоцифреног броја низа x од n елемената, аако нема позитивних двоцифрених бројева, враћа NULL.",
        "2": "Враћа адресу првог позитивног двоцифреног броја низа x од n елемената, а ако нема позитивних двоцифрених бројева, враћа показивач на почетак низа.",
        "3": "Враћа адресу првог позитивног двоцифреног броја низа x од n елемената, а ако низ нема позитивних двоцифрених бројева, враћа NULL.",
        "4": "Враћа адресу последњег позитивног двоцифреног броја у низу x од n елемената или NULL ако низ нема позитивних двоцифрених бројева."
    },
    "tacni_odgovori": [3]
},

"70": {
    "pitanje": "Дат је код функције fun() написане у програмском језику Ц. Изабрати којој функцији из стандардне библиотеке функција ctype.h одговара дата функција. <br> <br> int fun(char c) <br> { <br> return (c\f>\f='A'&& c\f<\f='Z') ? 1 : 0; <br> }",
    "moguci_odgovori": {
        "0": "isupper",
        "1": "isalpha",
        "2": "gets",
        "3": "strncat",
        "4": "atoi",
        "5": "strchr",
        "6": "strcmp"
    },
    "tacni_odgovori": [0]
},

"71": {
    "pitanje": "Дат је код функције fun(...) написане у програмском језику Ц. Изабрати којој стандардној функцији одговара дата функција. <br> <br> int fun(char *s) { <br> int n, sign; <br> while(*s==' ' || *s=='\\t') s++; <br> sign = (*s=='-') ? -1 : 1; <br> if(*s=='+' || *s=='-') s++; <br> for(n=0; *s\f>\f='0'&& *s\f<\f='9'; s++) n=10*n+ *s - '0'; <br> return (!*s) ? sign*n : 0; <br> } ",
    "moguci_odgovori": {
        "0": "isupper",
        "1": "isalpha",
        "2": "gets",
        "3": "strncat",
        "4": "atoi",
        "5": "strchr",
        "6": "strcmp"
    },
    "tacni_odgovori": [4]
},

"72": {
    "pitanje": "Дат је код функције fun() написане у програмском језику Ц. Изабрати којој стандарднoj функцији одговара дата функција. <br> <br> char *fun(char *s) { <br> char c,*temp; <br> temp=s; <br> while((c=getchar())!='\\n')*temp++=c; <br> *temp='\\0'; <br> return s; <br> } ",
    "moguci_odgovori": {
        "0": "isupper",
        "1": "isalpha",
        "2": "gets",
        "3": "strncat",
        "4": "atoi",
        "5": "strchr",
        "6": "strcmp"
    },
    "tacni_odgovori": [2]
},

"73": {
    "pitanje": "Дат је кодфункције fun(...) написане у програмском језику Ц. Анализирати код и одредити којој стандардној функцији одговара дата функција. <br> int fun(char *s, char *t) { <br> char tempt, temps; <br> while(*s && *t){ <br> if(*t\f>\f='A'&& *t\f<\f='Z') tempt = 'a' + *t -'A'; <br> else tempt=*t; <br> if(*s\f>\f='A'&& *s\f<\f='Z') temps = 'a' + *s -'A'; <br> else temps=*s; <br> if(temps != tempt) return temps - tempt; <br> else s++, t++; <br> } <br> return *s - *t; . <br> }",
    "moguci_odgovori": {
        "0": "isupper",
        "1": "isalpha",
        "2": "gets",
        "3": "strncat",
        "4": "atoi",
        "5": "strchr",
        "6": "strcmp"
    },
    "tacni_odgovori": [6]
},

"74": {
    "pitanje": "Код дат у тексту задатка треба реализовати помоћу једне if наредбе. Која је наредба у питању: <br> <br> if(x\f>\f1) <br> { <br> if(x\f<\f6) <br>  y=4; <br> } ",
    "moguci_odgovori": {
        "0": "if(x\f>\f1 && x\f<\f6 ) y=4;",
        "1": "if(x\f>\f1 || x\f<\f6 ) y=4;",
        "2": "if(x\f<\f1 || x>6 ) y=4;",
        "3": "if(!(x\f<\f=1 || x\f>\f=6)) y=4;"
    },
    "tacni_odgovori": [0]
},

"75": {
    "pitanje": "Наведени су искази који се односе на дефиницију while циклуса. Који од ових исказа су тачни:",
    "moguci_odgovori": {
        "0": "While циклус се извршава све док је услов логичка неистина (једнак нули)",
        "1": "While циклус се користи када се зна колико ће се пута циклус извршавати,",
        "2": "У while циклусу се увек прво проверава да ли је услов логичка истина, те ако јесте наредба се извршава",
        "3": "Код while циклуса се може десити да се тело циклуса не изврши ниједном (на почетку услов није задовољен)."
    },
    "tacni_odgovori": [2,3]
},

"76": {
    "pitanje": "Наведени су искази који се односе на дефиницију do while циклуса. Који од ових исказа су тачни: ",
    "moguci_odgovori": {
        "0": "Користи се када се не зна колико ће се пута циклус понављати",
        "1": "Прво се извршава тело циклуса, а затим израчунава вредност логичког израза. Ако се добије логичка неистина циклус се поновно извршава.",
        "2": "Циклус се завршава када услов добија вредност логичке истине.",
        "3": "Циклус се извршава барем једном."
    },
    "tacni_odgovori": [0,3]
},

"77": {
    "pitanje": "У програму на програмском језику Ц, извршена је следећа декларација, а касније и резервација меморијског простора за низ реалних бројева обичне тачности, дужине n: <br> <br> float *B; <br> int n; <br> B=calloc(n,sizeof(float)); <br> <br> Означи исправно написане наредбе за приказ вредности i-тог елемента низа B:",
    "moguci_odgovori": {
        "0": "printf(\"%f\", B[i]);",
        "1": "printf(\"%f\", &B[i]); ",
        "2": "printf(\"%f\", B+i);",
        "3": "printf(\"%p\", *(B+i));",
        "4": "printf(\"%f\", *(B+i));"
    },
    "tacni_odgovori": [0,4]
},

"78": {
    "pitanje": "У програму на програмском језику Ц, извршена је следећа декларација, а касније и резервација меморијског простора за низ реалних бројева обичне тачности, дужине n: <br> <br> float *B; <br> int n; <br> B=calloc(n,sizeof(float)); <br> <br> Означи исправно написане наредбе за унос вредности i-тог елемента низа B: ",
    "moguci_odgovori": {
        "0": "scanf(\"%f\", B[i]); ",
        "1": "scanf(\"%f\", B+i);",
        "2": "scanf(\"%p\", B+i);",
        "3": "scanf(\"%f\", &B[i]);",
        "4": "scanf(\"%f\", *(B+i));"
    },
    "tacni_odgovori": [1,3]
},

"79": {
    "pitanje": "У програмском језику Ц дефинисане су структуре које омогућавају груписање података различитих типова. Дефинисати структурни тип податка Tucenik са пољима ime (максимално 30 карактера), prezime (максимално 30 карактера) и prosek (типа double). Одредити исправно написане декларације структурног типа Tucenik: ",
    "moguci_odgovori": {
        "0": "typedef struct ucenik{ <br>  char ime[30]; <br>  char prezime[30]; <br>  double prosek; <br>  }Tucenik; ",
        "1": "typedef struct ucenik{ <br>  char ime[31]; <br>  char prezime[31]; <br>  double prosek; <br>  }Tucenik;",
        "2": "struct ucenik{ <br>  char ime[30]; <br>  char prezime[30]; <br>  double prosek; <br> }Tucenik;",
        "3": "typedef struct ucenik{ <br> char ime[31],prezime[31]; <br> double prosek; <br>  }Tucenik; "
    },
    "tacni_odgovori": [1,3]
},

"80": {
    "pitanje": "У програмском језику Ц постоје две врсте датотека. Заокружи редне бројеве испред наведених типова датотека ако је подела извршена на основу начина смештања података у датотеку:",
    "moguci_odgovori": {
        "0": "Индекс-секвенцијална датотека",
        "1": "Текстуална датотека",
        "2": "Бинарна датотека",
        "3": "Zip датотека"
    },
    "tacni_odgovori": [1,2]
},

"81": {
    "pitanje": "Дате су наредбе декларације променљивих (са и без иницијализације вредности) написане на програмском језику Ц. Које су од понуђених исправно написане наредбе декларације променљивих: ",
    "moguci_odgovori": {
        "0": "int a=b=c=5;",
        "1": "int a=5, b=5, c=5;",
        "2": "char zn=\"a\";",
        "3": "long a; b=5; c;",
        "4": "int a=0xf2;",
        "5": "char zn='\\b';"
    },
    "tacni_odgovori": [1,4,5]
},

"82": {
    "pitanje": "Дате су наредбе декларације и иницијализације једнодимензионалног низа целих бројева у програмском језику Ц. Kоје од понуђених су исправно написане наредбе декларације и иницијализације једнодимензионалног низа: ",
    "moguci_odgovori": {
        "0": "int a[10]={1,2,3};",
        "1": "int a[5]={-3, -2, -1, 0, 1, 2, 3}; ",
        "2": "int a[]={10,20,30,40,50};",
        "3": "int[5] a={1, 2, 3, 4, 5};",
        "4": "int a={10,20,30,40,50}; ",
        "5": "int a[5]={'1', '2', '3', '4', '5'};"
    },
    "tacni_odgovori": [0,2,5]
},

"83": {
    "pitanje": "Дата je наредба декларације int a, b; Које су од наведених неисправно написане наредбе форматираног уноса података имајући у виду дату декларацију:",
    "moguci_odgovori": {
        "0": "scanf(\"%d%f\", &a, &b);",
        "1": "scanf(\"%d%*d\", &a, &b);",
        "2": "scanf(\"%d%d\", &a, &b);",
        "3": "scanf(\"%d%d\", a, b); ",
        "4": "scanf(\"%d%*d\", &a);",
        "5": "scanf(\"%5d%5d\", &a, &b);"
    },
    "tacni_odgovori": [0,1,3]
},

"84": {
    "pitanje": "Декларисане су следеће променљиве: <br> <br> float x, z; <br> constfloat y; <br> <br> Које су неисправно написане наредбе додела вредности променљивама: ",
    "moguci_odgovori": {
        "0": "x %= y;",
        "1": "x =+ 5;",
        "2": "x += y + 5;",
        "3": "x =/ y + 5;",
        "4": "y = x + z;",
        "5": "x = z = y + 5;"
    },
    "tacni_odgovori": [0,3,4]
},

"85": {
    "pitanje": "Наредбама програмског језика Ц, дата је декларација, а касније у коду и иницијализација динамичке матрице: <br> <br> int **mat; <br> <br> Заокружити бројеве испред понуђених могућих начина обележавања вредности елемента који се налази у и-тој врсти и ј-тој колони динамичке матрице mat: ",
    "moguci_odgovori": {
        "0": "*( mat[ i ] + j )",
        "1": "*( mat + i + j )",
        "2": "* mat[ i ] + j ",
        "3": ". *( *(mat + i ) + j )",
        "4": "**( mat + i + j )",
        "5": "mat[ i ] [ j ]"
    },
    "tacni_odgovori": [0,5]
},

"86": {
    "pitanje": "Наредбама програмског језика Ц, дата је декларација једне симболичке константе и једне константне променљиве: <br> <br> #define k 50 … <br> int m=100; … <br> <br> Одредити исправно написане наредбе декларације дводимензионалног низа целих бројева (матрице):",
    "moguci_odgovori": {
        "0": "int a [ k ][ k ];",
        "1": "int b [ k ][ m ];",
        "2": "int c [ k ][ 10 ];",
        "3": "int x [100 ][ 50]; ",
        "4": "int y [10, 10];",
        "5": "int z [ m ][ 10 ];"
    },
    "tacni_odgovori": [0,2,3]
},

"87": {
    "pitanje": "Наведене су тврдње које се односе на превођење кода процесом компилације. Одредити које од понуђених тврдњи су тачне:",
    "moguci_odgovori": {
        "0": "Код компилаторских језика, после сваке промене у изворном коду неопходно је поновити процес превођења.",
        "1": "Код превођења компилацијом приликом извршења програма, у РАМ меморији рачунара се морају налазити и изворни и извршни код",
        "2": "Компилатор преводи и извршава ред по ред изворног кода.",
        "3": "Код компилације програма процес превођења и процес извршења су временски независни."
    },
    "tacni_odgovori": [0,3]
},

"88": {
    "pitanje": "Дати су прототипови функција написани у програмском језику Ц. Одредити исправно написане прототипове функција: ",
    "moguci_odgovori": {
        "0": "float* pp1(int a, int b, int c);",
        "1": "int pp2(int a[][10], int n); ",
        "2": "int pp3(int a[], n; float b);",
        "3": "void pp4(int *a, int n); ",
        "4": "int pp5(int a[][], int n); ",
        "5": "int pp6(int a[], int n); ",
        "6": "int pp7(int a, b, c);",
        "7": "float[ ] pp8(float a[ ], int n);"
    },
    "tacni_odgovori": [0,1,3,5]
},

"89": {
    "pitanje": "Дата је if-else наредба: <br> <br> if(a==3 || a==5)  p++; <br> else p--;  <br> <br> Одредити који кодови представљају дату стуктуру приказану помоћу једне switch наредбе",
    "moguci_odgovori": {
        "0": "switch(a){   <br> case 3: p++;break;  <br> case 5: p++;break;  <br>  default: p--; }",
        "1": "switch(a){   <br> case 3: case 5: p++;break; <br> p--; } ",
        "2": "switch(a){   <br> case 3: case 5: p++;break; <br> default: p--; } ",
        "3": "switch(a){   <br> case 3: case 5: p++; <br>  default: p--; }"
    },
    "tacni_odgovori": [0,2]
},

"90": {
    "pitanje": "Одредити које од понуђених тврдњи представљају тачне наставке изјаве која се односи на повратну вредност функције fopen: При покушају да датотеку отворимо за писање, функција fopen... ",
    "moguci_odgovori": {
        "0": "Ако датотека не постоји, креира празну датотеку, поставља се на њен почетак и враћа показивач на ту датотеку",
        "1": "Враћа NULL показивач ако датотека не постоји. ",
        "2": "Ако датотека постоји, излази упозорење да ће њен садржај бити уништен при отварању. ",
        "3": "Ако датотека не постоји, изазива грешку која доводи до пуцања програма. ",
        "4": "Ако датотека постоји, уништава њен садржај без упозорења."
    },
    "tacni_odgovori": [0,4]
},

"91": {
    "pitanje": "У програмском језику C је декларисана низовна променљива: int niz[10];  <br> <br> Одредити исправно написане наредбе читања низа целих бројева дужине 10 из бинарног фајла на који показује показивач *in:  ",
    "moguci_odgovori": {
        "0": "fread(niz, sizeof (int),  10, in);",
        "1": "fread(&niz, sizeof (int),  10, in);",
        "2": "fread(&niz, sizeof niz,  1, in);",
        "3": "fread(niz, sizeof niz,  1, in); ",
        "4": "fread(niz, sizeof (niz), 1, *in);",
        "5": "fread(niz, sizeof (int)*10, in);"
    },
    "tacni_odgovori": [0,3]
},

"92": {
    "pitanje": "Дат је прототип функције написан у програмском језику Ц: <br> <br> int Zbir(int n, int m, float **a);  <br> <br> У main функцији дате су следеће декларације променљивих: <br> float M[20][50], *V[20], W; <br> int i, j; <br> <br> Имајући у виду прототип функције, заокружити бројеве испред наведених стварних параметара које се приликом позивања функције Zbir могу наћи на месту фиктивног параметра а: ",
    "moguci_odgovori": {
        "0": "V[i]",
        "1": "M[i]",
        "2": "M[i][j]",
        "3": "W",
        "4": "M",
        "5": "V"
    },
    "tacni_odgovori": [1,5]
},

"93": {
    "pitanje": "У програмском језику C декларисан је структурни тип података Ucenik, а затим и променљива типа Ucenik: <br> <br> typedefstruct <br> { <br> char ime[50]; <br> int razred; <br> int ocene[10]; <br> }Ucenik; … <br> int i; Ucenik x; <br> <br> Одредити исправне начине приступа пољима структурне променљиве x: ",
    "moguci_odgovori": {
        "0": "x.ocene[i]",
        "1": "*x.razred",
        "2": "x-\f>\fime",
        "3": "x[i].ocene",
        "4": "x.ime"
    },
    "tacni_odgovori": [0,4]
},

"94": {
    "pitanje": "У програмском језику Ц декларисан је структурни тип података Putovanje, а затим и променљива типа *Putovanje: <br> <br> typedef struct <br> {  <br>    char start[50], cilj[50]; <br>    int kilometraza; <br> }Putovanje; … <br> Putovanje *p;  <br> <br> Одредити  исправне начине приступа пољима структурне променљиве",
    "moguci_odgovori": {
        "0": "*p-\f>\fkilometraza",
        "1": "(*p).kilometraza",
        "2": "&p-\f>\fkilometraza",
        "3": "p-\f>\fstart",
        "4": "*(p).start"
    },
    "tacni_odgovori": [1,3]
},

"95": {
    "pitanje": "Дата је наредба у Ц језику, која температуру у Целзијусима temc претвара у температуру  у Фаренхајтима temf. Подаци temc и temf су реални бројеви обичне тачности. Проценити који изрази дају тачно решење.",
    "moguci_odgovori": {
        "0": "temf = (9/5)*temc + 32;",
        "1": "temf = 9/5*temc + 32;",
        "2": "temf = 9*temc/5 + 32;",
        "3": "temf = 32+9*temc/5;"
    },
    "tacni_odgovori": [2,3]
},

"96": {
    "pitanje": "У програмском језику Ц написати функцију xcalloc која додељује меморијски простор вектору од n елемената и врши иницијализацију његових елемената. Сваки елемент вектора заузима меморијски простор величине size бајтова. У седму линију кода дописати наредбу која недостаје да би функција извршавала свој задатак. <br> <br> 1.  void *xcalloc(int n, int siz ) <br> 2.  { <br> 3.      int i; <br> 4.      char *p,*q; <br> 5.   <br> 6.      if((p = q = malloc(n*size))!= NULL){ <br> 7.        __________________________________  <br> 8.      } <br> 9.      return q; <br> 10.  }  <br> <br> Заокружити  бројеве  испред наредби које су могуће решење овог проблема: ",
    "moguci_odgovori": {
        "0": "for(i=0; i\f<\fn*size; i++) *p++=0;",
        "1": "for(i=0; i\f<\fsize; i++) p++=0;",
        "2": "for(i=0; i\f<\fn*size; i++) *p=0;",
        "3": "for(i=0; i\f<\fn*size; *p++=0, i++);"
    },
    "tacni_odgovori": [0,3]
},

"97": {
    "pitanje": "Дат је прототип функције написан у програмском језику Ц: <br> void Saberi(int n, int *a, int *b);  <br> <br> У main функцији дате су следеће декларације променљивих: <br> int x[50][50], y[50], m, j, i;  <br> <br> Одредити који су исправно написани позиви декларисане функције: ",
    "moguci_odgovori": {
        "0": "Saberi(m, y[i], y[i+1]);",
        "1": "Saberi(y[i], x[i], x[i+1]);",
        "2": "Saberi(m, y, x[i][j]);",
        "3": "Saberi(y, x[i], x[i+1]);",
        "4": "Saberi(10, y, x[0]); ",
        "5": "Saberi(x[i][j], x[i], x[j]);"
    },
    "tacni_odgovori": [1,4,5]
},

"98": {
    "pitanje": "Дат је прототип функције написан у програмском језику Ц: <br> void Umetni(char *a, char k);  <br> <br> У main функцији дате су следеће декларације променљивих: <br> char s1[20], *s2, s3;  <br> <br> Одредити који су исправно написани позиви декларисане функције: ",
    "moguci_odgovori": {
        "0": "Umetni(s2, s1[i]);",
        "1": "Umetni(s2, s1);",
        "2": "Umetni(s2, ‘A’);",
        "3": "Umetni(s1, s3);",
        "4": "Umetni(*s2, s3);",
        "5": "Umetni(s3, &s1);"
    },
    "tacni_odgovori": [0,2,3]
},

"99": {
    "pitanje": "У програмском језику Ц дата је наредба која декларише променљиве а, b и c. <br> <br> struct elem1{ <br>   int x,y; <br>  }; <br>  struct elem{ <br>   struct elem1 poz; <br>   int oblik; <br>  }; <br> struct elem a = {{1,5},3}, *b, c;  <br> <br> Непосредно за датог кода следе наредбе доделе. Заокружити бројеве испред наредби доделе које ће у датој ситуацији изазвати грешку: ",
    "moguci_odgovori": {
        "0": "c.poz.x = a.poz.x;  <br>  c.poz.y = a.poz.y;  <br>  c.oblik = a.oblik;",
        "1": "b-\f>\fpoz.x = a.poz.x; <br>  b-\f>\fpoz.y = a.poz.y; <br>  b-\f>\foblik = a.oblik; ",
        "2": "c = a;",
        "3": "b=a;",
        "4": "b=&a;",
        "5": "*b=a"
    },
    "tacni_odgovori": [3,5]
},







"100": {
    "pitanje": "Дата је наредба декларације, а затим и наредба форматираног уноса вредности у променљиве, написана на програмском језику Ц: <br> int x, y; <br> scanf(\"%3i%3i\", &x, &y); <br> Следи тастатурни унос у облику: 12345 12345 <br> За сваку променљиву одредити и на одговарајућу линију уписати, коју ће вредност променљива имати по извршењу наредби: <br> <br> 1. променљива x добија вредност x = __________ <br> 2. променљива y добија вредност y = __________ ",
    "moguci_odgovori": {
        "0": "1. x = 123 <br> 2. y = 45 ",
        "1": "1. x = 45 <br> 2. y = 123"
    },
    "tacni_odgovori": [0]
},

"101": {
    "pitanje": "Дата је наредба декларације, а затим и наредба форматираног уноса вредности у променљиве, написана на програмском језику Ц: <br> <br> int a, b; <br> scanf(\"%d%*c%d\", &a, &b); <br> Следи тастатурни унос у облику: 2.3 5 <br> <br> За сваку променљиву одредити и на одговарајућу линију уписати, коју ће вредност променљива имати по извршењу наредби: <br> <br> 1. променљива a добија вредност a = __________ <br> 2. променљива b добија вредност b = __________",
    "moguci_odgovori": {
        "0": "1. a = 3 <br> 2. b = 2 ",
        "1": "1. a = 2 <br> 2. b = 3"
    },
    "tacni_odgovori": [1]
},

"102": {
    "pitanje": "TBU",
    "moguci_odgovori": {
        "0": "TBU",
        "1": "TBU"
    },
    "tacni_odgovori": [0,1]
},

"103": {
    "pitanje": "TBU",
    "moguci_odgovori": {
        "0": "z = sqrt( pow(x,2*n) + pow(y,2*m) ) <--- ovo je tacno",
        "1": "z = sqrt( pow(x,2*n) + pow(y,5*m) )"
    },
    "tacni_odgovori": [0]
},

"104": {
    "pitanje": "Дата је декларација променљивих int a=3, b=15; <br> Израчунати вредност коју ће променљиве имати по извршењу следеће наредбe: <br> b %= ++ a; <br> <br> a = __________ <br> b = __________ ",
    "moguci_odgovori": {
        "0": "a =  4 <br> b = 3",
        "1": "a = 3 <br> b = 4"
    },
    "tacni_odgovori": [0]
},

"105": {
    "pitanje": "Оператором инкрементирања се врши __________________ целобројне променљиве за вредност __________________. ",
    "moguci_odgovori": {
        "0": "smanjivanje <br> 1 ",
        "1": "uvecavanje <br> 1 "
    },
    "tacni_odgovori": [1]
},

"106": {
    "pitanje": "Одредити вредности које ће променљиве x и y имати по извршењу следећег кода: <br> <br> int x=10; <br> int y=20; <br> if(x\f>\f50) <br> x-=10; <br> y+=10; <br> <br> x = ___________    y = ___________",
    "moguci_odgovori": {
        "0": "x = 10 <br> y = 30 ",
        "1": "x = 30 <br> y = 10 "
    },
    "tacni_odgovori": [0]
},

"107": {
    "pitanje": "TBU",
    "moguci_odgovori": {
        "0": " Petar - 0 <br> Misa - 6 <br> Slavko - B <br>  ^ ovo je tacno",
        "1": " Petar - 1 <br> Misa - 3 <br> Slavko - 11"
    },
    "tacni_odgovori": [0]
},

"108": {
    "pitanje": "Дата је наредба форматираног уноса вредности у променљиве, написана на програмском језику Ц: <br> scanf(\"%o%c%x%e\", &x, &y, &z, &w); <br> За сваку променљиву, на основу употребљене конверзије, одредити ког је она типа и уписати на одговарајућу линију: <br> <br> 1. Променљива x је типа: __________ <br> 2. Променљива y је типа: __________ <br> 3. Променљива z је типа: __________ <br> 4. Променљива w је типа: __________ ",
    "moguci_odgovori": {
        "0": "x - int <br> y - char <br> z - float <br> w - int ",
        "0": "x - int <br> y - char <br> z - int <br> w - float "
    },
    "tacni_odgovori": [1]
},

"109": {
    "pitanje": "Дата је декларација једнодимензионалног низа и део програмског кода: <br> <br> int p[200], i, n=10; <br> for(i=0; i\f<\fn; i++) scanf(\"%d\", &p[i]); <br> <br> Одредити вредности израза и уписати их на одговарајућу линију: <br> <br> sizeof p = __________ <br> sizeof p[0] = __________ ",
    "moguci_odgovori": {
        "0": "sizeof p = 800 <br> sizeof p[0] = 4",
        "1": "sizeof p = 4 <br> sizeof p[0] = 800"
    },
    "tacni_odgovori": [0]
},

"110": {
    "pitanje": "TBU",
    "moguci_odgovori": {
        "0": "TBU",
        "1": "TBU"

    },
    "tacni_odgovori": [0,1]
},

"111": {
     "pitanje": "TBU",
    "moguci_odgovori": {
        "0": "TBU",
        "1": "TBU"

    },
    "tacni_odgovori": [0,1]
},

"112": {
     "pitanje": "TBU",
    "moguci_odgovori": {
        "0": "TBU",
        "1": "TBU"

    },
    "tacni_odgovori": [0,1]
},


"113": {
    "pitanje": "ДНаредбама програмског језика Ц декларисана је матрица и три целобројне променљиве: <br> int mat[50][50]; int k, N, Sum=0; <br> где променљива N представља димензију квадратне матрице mat. Допунити изразима који недостају кôд петље која има задатак да одреди збир (Sum) свих елемената на споредној дијагонали матрице: <br> <br> for(k=0; k\f<\f _________; k++) <br> Sum = Sum + mat[_________][_________];",
    "moguci_odgovori": {
        "0": " N <br> k <br> N+k+1",
        "1": " N <br> k <br> N-k-1"
    },
    "tacni_odgovori": [1]
},

"114": {
    "pitanje": "Наредбама програмског језика Ц декларисана је правоугаона матрица и три целобројне променљиве: <br> <br> int mat[10][20]; int k, N, М; <br> где N представља број врста, а М број колoна правоугаоне матрице mat. <br> Допунити изразима који недостају кôд петље која има задатак да дуплира све елементе прве врсте матрице: <br> <br> for(k=0; k< _________; k++) <br> mat[_________][_________]*=2;",
    "moguci_odgovori": {
        "0": " M <br> 0 <br> k",
        "1": " M <br> k <br> 0"
    },
    "tacni_odgovori": [0]
},

"115": {
    "pitanje": "Дата је дефиниција функције: <br> <br> void Transformisi(float *a, float b) <br> { <br> (*a)++; <br> b=b+3; <br> } <br> У главном програму су декларисане променљиве и извршен је позив функције: <br> <br> float x=4, y=7; <br> Transformisi(&x, y); <br> <br> Одредити вредности променљивих x и y и уписати их на назначено место: <br> <br> унутар функције, пре повратка у главни програм: x = _________, y = _________ <br> по повратку из функције, у главном програму: x = _________, y = _________ ",
    "moguci_odgovori": {
        "0": " Pre glavnog programa: <br> x = 5 <br> y = 7 <br> <br> U glavnom programu: <br> x = 5 <br> y = 10",
        "1": " Pre glavnog programa: <br> x = 5 <br> y = 10 <br> <br> U glavnom programu: <br> x = 5 <br> y = 7"
    },
    "tacni_odgovori": [1]
},

"116": {
    "pitanje": "Наредбама програмског језика Ц декларисана је правоугаона матрица и три целобројне променљиве: <br> <br> int mat[10][20]; int x, N, М; <br> <br> где N представља број врста, а М број колoна правоугаоне матрице mat. Допунити изразима који недостају кôд петље која има задатак да дуплира све елементе последње колоне матрице: <br> <br> for(x = 0; x < _________; x++) <br> mat[_________][_________] *= 2;",
    "moguci_odgovori": {
        "0": " N <br> x <br> M-1",
        "1": " N <br> x <br> M+1"
    },
    "tacni_odgovori": [0]
},

"117": {
    "pitanje": "Дат је прототип функције написан синтаксом програмског језика Ц: <br> <br> int Saberi(int a, int b, int c); <br> која сабира бројеве од a до b са кораком промене c. Написати позив функције којим се рачуна и целобројној променљивој x додељује вредност: <br> 10+14+18+22+...+50 ",
    "moguci_odgovori": {
        "0": "Позив функције: <br> x = Saberi(4, 10, 50)",
        "1": "Позив функције: <br> x = Saberi(10, 50, 4)"
    },
    "tacni_odgovori": [1]
},

"118": {
    "pitanje": "Нa програмском језику Ц, декларисани су и иницијализовани стрингови: <br> <br> char s1[]=\"crvena zvezda\"; <br> char s2[]=\"zelengora\"; <br> <br> Одредити и на предвиђену линију уписати садржај стрингова по извршењу следеће наредбе: <br> <br> strncpy(s1,s2,3); <br> s1 = ________________________ <br> s2 = _______________________ ",
    "moguci_odgovori": {
        "0": "s1 = zelena zvezda <br> s2 = zelengora",
        "1": "s1 = zelcrvena zvezda <br> s2 = zelengora"
    },
    "tacni_odgovori": [0]
},

"119": {
    "pitanje": "У програмском језику Ц, дата је декларација структурног типа Complex који описује комплексни број, a затим декларисан показивач на бинарни фајл који у себи садржи комплексне бројеве: <br> <br> typedef struct <br> { <br> float Re, Im; <br> }Complex;… <br> FILE *bin; <br> <br> Уписати програмски код којим у отвореном бинарном фајлу врши позиционирање на последњи комплексни број запамћен у фајлу у циљу ажурирања његове вредности: <br> <br> fseek(______________, ______________, ______________); ",
    "moguci_odgovori": {
        "0": "bin <br> \fSEEK_END\f <br> -sizeof(Complex)",
        "1": "bin <br> -sizeof(Complex) <br> \fSEEK_END\f"
    },
    "tacni_odgovori": [1]
},

"120": {
    "pitanje": "У програмском језику Ц декларисане су две целобројне променљиве: int x=0, izbor; За дате вредности промељивe izbor, одреди вредност промељиве x по извршењу следеће наредбе вишеструког гранања: <br> <br> switch(izbor) <br> { <br> case 1: x += 1; <br> case 2: x += 2; break; <br> case 3: x += 3; <br> default: x = 100; <br> case 4: x += 4; <br> case 5: x += 5; <br> } <br> <br> 1. за izbor=3, x=__________ <br> 2. за izbor=10, x=__________ <br> 3. за izbor=4, x=___________ <br> 4. за izbor=2, x=__________",
    "moguci_odgovori": {
        "0": "pod 3: x = 112 <br> pod 10: x = 109 <br> pod 4: x = 9 <br> pod 2: x = 2",
        "1": "pod 3: x = 112 <br> pod 10: x = 0 <br> pod 4: x = 9 <br> pod 2: x = 2"
    },
    "tacni_odgovori": [0]
},

"121": {
    "pitanje": "Нa програмском језику Ц, декларисани су стрингови: <br> <br> char s1[100]= , s2[100]='biografija'; <br> char *t='planarna geometrija'; <br> <br> Са леве стране написани су изрази. Одредити и на одговарајућу линију уписати тражену вредност стринга по извршењу наведене наредбе (наредбе не посматрати као секвенцу, већ независно једну од друге): <br> <br> strcpy(s1, t); s1=__________ <br> strncpy(s1, t, 4); s1=__________ <br> strcpy(s2, t); s2=__________ <br> strncpy(s2,t+9,3);  s2=__________",
    "moguci_odgovori": {
        "0": "s1 = planarna geometrija <br> s1 = plan <br> s2 = planarna geometrija <br> s2 = geometrija",
        "1": "s1 = planarna geometrija <br> s1 = plan <br> s2 = planarna geometrija <br> s2 = geografija"
    },
    "tacni_odgovori": [1]
},

"122": {
    "pitanje": "Дати су изрази формирани коришћењем математичких оператора. Водећи рачуна о типовима података, одредити вредности датих израза и уписати их на линију у продужетку. Ако израз изазива грешку, уместо вредности, написати error: <br> <br> 1. 10 / 4. = __________ <br> 2. 10. / 5 = __________ <br> 3. -10 % 3 = __________ <br> 4. 10. % 5 = __________ <br> 5. 10 % (-3) = __________ <br> 6. (100/3) % 6 = __________",
    "moguci_odgovori": {
        "0": "1. = 2.5 <br> 2. = 2.0 <br> 3. = -1 <br> 4. = error <br> 5. = 1 <br> 6. = 3",
        "1": "1. = 2.5 <br> 2. = 2.0 <br> 3. = -1 <br> 4. = .0 <br> 5. = 1 <br> 6. = 3"
    },
    "tacni_odgovori": [0]
},

"123": {
    "pitanje": "TBU",
    "moguci_odgovori": {
        "0": "TBU",
        "1": "TBU"
    },
    "tacni_odgovori": [0,1]
},

"124": {
    "pitanje": "У програмском језику Ц, декларисане су и иницијализоване променљиве: <br> <br> int x=40, y=50, z=60, *p1, *p2; <br> <br> Одреди које ће вредности имати променљиве x, y и z после извршења следећег кода и упиши на одговарајућу линију: <br> <br> p1 = &x; <br> p2 = p1; <br> y = (*p2)+20; <br> z = *p2; <br> <br> x = __________; y = __________; z = __________;",
    "moguci_odgovori": {
        "0": "x = 60 ; y = 60 ; z = 40;",
        "1": "x = 40 ; y = 60 ; z = 40;"
    },
    "tacni_odgovori": [1]
},

"125": {
    "pitanje": "Нa програмском језику Ц, декларисан је и иницијализован стринг: <br> char s1[]=\"Short Message Service\", *s2, *s3; <br> <br> Одредити и на предвиђену линију уписати садржај означених стрингова по извршењу следећих наредби: <br> <br> s2=strchr(s1,'M'); <br> s3=strrchr(s2,'S'); <br> strncpy(s1+1,s2,1); <br> strcpy(s1+2,s3); <br> <br> s1 = __________ <br> s2 = __________ <br> s3 = __________",
    "moguci_odgovori": {
        "0": "s1 = \"SM Service\" <br> s2 = \"ice\" <br> s3 = \"Service\" ",
        "1": "s1 = \"Service\" <br> s2 = \"ice\" <br> s3 = \"Service\" "
    },
    "tacni_odgovori": [0]
},

"126": {
    "pitanje": "Дата је дефиниција функције: <br> <br> void Transformisi(float *x, float *y, float z) <br> { z++; <br> *x=*x+z; <br> (*y)++; } <br> <br> У главном програму су декларисане променљиве и извршен је позив функције: <br> float a=10, b=10, c=10; <br> Transformisi(&а, &b, c); <br> <br> Одредити које вредности имају променљиве a, b и c по изласку из функције и уписати их на одговарајућу линију: <br> <br> a = __________ <br> b = __________ <br> c = __________ ",
    "moguci_odgovori": {
        "0": "a = 21 <br> b = 10 <br> c = 11",
        "1": "a = 21 <br> b = 11 <br> c = 10"
    },
    "tacni_odgovori": [1]
},

"127": {
    "pitanje": "Дат је део кода написан на програмском језику Ц: <br> <br> int a[7]={10,25,30,15,40,77,45}, *pa, x, y; <br> pa=a+4; <br> x=--(*pa)+5; <br> y=*(--pa)+5; <br> <br> Анализирати код и одредити вредности променљивих х и y, као и показивача pa, по извршењу све три извршне наредбе датог кода: <br> <br> x = __________ <br> y = __________ <br> pa = a + __________ ",
    "moguci_odgovori": {
        "0": " x = 44 <br> y = 20 <br>  pa = a + 3",
        "1": " x = 44 <br> y = 20 <br>  pa = a + 4"
    },
    "tacni_odgovori": [0]
},

"128": {
    "pitanje": "Дат је део кода написан на програмском језику Ц: <br> <br> int a[7]={81,12,35,97,40,52,17}, *pa, x, y; <br> pa=a+3; <br> x = *(pa-2)+1; <br> y = (*pa-2)+1; <br> <br> Анализирати код и одредити вредности променљивих х и y, као и показивача pa, по извршењу све три извршне наредбе датог кода: <br> <br> x = __________ <br> y = __________ <br> pa = a + __________",
    "moguci_odgovori": {
        "0": "a = 13 <br> b = 93 <br> pa = a + 3",
        "1": "a = 13 <br> b = 96 <br> pa = a + 3"
    },
    "tacni_odgovori": [1]
},

"129": {
    "pitanje": "Са леве стране су набројане етапе у изради програма, а са десне стране дати су типови грешака које се могу јавити приликом програмског решавања задатака. На линију испред назива грешке написати број којим је означена етапа у којој се дати тип грешака открива: <br> 1. Едитовање синтаксне грешке _____________________________ _ синтаксне грешке <br> 2. Лоадовање run-time грешке  _____________________________ _ run-time грешке <br> 3. Тестирање логичке грешке   _____________________________ _ логичке грешке <br> 4. Превођење ",
    "moguci_odgovori": {
        "0": "1 <br> 2 <br> 3",
        "1": "3 <br> 2 <br> 1 "
    },
    "tacni_odgovori": [0]
},

"130": {
    "pitanje": "Са леве страни дати су допунски параметри у функцији printf(), а са десне стране значење тих параметара у програмском језику Ц. На линију испред значења унети број којим је означен одговарајући допунски параметар: <br> <br> 1. (#) _______________________________________ __означава да ће се поравнавање вршити уз леву ивицу поља ширине n знакова, допунски знакови размака додају се иза, а не испред податка <br> <br> 2. (0) _______________________________________ __означава да се испред позитивног броја мора исписати знак плус <br> <br> 3. (-) _______________________________________ __нула код нумеричких података означава да ће се приликом равнања уз десну ивицу број допуњавати нулама, а не знаковима размак <br> <br> 4. (+) _______________________________________ __исписује се децимална тачка чак и при приказу рационалних бројева који немају разломљени део",
    "moguci_odgovori": {
        "0": "3 <br> 1 <br> 4 <br> 2",
        "1": "3 <br> 1 <br> 2 <br> 4"
    },
    "tacni_odgovori": [1]
},

"131": {
    "pitanje": "TBU",
    "moguci_odgovori": {
        "0": "3 <br> 4 <br> 2 <br> 1 <----- ovo je tacno",
        "1": "1 <br> 4 <br> 2 <br> 3"
    },
    "tacni_odgovori": [0]
},

"132": {
    "pitanje": "Дат је код на програмском језику Ц: <br> <br> switch(c){ <br> case'A': case'a': printf(\"Pravougaonik \"); <br> case'B': case'b': printf(\"Trougao \"); break; <br> case'C': case'c': printf(\"Krug \"); <br> default: printf(\"Duz \"); break; } <br> <br> Са десне стране су дате вредности променљиве c (скретница), а са леве стране резулат извршења кода за дату вредност скретнице. На линију испред вредности скретнице унети редни број под којим је наведен одговарајући екрански приказ: <br> <br> 1. Krug Duz ________________________  ___ 'b' <br> 2. Pravougaonik Trougao Krug Duz ________________________  ___'K' <br> 3. Krug ________________________  ___'A'<br> 4. Trougao ________________________  ___'c' <br> 5. Pravougaonik Trougao <br> 6. Duz",
    "moguci_odgovori": {
        "0": "4 <br> 1 <br> 5 <br> 6",
        "1": "4 <br> 6 <br> 5 <br> 1"
    },
    "tacni_odgovori": [1]
},

"133": {
    "pitanje": "Са леве стране су набројани различити типови променљивих, а са десне су дате декларације променљивих у програмском језику Ц. На линију испред декларације унети редни број под којим је наведен одговарајући тип променљиве: <br> <br> 1. Једнодимензионални низ показивача на целе бројеве ___________________  ___ int *a; <br> 2. Вектор целих бројева ___________________  ___ int a[100]; <br> 3. Показивач на цео број ___________________  ___ int a*[100]; <br> 4. Цео број ___________________  ___ int *a[100]; <br> 5. Грешка у декларацији ",
    "moguci_odgovori": {
        "0": "3 <br> 2 <br> 5 <br> 1",
        "1": "3 <br> 5 <br> 2 <br> 1"
    },
    "tacni_odgovori": [0]
},

"134": {
    "pitanje": "Декларисана је реална променљива float w=123.456;: <br> Са леве стране дати су различити прикази вредности пременљиве добијени коришћењем наредби форматираног излаза које су приказане са десне стране. Поред сваке наредбе, на предвиђену линију уписати редни број приказа добијеног извршавањем те наредбе: <br> <br> 1. 123.456000 __________________ ___ printf(\"%g\", w); <br> <br> 2. 1.234560e+002 __________________ ___ printf(\"%f\", w); <br> <br> 3. 123.456 __________________ ___ printf(\"%.2f\", w); <br> <br> 4. 123.46 __________________ ___ printf(\"%e\", w); ",
    "moguci_odgovori": {
        "0": "3 <br> 2 <br> 4 <br> 1",
        "1": "3 <br> 1 <br> 4 <br> 2"
    },
    "tacni_odgovori": [1]
},

"135": {
    "pitanje": "Са леве стране су дате декларације променљивих у програмском језику Ц, а са десне наведена величина меморијског простора која се резервише при извршењу датих декларативних наредби. На линију испред декларације унети редни број под којим је наведен одговарајући капацитет меморијског простора: <br> <br> _____ int *a;  _________________ 1. 128 бајтова <br> <br> _____ char a[64];  _________________ 2. 256 бајтова <br> <br> _____ float a[32];  _________________ 3. 32 бајта <br> <br> _____ short *a;  _________________ 4. 64 бајта <br> <br> _________________ 5. 2 или 4 бајта, зависно од",
    "moguci_odgovori": {
        "0": "5 <br> 4 <br> 1 <br> 5",
        "1": "5 <br> 4 <br> 5 <br> 1"
    },
    "tacni_odgovori": [0]
},

"136": {
    "pitanje": "У програмском језику Ц, декларисан је показивач на цео број и функцијом calloc додељен му је простор за смештај низа од n целих бројева: <br> <br> int *a, n; <br> scanf(\"%d\", &n); <br> a=(int*)calloc(n, sizeof(int)); <br> У левој колони дати су изрази, а у десној опис њиховог значења. На линију испред сваког од израза унеси број којим је означено одговарајуће објашњење: <br> <br> &a[0]; _______________________________ 1. вредност елемента на последњој позицији у низу <br> <br> _____ *(a+n-1); _______________________________ 2. адреса четвртог елемента у низу <br> <br> _____ a+4; _______________________________ 3. адреса почетног елемента низа <br> <br> _____ *a; _______________________________ 4. вредност елемента на предзадњој позицији низа <br> <br> _______________________________ 5. вредност елемента на почетној позицији у низу <br> <br> _______________________________ 6. адреса петог елемента у низу",
    "moguci_odgovori": {
        "0": "3 <br> 1 <br> 5 <br> 6",
        "1": "3 <br> 1 <br> 6 <br> 5"
    },
    "tacni_odgovori": [1]
},

"137": {
    "pitanje": "Наредбама програмског језика Ц декларисано је дводимензионално поље реалних бројева (матрица) и три целобројне променљиве: <br> <br> float mat[10][10]; int i, j, n; <br> <br> где променљива n представља димензију квадратне матрице mat. Са леве стане су дате ознаке елемената матрице, а са десне њихово тумачење. На линију испред сваке ознаке унети редни број одговарајућег тумачења: <br> <br> ____ mat[j][n-1]  _______________________________ 1. елеменат у ј-тој врсти и последњој колони <br> <br> ____ mat[j]  _______________________________ 2. и-та врста матрице <br> <br> ____ mat[0][j]  _______________________________ 3. ј-та врста матрице <br> <br> ____ mat[i]  _______________________________ 4. ј-та колона матрице <br> <br> _______________________________ 5. елеменат у првој врсти и ј-тој колони <br> <br> _______________________________ 6. грешка у нотацији ",
    "moguci_odgovori": {
        "0": "1 <br> 3 <br> 5 <br> 2",
        "1": "1 <br> 5 <br> 3 <br> 2"
    },
    "tacni_odgovori": [0]
},

"138": {
    "pitanje": "Дат је део кода на програмском језику Ц. Одредити да ли се променљива P види и ако се види ког је типа у функцијама датог кода. Са леве стране набројане су функције из примера, а са десне тип променљиве P у поједним функцијама. На линију испред назива функције, уписати редни број под којим је дат одговарајући тип: <br> <br> #include<stdio.h>  <br> <br> char P,Q;____ У функцији pp1  _______________________________ 1. карактер <br> <br> float pp1(int n, int m) {float S=0, P=1; ...} ____ У функцији pp2  _______________________________ 2. реални број <br> <br> int pp2(char *R, char *Q) {int i; ...} ____ У функцији pp3  _______________________________ 3. низ реалних бројева <br> <br> int pp3(float P[], int n) {int i; ...} ____ У функцији main  _______________________________ 4. показивач на карактер <br> <br> main() {int S; ...}   _______________________________ 5. није доступна у функцији",
    "moguci_odgovori": {
        "0": "2 <br> 3 <br> 1 <br> 1",
        "1": "2 <br> 1 <br> 3 <br> 1"
    },
    "tacni_odgovori": [1]
},

"139": {
    "pitanje": "Нa програмском језику Ц, декларисани су стрингови: <br> char s3[]=\"Iwnt2CmyM8sagain\", *sn; <br> <br> Са леве стране написани су изрази доделе вредности стрингу sn, а са десне стране понуђене су вредности стринга sn. На линију написати редни број под којим је наведена вредност стринга sn која се добија извршењем одговарајућег израза: <br> <br> ____ sn=strrchr(s3,'a')-1; _______________________ 1. NULL <br> <br> ____ sn=strchr(s3,'a')+1; _______________________ 2. “in” <br> <br> ____ sn=strstr(s3,\"my\"); _______________________ 3. “аin” <br> <br> ____ sn=strstr(s3,\"Т2\"); _______________________ 4. “gain” <br> <br> _______________________ 5. “sagain” <br> <br> _______________________ 6. “myM8sagain” ",
    "moguci_odgovori": {
        "0": "4 <br> 4 <br> 6 <br> 1",
        "1": "4 <br> 6 <br> 4 <br> 1"
    },
    "tacni_odgovori": [0]
},

"140": {
    "pitanje": "Са леве стране су наведене наредбе позиционирања у датотеци, а са десне описи ефеката датих наредби. На линију поред наредбе уписати редни број под којим је наведен опис ефекта наредбе: <br> <br> ftell(dat) ____         1. Позиционирање на почетак датотеке <br> <br> fseek(dat, 0, SEEK_END) ____        2. Позиционирање на крај датотеке <br> <br> fseek(dat, 0, SEEK_SET) ____         3. Одређује позицију у датотеци у виду броја бајтова од почетка датотеке <br> <br> rewind(dat) ____          4. Ништа од понуђеног",
    "moguci_odgovori": {
        "0": "3 <br> 1 <br> 2 <br> 1",
        "1": "3 <br> 2 <br> 1 <br> 1"
    },
    "tacni_odgovori": [1]
},

"141": {
    "pitanje": "Са леве стране дате су врсте конверзије, а са десне типови података који се користе у функцији за приказ података printf() у програмском језику Ц. На линију испред типа података унети број којим је означена одговарајућа конверзија: <br> <br> 1. %d _________________________ ____ Short <br> 2. %i _________________________ ____ signedint (u dekadnom obliku) <br> 3. %s _________________________ ____ Long <br> 4. %ld  _________________________ ____ Unsigned <br> 5. %f  _________________________ ____ signedint (dekadni, heksadekadni ili oktalni oblik) <br> 6. %e _________________________ <br> 7. %hd _________________________ <br> 8. %u _________________________",
    "moguci_odgovori": {
        "0": "7 <br> 1 <br> 4 <br> 8 <br> 2",
        "1": "7 <br> 1 <br> 8 <br> 2 <br> 4"
    },
    "tacni_odgovori": [0]
},

"142": {
    "pitanje": "Са леве стране наведене су функције за читање и упис у текст датотеку, а са десне стране опис функције. На линују испред описа функције унети редни број под којим је наведена одговарајућа функција: <br> <br> 1. fscanf ____________________ ___ учитавање карактера из датотеке <br> <br> 2. fgets ____________________ ___ учитавање реда из датотеке <br> <br> 3. fputs ____________________ ___ форматирани упис података у датотеку <br> <br> 4. fprintf ____________________ ___ упис стринга у датотеку <br> <br> 5. fgetc ____________________ ___ форматирано учитавање података из датотеке ",
    "moguci_odgovori": {
        "0": "5 <br> 2 <br> 3 <br> 4 <br> 1",
        "1": "5 <br> 2 <br> 4 <br> 3 <br> 1"
    },
    "tacni_odgovori": [1]
},

"143": {
    "pitanje": "Са десне странe дате су врсте конверзије, а са леве типови података који се користе у функцији за приказ података printf() у програмском језику Ц. На линију испред типа конверзије унети број којим је означен одговарајући тип података. <br> <br> 1. char _____________________ ___ %f <br> <br> 2. string _____________________ ___ %s <br> <br> 3. float _____________________ ___ %g <br> <br> 4. double _____________________ ___ %lf <br> <br> 5. long _____________________ ___ %e <br> <br> 6. short _____________________ ___ %c",
    "moguci_odgovori": {
        "0": "3 <br> 2 <br> 3 <br> 4 <br> 3 <br> 1",
        "1": "3 <br> 2 <br> 3 <br> 3 <br> 4 <br> 1"
    },
    "tacni_odgovori": [0]
},

"144": {
    "pitanje": "Наведене су етапе у изради програма. Поређати етапе по редоследу њиховог изођења уписивањем редног броја на линију испред наведене етапе почев од броја 1: <br> <br> ____ Кодирање <br> <br> ____ Израда документације <br> <br> ____ Анализа проблема <br> <br> ____ Превођење <br> <br> ____ Скицирање решења <br> <br> ____ Састављање алгоритма <br> <br> ____ Тестирање <br> <br> ____ Одржавање програма ",
    "moguci_odgovori": {
        "0": "4 <br> 7 <br> 1 <br> 5 <br> 2 <br> 3 <br> 8 <br> 6",
        "1": "4 <br> 7 <br> 1 <br> 5 <br> 2 <br> 3 <br> 6 <br> 8"
    },
    "tacni_odgovori": [1]
},

"145": {
    "pitanje": "Са десне стране наведене су неке од функција библиотеке ctype.h, а са леве су дати њихови описи. Испред назива сваке од наведених функција, уписати редни број под којим је дат одговарајући опис.<br> <br> 1. Да ли је c штампајући знак (укључујући и размак)? ________________________ ____ isspace(c) <br> 2. Да ли је c велико слово? ________________________ ____ isdigit(c) <br> 3. Да ли је c знак интерпункције? ________________________ ____ isalpha(c) <br> 4. Да ли је c управљачки знак? ________________________ ____ isupper(c) <br> 5. Да ли је c децимална цифра? ________________________ ____ iscntrl(c) <br> 6. Да ли је c знак бели знак? ________________________ ____ isprint(c) <br> 7. Да ли је c слово? ________________________ <br> 8. Да ли је c хекса-децимална цифра? ________________________ ",
    "moguci_odgovori": {
        "0": "6 <br> 5 <br> 7 <br> 2 <br> 4 <br> 1",
        "1": "6 <br> 5 <br> 7 <br> 2 <br> 1 <br> 4"
    },
    "tacni_odgovori": [0]
},

"146": {
    "pitanje": "Са леве стране наведене су ознаке за мод приступа датотеци, а са десне стране значење мода приступа. На линују испред значења мода приступа унети редни број под којим је наведена ознака одговарајуђег мода: <br> <br> 1. \"a\"    ____ Отвара текстуалну датотеку само за читање <br> 2. \"w\"   ____ Отвара текстуалну датотеку само за писање. Ако датотека постоји одбацује постојећи садржај без опомене, ако не постоји креира нову датотеку <br> 3. \"a+\"   ____ Отвара текстуалну датотеку само за писање додајући нове елементе на њен крај, или креира потпуно нову датотеку ако је нема <br> 4. \"r+\"   ____ Отвара текстуалну датотеку за ажурирање, читање и писање, постављајући показивач на почетак датотеке <br> 5. \"r\"   ____ Отвара текстуалну датотеку за ажурирање, читање и писање, одбацујући постојећи садржај ако датотека постоји, или креира датотеку ако она не постоји <br> 6. \"w+\"   ____ Отвара текстуалну датотеку за ажурирање, читање и писање додајући нове елем",
    "moguci_odgovori": {
        "0": "5 <br> 2 <br> 1 <br> 6 <br> 4 <br> 3",
        "1": "5 <br> 2 <br> 1 <br> 4 <br> 6 <br> 3 "
    },
    "tacni_odgovori": [1]
},

"147": {
    "pitanje": "Са леве стране набројани су неки од прелазних знакова тј. escape секвенце, а са десне стране дати су њихови описи. На линију испред описа упишите број под којим је наведена одговарајућа escape секвенца: <br> <br> 1. ‘\\n’    ____ Враћање на почетак реда (carrage return) <br> 2. ‘\\t’    ____ Системски звучник (bell) <br> 3. ‘\\r’    ____ Прелаз у нови ред (new line) <br> 4. ‘\\b’    ____ Није escape секвенца <br> 5. ‘\\h’    ____ Хоризонтални табулатор (horizontal tab) <br> 6. ‘\\a’    ____ Враћање једну курсорску позицију назад (backspace) ",
    "moguci_odgovori": {
        "0": "switch(a){ case 3, 5: p++;break; default: p--; } ",
        "1": "switch(a){ case 3: case 5: p++;break; p--; } ",
        "2": "switch(a){ case 3: case 5: p++;break; default: p--; }",
        "3": "switch(a){ case 3: case 5: p++; default: p--; } "
    },
    "tacni_odgovori": [0]
},

"148": {
    "pitanje": "Са леве стране набројани су неки од прелазних знакова тј. escape секвенце, а са десне стране дати су њихови описи. На линију испред описа упишите број под којим је наведена одговарајућа escape секвенца: <br> <br> 1. ‘\\n’    ____ Враћање на почетак реда (carrage return) <br> 2. ‘\\t’    ____ Системски звучник (bell) <br> 3. ‘\\r’    ____ Прелаз у нови ред (new line) <br> 4. ‘\\b’    ____ Није escape секвенца <br> 5. ‘\\h’    ____ Хоризонтални табулатор (horizontal tab) <br> 6. ‘\\a’    ____ Враћање једну курсорску позицију назад (backspace) ",
    "moguci_odgovori": {
        "0": "switch(a){ case 3, 5: p++;break; default: p--; } ",
        "1": "switch(a){ case 3: case 5: p++;break; p--; } ",
        "2": "switch(a){ case 3: case 5: p++;break; default: p--; }",
        "3": "switch(a){ case 3: case 5: p++; default: p--; } "
    },
    "tacni_odgovori": [0]
},

"149": {
    "pitanje": "У програмском језику Ц, декларисане су и иницијализоване променљиве: <br> <br> int x=40, y=50, z=60, *p1, *p2; <br> <br> Одреди које ће вредности имати променљиве x, y и z после извршења следећег кода и упиши на одговарајућу линију: <br> <br> p1 = &x; <br> p2 = p1; <br> y = (*p2)+20; <br> z = *p2; <br> <br> x = __________; y = __________; z = __________;",
    "moguci_odgovori": {
        "0": "x = 60 ; y = 60 ; z = 40;",
        "1": "x = 40 ; y = 60 ; z = 40;"
    },
    "tacni_odgovori": [1]
},






"150": {
    "pitanje": "У програмском језику C# класа може да садржи статичка и не-статичка (инстанцна) поља. Дате су изјаве које се односе на статичка поља класе и међу њих је уметнута једна изјава која се односи на не-статичка (инстанцна) поља класе. <br> <br> Заокружити број испред изјаве која се односи на не-статичка поља класе: ",
    "moguci_odgovori": {
        "0": "Поље које се може користити без конструисања и једног објекта те класе",
        "1": "Поље које има исту вредност за све креиране објекте неке класе",
        "2": "Поље чија се вредност може разликовати за сваки појединачни објекат неке класе",
        "3": "Поље које се може користити унутар статичких метода класе, као и унутар метода инстанце"
    },
    "tacni_odgovori": [2]
},

"151": {
    "pitanje": "Дати су типови променљивих у програмском језику C#. Како се назива променљива која је дефинисана унутар неког метода: ",
    "moguci_odgovori": {
        "0": "Глобална променљива ",
        "1": "Статичка променљива",
        "2": "Блоковска променљива",
        "3": "Локална променљива"
    },
    "tacni_odgovori": [3]
},

"152": {
    "pitanje": "Дате су програмске јединице у програмском језику C#. Одредити која програмска јединицапредставља шаблон за конструисање објекта истог типа: ",
    "moguci_odgovori": {
        "0": "Класа",
        "1": "Именски простор",
        "2": "Нестатичка метода",
        "3": "Променљива",
        "4": "Статичка метода"
    },
    "tacni_odgovori": [0]
},

"153": {
    "pitanje": "Одредити какви могу бити чланови класе (поља и методе) у програмском језику C#:",
    "moguci_odgovori": {
        "0": "Локални и глобални",
        "1": "Процедурални и непроцедурални",
        "2": "Статички (класни) и нестатички (објектни)",
        "3": ". Спољашњи и унутрашњи"
    },
    "tacni_odgovori": [2]
},

"154": {
    "pitanje": "Дата je наредба кода у програмском језику C# која представља дефиницију низа niz. Која је од доле наведених дефиниција низа коректна:",
    "moguci_odgovori": {
        "0": "int[] niz = new int[20];",
        "1": "int[] niz = new int(20);",
        "2": "int niz = new int[20];",
        "3": "int niz() = new int[20];"
    },
    "tacni_odgovori": [0]
},

"155": {
    "pitanje": "Дат је део кода који је написан на C# програмском језику. Одредити шта ће бити на излазу. <br> <br> classTest { <br> <br> publicstaticvoid Main(string[] args){ <br> <br> Test p = newTest(); <br> p.start(); } <br> void start() { <br> <br> bool b1 = false; <br> bool b2 = fix(b1); <br> Console.WriteLine(b1 +  + b2); } <br> bool fix(bool b1){ <br> <br> b1 = true; <br> return b1;  } }",
    "moguci_odgovori": {
        "0": "true true",
        "1": "false true",
        "2": "true false",
        "3": "false false"
    },
    "tacni_odgovori": [1]
},

"156": {
    "pitanje": "Дати код програма у програмском језику C# састоји се од две класе у једној датотеци. Анализирати дати код и проценити његову тачност. <br> <br> namespace TestPrimer { <br> <br> classProgram { <br> <br> staticvoid Main(string[] args) { <br> <br> Klasa a = newKlasa(); <br>  a.n++; <br>  }  } <br> classKlasa { <br> <br> privateint n; <br> private Klasa() { } <br> } } ",
    "moguci_odgovori": {
        "0": "Програм има грешку јер класа Klasa има приватни конструктор и приватно поље n.",
        "1": "Програм има грешку јер класа Klasa има празан подразумевани конструктор.",
        "2": "Програм има грешку јер променљива n није иницијализована.",
        "3": "Програм нема грешака и нормално се извршава"
    },
    "tacni_odgovori": [0]
},

"157": {
    "pitanje": "У програмском језику C# декларисане су статичке променљиве логичког, нумеричког и класног типа. <br> <br> namespace Test{ <br> classProgram { <br> <br> publicstaticbool x; <br> publicstaticint y; <br> publicstaticRandom r; <br> staticvoid Main(string[] args) { … } <br> } } <br> <br> Одредити које аутоматске почетне (default) вредности декларисана поља имају унутар методе Мain. Понуђени одговори су наведени у наглашеном редоследу: <br> <br> <br> x    y    r <br>_____________",
    "moguci_odgovori": {
        "0": "true    1    null",
        "1": "false    0    null",
        "2": "true    0    null",
        "3": "false    1    null",
        "4": "false    0    void"
    },
    "tacni_odgovori": [1]
},

"158": {
    "pitanje": "Заокружити број испред исправно написане наредбе кода у програмском језику C#, којом се копија низа x додељује низу y:",
    "moguci_odgovori": {
        "0": "Array.Copy(x, y, x.Length);",
        "1": "Array.Copy(x, y);",
        "2": "y =Array.Copy(x, x.Length);",
        "3": "y =x.CopyTo();"
    },
    "tacni_odgovori": [0]
},

"159": {
    "pitanje": "У програмском језику C# дефинисана је метода са аргументом низовног типа. Одредити шта се тачно преноси том методом:",
    "moguci_odgovori": {
        "0": "Копија датог низа",
        "1": "Копија првог елемента датог низа",
        "2": "Референца на дати низ",
        "3": "Дужина датог низа"
    },
    "tacni_odgovori": [2]
},

"160": {
    "pitanje": "Дата је наредба кодау програмском језику C#, која представља позив методе класе Array. Одредити којим од датих позива се сортира низ brojevi типа int[]:",
    "moguci_odgovori": {
        "0": "Array(brojevi)",
        "1": "brojevi.Sort()",
        "2": "Array.SortArray(brojevi)",
        "3": "Array.Sort(brojevi)"
    },
    "tacni_odgovori": [3]
},

"161": {
    "pitanje": "У програмском језику C# дата је декларација низа: <br> <br> int к; <br> int[] brojevi = {5, 12, 37, 7, 27, 33, 36}; <br> <br> На основу дате декларације одредити шта је резултат позива <br> <br> k=Arrays.BinarySearch(brojevi, 37);",
    "moguci_odgovori": {
        "0": "k=0, јер метод BinarySearch прво изврши сортирање низа у опадајућем редоследу, па онда тражи задату вредност",
        "1": "метод binarySearch баца изузетак увек када је низ неуређен и програм „пуца“ ",
        "2": "k=2, јер се тражени елеменат налази на позицији 2",
        "3": "k добија неочекивану вредност јер низ мора бити сортиран у растућем поретку пре позива методе BinarySearch",
        "4": "k=6, јер метод BinarySearch прво изврши сортирање низа у растућем редоследу, па онда тражи задату вредност"
    },
    "tacni_odgovori": [3]
},

"162": {
    "pitanje": "Процес скривања неких података о објекту од корисника и пружања само неопходних података, зове се:",
    "moguci_odgovori": {
        "0": "Полиморфизам",
        "1": "Наслеђивање ",
        "2": "Енкапсулација",
        "3": "Апстракција"
    },
    "tacni_odgovori": [2]
},

"163": {
    "pitanje": "Која су поља заједничка и јединствена за све креиране објекте неке класе дефинисане у објектно оријентисаном програмском језику C#:",
    "moguci_odgovori": {
        "0": "Јавна ",
        "1": "Приватна",
        "2": "Објектна",
        "3": "Инстанцна",
        "4": "Статичка"
    },
    "tacni_odgovori": [4]
},

"164": {
    "pitanje": "У програмском језику C#, по дефиницији метод може да врати вредност, али и не мора. Изабрати службену реч која се користи за означавање типа резултата методе када дефинишемо метод који не враћа вредност:",
    "moguci_odgovori": {
        "0": "void",
        "1": "return",
        "2": "public",
        "3": "static"
    },
    "tacni_odgovori": [0]
},

"165": {
    "pitanje": "У програмском језику C# дат је метод PrintPoruka који је дефинисан на следећи начин: <br> <br> void PrintPoruka(string poruka, int n) { <br> while (n > 0) { <br> <br> Console.Write(poruka); <br> n--; <br> } } <br> <br> Шта ће бити исписано на екрану након позива метода PrintPoruka(\"b\",3):",
    "moguci_odgovori": {
        "0": "На екрану се приказује:bbbbb",
        "1": "На екрану се приказује:bbbb",
        "2": "На екрану се приказује:bbb",
        "3": "На екрану се приказује:bb",
        "4": "На екрану се приказује:b"
    },
    "tacni_odgovori": [2]
},

"166": {
    "pitanje": "У програмском језику C# дат је метод PrintPoruka који је дефинисан на следећи начин: <br> <br> void PrintPoruka(string poruka, int n) { <br> while (n > 0) { <br> <br>  n--; <br> Console.Write(poruka); <br> } } <br> <br> Израчунати вредност променљиве m након извршења следећег програмског фрагмента: <br> <br> int m = 2; <br> PrintPoruka(\"C# !!!\", m); <br> <br> Заокружити број испред траженог одговора:",
    "moguci_odgovori": {
        "0": "m = 0",
        "1": "m = 1",
        "2": "m = 2",
        "3": "m = 3"
    },
    "tacni_odgovori": [2]
},

"167": {
    "pitanje": "Дата је наредба кода у програмском језику C# која дефинише константу MAX_CENA као чланицу неке класе. Који је од понуђених начина дефинисања исправан: ",
    "moguci_odgovori": {
        "0": "public staticconst MAX_CENA = 100.00;",
        "1": "public constfloat MAX_CENA = 99.50;",
        "2": "public staticdouble MAX_CENA = 100.50;",
        "3": "public staticconstdouble MAX_CENA = 100.99;",
        "4": "public constdouble MAX_CENA = 100.99;"
    },
    "tacni_odgovori": [4]
},

"168": {
    "pitanje": "Дата je дефиниција класе у програмском језику C# и састоји се од два конструктора, методе и пољаx и y. У шестом реду написати конструктор копије објекта класе Point. <br> <br> 1. publicclassPoint { <br> 2. privatedouble x, y; <br> 3. public Point() { x = 0; y = 0; } <br> 4. publicvoidSet(double xx, double yy){ x=xx; y=yy; } <br> 5. public Point(Point p) { <br> 6. ____________________//Odgovor <br> 7. } <br> 8. } <br> <br> Заокружити број испред траженог одговора: ",
    "moguci_odgovori": {
        "0": "this(p.x, p.y);",
        "1": "this(p);",
        "2": "Set(p);",
        "3": "Set(p.x, p.y);"
    },
    "tacni_odgovori": [3]
},

"169": {
    "pitanje": "Дат је код програма у програмском језику C#. Анализирати дати код и проценити његову тачност: <br> <br> namespace TestPrimer { <br> classProgram { <br> <br> staticvoid Main(string[] args) { <br> int n = 2; <br> fun(n); <br> Console.WriteLine(\"n je \" + n); <br> } <br> void fun(int n) { n++; } <br> } } ",
    "moguci_odgovori": {
        "0": "Програм има грешку, јер метод fun() не враћа ниједну вредност",
        "1": "Програм има грешку, јер метод fun() није дефинисан да буде статички.",
        "2": "Програм приказује 1 на екрану.",
        "3": "Програм приказује 2 на екрану.",
        "4": "Програм приказује 3 на екрану."
    },
    "tacni_odgovori": [1]
},

"170": {
    "pitanje": "Дат је код програма у програмском језику C# који дефинише интерфејс Poredjenje. Интерфејс Poredjenje садржи декларацију методе porediPovrsine(), која пореди објекте типа Figura. У датом коду дописати у 3.линији кода наредбу која недостаје да би метода била исправно декларисана. <br> <br> 1. namespace figure <br> 2. <br> 3. public__________________{ <br> 4. int porediPovrsine(Figura fig); <br> 5. } <br> <br> Заокружити број испред одговора који даје исправно решење:",
    "moguci_odgovori": {
        "0": "extends Poredjenje",
        "1": "interface Poredjenje",
        "2": "implements Poredjenje",
        "3": "abstract Poredjenje"
    },
    "tacni_odgovori": [1]
},

"171": {
    "pitanje": "Дат је код програма у програмском језику C# којим су дефинисане две класе: classProgram која садржи Main(string[] args) методу и classA. Анализирати дати код и одредити да ли је код исправно написан. Понуђени одговори дају опис последица извршавања овог кода: <br> <br> classProgram{ <br> publicstaticvoid Main(string[] args){ <br> Object a1 = newA(); <br> Object a2 = newA(); <br> Console.WriteLine(a1.Equals(a2)); <br>  } <br> } <br> classA{ <br> int x; <br> publicbool Equals(A a){ <br> returnthis.x == a.x; <br>  }   } ",
    "moguci_odgovori": {
        "0": "Програм има грешку, јер се изразом a1.Equals(a2) проверава једнакост објеката а1 и а2 различитог типа од Object.",
        "1": "Програм има грешку, јер се једнакост објеката а1 и а2 типа А проверава изразом а1 == а2.",
        "2": "Програм се извршава без грешке и приказује се true на екрану.",
        "3": "Програм се извршава без грешке и приказује се false на екрану"
    },
    "tacni_odgovori": [2]
},

"172": {
    "pitanje": "Дат је код програма у програмском језику C# којим су дефинисане две класе: class Program која садржи Main(string[] args) методу и classA. Анализирати дати код и одредити да ли је код исправно написан. Понуђени одговори дају опис последица извршавања овог кода: <br> <br> classProgram{ <br> publicstaticvoid Main(string[] args){ <br> A a1 = newA(); <br> A a2 = newA(); <br> Console.WriteLine(a1.Equals(a2)); <br> } } <br> classA{ <br> int x; <br> publicbool Equals(A a){ <br> returnthis.x == a.x; <br>  } <br> } ",
    "moguci_odgovori": {
        "0": "Програм има грешку, јер се изразом a1.Equals(a2) проверава једнакост објеката а1 и а2 различитог типа од Object.",
        "1": "Програм има грешку, јер се једнакост објеката а1 и а2 типа А проверава изразом а1 == а2.",
        "2": "Програм се извршава без грешке и приказује се true на екрану.",
        "3": "Програм се извршава без грешке и приказује се false на екрану."
    },
    "tacni_odgovori": [3]
},

"173": {
    "pitanje": ". Једна од основних особина објектно оријентисаног језика је наслеђивање. Дате су насловне линије дефиниције класе. Заокружити број испред дефиниције класе која се не може наследити: ",
    "moguci_odgovori": {
        "0": "class A { }",
        "1": "class A { private A(){ } }",
        "2": "sealed class A { }",
        "3": "class A { protected A(){ } }"
    },
    "tacni_odgovori": [2]
},

"174": {
    "pitanje": "Датe су наредбе којe су написанe на C# програмском језику. Која наредба је исправно написана",
    "moguci_odgovori": {
        "0": "int a = Math.Abs(-5);",
        "1": "int b = Math.Abs(5.0);",
        "2": "int c = Math.Abs(5.5f);",
        "3": "int d = Math.Abs(5L);"
    },
    "tacni_odgovori": [0]
},

"175": {
    "pitanje": "У програмском језику C# користи се службена реч base. Који од наредних исказа који дефинишу дату службену реч, није тачан.",
    "moguci_odgovori": {
        "0": "Службена реч base може послужити за позивање конструктора родитељске класе.",
        "1": "Службена реч base може послужити за позивање приватних метода родитељске класе којима се другачије не може приступити.",
        "2": "Службена реч base може послужити за позивање заклоњеног метода родитељске класе.",
        "3": "Службена реч base може послужити за позивање заклоњеног поља родитељске класе. "
    },
    "tacni_odgovori": [1]
},

"176": {
    "pitanje": "Дати су позиви методе Math.Max (метода враћа вредност већег броја) дефинисане у С# програмском језику. Анализирати датe позиве и одредити који од њих су исправно написани. <br> Заокружити број испред неисправно написаног позива методе:",
    "moguci_odgovori": {
        "0": "Math.Max(1, 4);",
        "1": "Math.Max(2.3, 5);",
        "2": "Math.Max(1, 3, 5, 7);",
        "3": "Math.Max(-1.5, -2.8f);"
    },
    "tacni_odgovori": [2]
},

"177": {
    "pitanje": "При креирању објеката изведене класе:",
    "moguci_odgovori": {
        "0": "извршава се само конструктор изведене класе",
        "1": "прво се извршава конструктор родитељске класе, али само ако је позван кључном речју base",
        "2": "обавезно се прво извршава конструктор изведене, а потом конструктор родитељске класе ",
        "3": "обавезно се прво извршава конструктор родитељске, а потом конструктор изведенекласе"
    },
    "tacni_odgovori": [3]
},

"178": {
    "pitanje": "Дат је део кода који је написан уC# програмском језику. Одредити шта ће се приказати на излазу: <br> <br> try <br> { <br> int x = 0; <br> int y = 5 / x; <br> } <br> catch (Exception e) { <br> Console.WriteLine(\"Exception\"); } <br> catch (ArithmeticException ae) { <br> Console.WriteLine(\" Arithmetic Exception\"); } <br> Console.WriteLine(\"finished\");",
    "moguci_odgovori": {
        "0": "Приказује се текст: finished",
        "1": "Приказује се текст: Exception",
        "2": "Ништа. Дешава се грешка приликом компајлирања",
        "3": "Приказује се текст: Arithmetic Exception"
    },
    "tacni_odgovori": [2]
},

"179": {
    "pitanje": "Дат је део кода који је написан у C# програмском језику. Одредити шта ће бити на излазу: <br> <br> publicclassRTExcept <br> { <br> publicstaticvoid throwit() { <br> Console.WriteLine(\"throwit \"); <br> thrownewApplicationException(); <br> } <br> publicstaticvoid Main(String[] args) { <br> try { <br> Console.Write(\"hello \"); <br> throwit(); <br>  } <br> catch (Exception re ) {Console.WriteLine(\"caught \");} <br> finally { Console.Write(\"finally \"); } <br> Console.Write(\"after \"); <br> } } ",
    "moguci_odgovori": {
        "0": "hello throwit caught",
        "1": "Грешка приликом компајлирања ",
        "2": "hello throwit RuntimeException caught after",
        "3": "hello throwit caught finally after"
    },
    "tacni_odgovori": [3]
},

"180": {
    "pitanje": "Дат је код програма у програмском језику C#. Анализирати дати код и проценити његову тачност: <br> <br> namespace TestPrimer{ <br> classTest { <br> int x; <br> publicTest(string s){ <br> Console.WriteLine(\"Klasa Test\"); <br> } <br> staticvoid Main(string[] args){ <br> Testt = null; <br> Console.WriteLine(t.x); <br>  } <br> } <br> } ",
    "moguci_odgovori": {
        "0": "Програм има грешку, јер променљива x није иницијализована.",
        "1": "Програм има грешку, јер класа Test нема подразумевани конструктор.",
        "2": "Програм има грешку, јер се у некој класи не може декларисати променљива типа те исте класе, као што је то овде случај са променљивом t.",
        "3": "Програм има грешку, јер променљива t није иницијализована и има вредност null у моменту када се приказује поље t.x",
        "4": "Програм нема грешака и нормално се извршава, не приказујући ништа на екрану."
    },
    "tacni_odgovori": [3]
},

"181": {
    "pitanje": "Дат je код програма у програмском језику C# који формира и штампа елементе низа а. Анализирати дати код и проценити шта ће се догодити након његовог извршавања. <br> <br> namespace TestPrimer { <br> classProgram{ <br> staticvoid Main(string[] args){ <br> int[] a = newint[5]; <br> for (int i = 0; i \f<\f a.Length; i++) a[i] = i; <br> Console.Write(a[i] +  ); <br>  } <br>  } <br> } <br> <br> Заокружити број испред тачног одговора:",
    "moguci_odgovori": {
        "0": "Програм приказује бројеве 0 1 2 3 4 на екрану",
        "1": "Програм има грешку, јер ће у последњој наредби Console.Write методa Main покушати приступ непостојећем елементу а[5].",
        "2": "Програм приказује број 5 на екрану",
        "3": "Програм има грешку, јер променљива i у последњој наредби Console.Writeу методу Main неће имати дефинисану вредност."
    },
    "tacni_odgovori": [1]
},

"182": {
    "pitanje": "Дат је код програма у програмском језику C#: <br> <br> namespace TestPrimer{ <br> classProgram <br>  { <br> staticvoid Main(string[] args) <br>  { <br> Console.WriteLine(fun(17)); <br>  } <br> publicint fun(int n) { return n; } <br> publicvoid fun(int n){ Console.WriteLine(n); } <br>  } } <br> <br> Анализирати код и заокружити број испред очекиваног одговора:",
    "moguci_odgovori": {
        "0": "Програм има грешку, јер се не може одредити коју верзију преоптерећеног метода fun(…) треба позвати",
        "1": "Програм има грешку, јер је друга верзија преоптерећеног метода fun(…) дефинисана, али се нигде не позива.",
        "2": "Програм се нормално извршава и приказује 17 једанпут",
        "3": "Програм се нормално извршава и приказује 17 двапут"
    },
    "tacni_odgovori": [0]
},

"183": {
    "pitanje": "Дат је код програма у програмском језику C#. Анализирати програм и одредити шта се приказује на екрану као резултат његовог извршавања. <br> <br> namespace TestPrimer { <br> classProgram { <br> staticvoid Main(string[] args){ <br> int[] x = { 0, 1, 2, 3, 4 }; <br>  Inc(x); <br> int[] y = { 0, 1, 2, 3, 4 }; <br>  Inc(y[0]); <br> Console.WriteLine(x[0] +  + y[0]);  } <br> publicstaticvoid Inc(int[] a){ <br> for (int i = 0; i \f<\f a.Length; i++) a[i]++;  } <br> publicstaticvoid Inc(int n) { n++; } <br>  }  } ",
    "moguci_odgovori": {
        "0": "Порука о грешци",
        "1": "1 0 ",
        "2": "2 2",
        "3": "2 1",
        "4": "2 1"
    },
    "tacni_odgovori": [1]
},

"184": {
    "pitanje": "Дат je код програма у програмском језику C# и састоји се од две класе у једној датотеци. Анализирати дати код и проценити која се вредност поља b.n приказује првом наредбом Console.WriteLine (ред седам) приликом извршавања овог програма. <br> <br> 1.namespace TestPrimer{ <br> 2.classProgram{ <br> 3.staticvoid Main(string[] args){ <br> 4.int k = 0; <br> 5.Brojac b = newBrojac(); <br> 6.for (int i = 0; i \f<\f 100; i++) Inc(b, k); <br> 7.Console.WriteLine(\"b.n = \" + b.n); <br> 8.Console.WriteLine(\"k = \" + k); } <br> 9.publicstaticvoid Inc(Brojac b, int k){ <br> 10. b.n++; <br> 11. k++; } } <br> 12.classBrojac{ <br> 13.publicint n; <br> 14.public Brojac(int n) { this.n = n; } <br> 15.public Brojac() { this.n = 1; }  } } ",
    "moguci_odgovori": {
        "0": "b.n = 101",
        "1": "b.n = 100",
        "2": "b.n = 99",
        "3": "b.n = 0",
        "4": "b.n = 1"

    },
    "tacni_odgovori": [0]
},

"185": {
    "pitanje": "Дат је програм у програмском језику C# у ком је дефинисан низ и метода Prosek која израчунава средњу вредност низа. Анализирати дати код и проценити шта ће се десити након његовог извршавања. <br> <br> namespace TestPrimer{ <br> classProgram{ <br> staticvoid Main(string[] args){ <br> double[] niz = { 1.0, 2.0, 3.0 }; <br> Console.WriteLine(prosek(niz)); <br> Console.WriteLine(prosek(1, 2, 2, 1, 4)); <br> Console.WriteLine(prosek(newdouble[] { 1, 2, 3 })); <br> Console.WriteLine(prosek(1.0, 2.0, 2.0, 1.0)); <br>  } <br> publicstaticdouble prosek(paramsdouble[] brojevi){ <br> double suma = 0; <br> foreach (double elem in brojevi) suma += elem; <br> return suma / brojevi.Length; <br> }  } } ",
    "moguci_odgovori": {
        "0": "Програм има грешку у првој наредби WriteLine, јер је неправилан позив функције prosek (niz).",
        "1": "Програм има грешку у другој наредби WriteLine, јер је неправилан позив функције prosek (1, 2, 2, 1, 4).",
        "2": "Програм има грешку у трећој наредби WriteLine, јер је неправилан позив функције prosek(new double[] {1, 2, 3}).",
        "3": "Програм има грешку у четвртој наредби WriteLine, јер је неправилан позив функције prosek(1.0, 2.0, 2.0, 1.0).",
        "4": "Програм се извршава без грешке и просек датих бројева се тачно израчунава",
        "5": "Програм се извршава без грешке, али се просек датих бројева не израчунава тачно."
    },
    "tacni_odgovori": [4]
},

"186": {
    "pitanje": "У програмском језику C# дата је декларација променљиве једне стринг и једне целебројне променљиве, као и део кода: <br> <br> string str = \"Primer\"; <br> int broj = 66; <br> Console.WriteLine(str + broj + 65); <br> Console.WriteLine(broj + 65 + str); <br> <br> Анализирати код и проценити шта ће се приказати на екрану након његовог извршења:",
    "moguci_odgovori": {
        "0": "Primer6665 <br> 131Primer",
        "1": "Primer6665 <br> 6665Primer",
        "2": "Primer131  <br> 131Primer",
        "3": "PrimerBA   <br> BAPrimer"
    },
    "tacni_odgovori": [0]
},

"187": {
    "pitanje": "На програмском језику C# дефинисане су класе: <br> <br> publicclassA { <br> publicvirtualint Metod() { return 10; } <br> } <br> publicclassB : A { <br> publicnewint Metod() { returnbase.Metod() +20; } <br> } <br> publicclassC : B { <br> publicoverrideint Metod() { returnbase.Metod() +30; } <br> } <br> Унутар функције Main, креирана су три објекта ових класа и из сваког од њих извршен позив методе Metod() <br> <br> Заокружити број испред понуђеног одговора који представља сценарио који ће се десити при покретању програма: ",
    "moguci_odgovori": {
        "0": "Метод позван из класе А враћа вредност 10, из класе B 10, а из класе C 30",
        "1": "Метод позван из класе А враћа вредност 10, из класе B 30, а из класе C 60",
        "2": "Програм се покреће, али баца изузетак при позиву методе из класе B jer new не иде у комбинацији са virtual",
        "3": "Компилатор јавља грешку јер у класи C метод не може бити редефинисан"
    },
    "tacni_odgovori": [3]
},

"188": {
    "pitanje": " Дат је код у програмском језику C#, који дефинише рекурзивни метод. Анализирати код и одредити резултат извршавања задатог метода: <br> <br> publiclong fun(int n){ <br> return n * fun(n - 1); <br> } ",
    "moguci_odgovori": {
        "0": "Резултат позива fun(3) je 1.",
        "1": "Резултат позива fun(3) je 2.",
        "2": "Резултат позива fun(3) je 6.",
        "3": "Позив fun(3) изазива грешку јер производи бесконачан ланац позива истог метода fun(…)."
    },
    "tacni_odgovori": [3]
},

"189": {
    "pitanje": "Дат је код у програмском језику C#, који дефинише рекурзивни метод. Анализирати код и одредити резултат који ће се приказати на екрану: <br> <br> namespace TestPrimer { <br> classProgram{ <br> staticvoid Main(string[] args){ <br> fun(2); <br>  } <br> publicstaticvoid fun(int n) { <br> while (n \f>\f 1){ <br> Console.Write((n - 1) + \" \"); <br>  fun(n - 1); <br>  }   }      }    } ",
    "moguci_odgovori": {
        "0": "Програм на екрану не приказује ништа ",
        "1": "Програм на екрану приказује 1 2 3",
        "2": "Програм на екрану приказује 3 2 1",
        "3": "Програм на екрану бесконачно приказује 1 1 1 1 1 ... ",
        "4": "Програм на екрану бесконачно приказује 2 2 2 2 2 ... "
    },
    "tacni_odgovori": [3]
},

"190": {
    "pitanje": " Дат је код у програмском језику C#, који дефинише рекурзивни метод. Анализирати код и одредити резултат извршавања задатог метода: <br> <br> publicstaticint fun(int n) { <br> if (n == 1) return 1; <br> elsereturn n + fun(n - 1); <br> } ",
    "moguci_odgovori": {
        "0": "Позивом fun (4) се исти метод fun () позива још 2 пута.",
        "1": "Позивом fun (5) се исти метод fun () позива још 4 пута.",
        "2": "Позивом fun (4) се исти метод fun () позива још 4 пута.",
        "3": "Позивом fun (5) се исти метод fun () позива још 6 пута."
    },
    "tacni_odgovori": [1]
},

"191": {
    "pitanje": "Дат је код у програмском језику C#, рекурзивни метод, који проверава да ли је неки стринг палиндром. Да би код био комплетиран потребно је допунити трећи ред условом if наредбе. <br> <br> 1.publicstaticbool palindrom(String s) <br> 2. { <br> 3. if (s.Length \f<\f= 1) returntrue; //bazni slučaј <br> 4.elseif (___________________) returnfalse; <br> 5.elsereturn palindrom(s.Substring(1, s.Length - 2)); <br> 6. } <br> <br> Заокружити број испред траженог одговора: ",
    "moguci_odgovori": {
        "0": "s[0] != s[s.Length - 1]",
        "1": "s[0] != s[s.Length]",
        "2": "s[1] != s[s.Length - 1]",
        "3": "s[1] != s[s.Length]"
    },
    "tacni_odgovori": [0]
},

"192": {
    "pitanje": "Дат је код у програмском језику C#, рекурзивни метод, који проверава да ли је неки string палиндром. Да би код био комплетиран потребно је допунити седми ред. <br> <br> 1.publicstaticbool Palindrom(String s){ <br> 2. return Palindrom(s, 0, s.Length - 1); <br> 3. } <br> 4.publicstaticbool Palindrom(String s, int levi, int desni){ <br> 5.if (desni \f<\f= levi) returntrue; // bazni slucaj <br> 6.elseif (s[levi] != s[desni]) returnfalse; <br> 7.elsereturn_______________________; <br> 8. } <br> <br> Заокружити број испред траженог одговора:",
    "moguci_odgovori": {
        "0": "Palindrom(s)",
        "1": "Palindrom(s, levi, desni)",
        "2": "Palindrom(s, levi + 1, desni - 1)}",
        "3": "Palindrom(s, levi + 1, desni)",
        "4": "Palindrom(s, levi, desni - 1)"
    },
    "tacni_odgovori": [2]
},

"193": {
    "pitanje": "Дат је код у програмском језику C#, рекурзивни метод за сортирање низа рационалних бројева у опадајућем редоследу. Да би код био комплетиран потребно је допунити други ред помоћу једног од понуђених одговора. <br> <br> 1. publicstaticvoid Sortiranje(double[] niz){ <br> 2. _____________________________;  } <br> 3. publicstaticvoid Sortiranje(double[] niz, int kraj){ <br> 4. if (kraj \f>\f 0){ <br> 5. int imin = 0; <br> 6. double min = niz[0]; <br> 7. for (int i = 1; i \f<\f= kraj; i++) <br> 8. if (niz[i] \f<\f min){ <br> 9. min = niz[i]; <br> 10. imin = i;   } <br> 11. niz[imin] = niz[kraj]; <br> 12. niz[kraj] = min; <br> 13. Sortiranje(niz, kraj - 1);   }   } <br> <br> Заокружити број испред траженог одговора:",
    "moguci_odgovori": {
        "0": "Sortiranje(niz)",
        "1": "Sortiranje(niz, niz.length)",
        "2": "Sortiranje(niz, niz.length+1)",
        "3": "Sortiranje(niz, niz.length-1)"
    },
    "tacni_odgovori": [3]
},

"194": {
    "pitanje": "Дата је дефиниција класе у програмском језику C#. Проценити где у дефиницији класе (испред које методе) треба заменити знакове ??? службеном речју static. <br> <br> 1. publicclassTest { <br> 2. privateint broj; <br> 3. <br> 4. public ??? int kvadrant(int n) { return n * n; } <br> 5. public ??? int getBroj() { return broj; } <br> 6. } <br> <br> Заокружити број испред тачне изјаве:",
    "moguci_odgovori": {
        "0": "Метода kvadrant МОРА да буде статичка, док метода getBroj може и не мора",
        "1": "Обе методе морају бити статичке",
        "2": "Ни једна од дефинисаних метода није статичка",
        "3": "Метода getBroj НЕ СМЕ да буде статичка, док метода kvadrant може и не мора."
    },
    "tacni_odgovori": [3]
},

"195": {
    "pitanje": "У програмском језику C#, метод Equals() за проверу једнакости два објекта је дефинисан у класи Object. У датом програмском коду, у класи Klasa је предефинисан метод Equals(). Анализирати код и проценити тачност извршења. <br> <br> namespace TestPrimer { <br> classProgram { <br> staticvoid Main(string[] args) { <br> Object obj1 = newKlasa(); <br> Object obj2 = newKlasa(); <br> Console.WriteLine(obj1.Equals(obj2));   }  } <br> classKlasa { <br> int x; <br> publicnewbool Equals(Klasa o) {returnthis.x == a.x; }   }  } <br> Заокружити број испред тачног одговора:",
    "moguci_odgovori": {
        "0": "Програм има грешку, јер се изразом obj1.equals(obj2) проверава једнакост објеката obj1 и obj2 различитог типа од Object.",
        "1": "Програм има грешку, јер се једнакост објеката obj1 и obj2 типа Klasa проверава изразом obj1 == obj2.",
        "2": "Програм се извршава без грешке и приказује се true на екрану.",
        "3": "Програм се извршава без грешке и приказује се false на екрану."
    },
    "tacni_odgovori": [3]
},

"196": {
    "pitanje": "У програмском језику C#, метод Equals(...) је метод инстанце класе Object којим се проверавада ли је објекат из кога се метод позива једнак неком задатом објекту. Овај метод се може надјачати (override-овати) у наслеђеним класама. Одредити заглавље овог метода у класи string у којој би метод био надјачан. <br> <br> Заокружити број испред понуђеног тачног одговора: ",
    "moguci_odgovori": {
        "0": "public override boolEquals(string s)",
        "1": "public new boolEquals(string s)",
        "2": "public override bool Equals(Object obj)",
        "3": "public static bool Equals(Object obj)",
        "4": "public boolEquals(string s1, string s2)"
    },
    "tacni_odgovori": [2]
},

"197": {
    "pitanje": "У програмском језикуC#, метод Equals() за проверу једнакости два објекта је дефинисан у класи Object. У датом програмском коду у класи Klasa је надјачан (override-oван) метод Equals(). Анализирати код и проценити тачност извршења. <br> <br> namespace TestPrimer { <br> classProgram { <br> staticvoid Main(string[] args) {    <br> Object obj1 = newKlasa(); <br> Object obj2 = newKlasa();    <br> Console.WriteLine(obj1.Equals(obj2));    } } <br> classKlasa { <br> int x; <br> publicoverridebool Equals(object o) { <br> Klasa a = (Klasa)o; <br> returnthis.x == a.x;    }     }    }  <br> Заокружити број испред тачног одговора.",
    "moguci_odgovori": {
        "0": "Програм има грешку, јер се изразом obj1.equals(obj2) проверава једнакост објеката obj1 и obj2 различитог типа од Object.",
        "1": "Програм има грешку, јер се једнакост објеката obj1 и obj2 типа Klasa проверава изразом obj1 == obj2.",
        "2": "Програм се извршава без грешке и приказује се true на екрану.",
        "3": "Програм се извршава без грешке и приказује се false на екрану"
    },
    "tacni_odgovori": [2]
},

"198": {
    "pitanje": "Дат је код програма у програмском језику C#. У Main() методи декларисане су променљиве s, оbj и t. Анализирати декларацију и одредити на који објекат указују променљиве s, оbj и t. <br> <br> namespace TestPrimer { <br> classProgram { <br> staticvoid Main(string[] args) <br> { <br> string s = \"c#\"; <br> object obj = s; <br> string t = (string)obj; <br>  } <br>  } <br> } <br> Заокружити број испред тачног одговора:",
    "moguci_odgovori": {
        "0": "Када се вредност променљиве s додељује променљивој оbj у наредби Object obj = s, конструише се нови објекат",
        "1": "Када се конвертује тип променљивe оbj и њена вредност додељује променљивој t у наредби String t = (String)obj, конструише се нови објекат.",
        "2": "Када се конвертује тип променљивe оbj и њена вредност додељује променљивој t у наредби String t = (String)obj, садржај променљиве obj се мења.",
        "3": "Променљиве s, оbj и t указују на исти објекат типа string."
    },
    "tacni_odgovori": [3]
},

"199": {
    "pitanje": "ДДат је код програма у програмском језику C# који дефинише класу Osoba са њеним методама и атрибутима. Анализирати дати код и одредити који од понуђених одговора је потребно дописати у 1. ред кода како би метода била тачно дефинисана. <br> <br> 1. publicclassOsoba______________________________ { <br> 2. privatestring ime; <br> 3. privatestring prezime; <br> 4. int godina; <br> 5. public Osoba(string ime, string prezime, int godina) { <br> 6. this.ime = ime; <br> 7. this.prezime = prezime; <br> 8. this.godina = godina;  } <br> 9. publicint GetGodina() { returnthis.godina; } <br> 10. publicint CompareTo(Osoba obj) { <br> 11. if (this.godina \f>\f obj.GetGodina()) return 1; <br> 12. elseif (this.godina \f<\f obj.GetGodina()) return -1; <br> 13. elsereturn 0;    } <br> 14. publicoverridestring ToString() { <br> 15. return\"Ime: \" + this.ime + \"\\tPrezime: \" + this.prezime + <br> 16. \"\\tGodina: \" + this.godina;  } <br> Заокружити број испред тачног одговора: ",
    "moguci_odgovori": {
        "0": ": IComparable<Osoba>",
        "1": ": IComparable",
        "2": ": IEquatable<Osoba>",
        "3": ": Comparer"
    },
    "tacni_odgovori": [0]
},






"200": {
    "pitanje": "Датим кодом у програмском језику C# креира се пет објеката класе Osoba која имплементира интерфејс IComparable. Допунити код програма наредбом која, помоћу колекције података, формира генеричку листу особа - променљива lista и наредбу која врши сортирање те листе. Анализирати дати код и одредити који од понуђених одговора је потребно дописати у 7. и 10. линију кода како би се правилно декларисала и сортирала променљива lista. <br> <br> 1. staticvoid Main(string[] args) { <br> 2. Osoba a = newOsoba(\"Marko Ilic\", 34); <br> 3. Osoba b = newOsoba(\"Mirko Prljic\", 30); <br> 4. Osoba c = newOsoba(\"Danilo Sekara\", 24); <br> 5. Osoba d = newOsoba(\"Sara Males\", 15); <br> 6. Osoba e = newOsoba(\"Borko Ilic\", 34); <br> 7. _____________________________________________ ; <br> 8. lista.Add(a); lista.Add(b); lista.Add(c); <br> 9. lista.Add(d); lista.Add(e); <br> 10. _____________________________________________ ; <br> 11. Console.WriteLine(\"Prikaz osoba po godinama starosti:\"); <br> 12. foreach (Osoba x in lista) { Console.WriteLine(x); } <br> 13. } <br> Заокружити број испред тачног одговора:",
    "moguci_odgovori": {
        "0": "List lista = newList();иlista.Sort(null);",
        "1": "List<Osoba> lista; иlista.Sort(); ",
        "2": "ArrayList<Osoba> lista = newArrayList<Osoba>(); иlista.Sort();",
        "3": "List<Osoba> lista = newList<Osoba>(); иlista.Sort();"
    },
    "tacni_odgovori": [3]
},

"201": {
    "pitanje": "Дат је код програма у програмском језику C# који дефинише класу Osoba са њеним методама и атрибутима. Анализирати дати код и на основу декларације метода CompareTo (...) и Clone() одредити кôд који недостаје у првој линији. <br> <br> 1. classOsoba : _________________________________{ <br> 2. privatestring ime; <br> 3. privatedouble dohodak; <br> 4. public Osoba(string ime, double dohodak) { <br> 5. this.ime = ime; <br> 6. this.dohodak = dohodak;   } <br> 7. publicint CompareTo(Osoba osb) { <br> 8. if (this.dohodak \f<\f osb.dohodak) return -1; <br> 9. elseif (this.dohodak \f>\f osb.dohodak) return 1; <br> 10. elsereturn 0;  } <br> 11. publicObject Clone() { <br> 12. returnthis.MemberwiseClone();   } <br> 13. publicoverridestring ToString(){ <br> 14. return\"Ime: \"+this.ime+\"\\nDohodak: \"+this.dohodak;  }  } <br> Заокружити број испред тачног одговора: ",
    "moguci_odgovori": {
        "0": "IComparable<Osoba>, ICloneable",
        "1": "Comparable<Osoba>, Cloneable",
        "2": "IComparable<Osoba>, ICloneable<Osoba>",
        "3": "IComparable, ICloneable"
    },
    "tacni_odgovori": [0]
},

"202": {
    "pitanje": "Дат је део кода који је написан на C# програмском језику. Анализирати и одредити шта ће се приказати на излазу извршавањем овог кода: <br> <br> classPassA{ <br> publicstaticvoid Main(string[] args){ <br> PassA p = newPassA(); <br>  p.start();  } <br> publicvoid start() { <br> long[] a1 = {3,4,5}; <br> long[] a2 = fix(a1); <br> Console.Write(a1[0] + a1[1] + a1[2] + \" \"); <br> Console.WriteLine(a2[0] + a2[1] + a2[2]);  } <br> long[] fix(long[] a3){ <br>  a3[1] = 7; <br> return a3;  }  }",
    "moguci_odgovori": {
        "0": "12 15",
        "1": "15 15",
        "2": "345 375",
        "3": "375 375"
    },
    "tacni_odgovori": [1]
},

"203": {
    "pitanje": "TBU",
    "moguci_odgovori": {
        "0": "Грешке су у редовима 7, 10 i 16",
        "1": "Грешке су у редовима 7, 9 i 22",
        "2": "Грешке су у редовима 6, 7 i 10",
        "3": "Грешке су у редовима 6, 9 i 10",
        "4": "Грешке су у редовима 6, 9 i 24",
        "5": "Грешке су у редовима 9, 10 i 24"
    },
    "tacni_odgovori": [3]
},

"204": {
    "pitanje": "Дат је део кода који је написан на C# програмском језику. Анализирати код и одредити шта ће бити на излазу: <br> <br> classPassS{ <br> publicstaticvoid Main(String[] args){ <br> PassS p = newPassS(); <br>  p.start();  } <br> void start(){ <br> String s1 = \"slip\"; <br> String s2 = fix(s1); <br> Console.WriteLine(s1 + \" \" + s2);  } <br> String fix(String s1){ <br>  s1 = s1 + \"stream\"; <br> Console.Write(s1 + \" \"); <br> return\"stream\"; <br> } }",
    "moguci_odgovori": {
        "0": "slip stream",
        "1": "slipstream stream",
        "2": "stream slip stream",
        "3": "slipstream slip stream"
    },
    "tacni_odgovori": [3]
},

"205": {
    "pitanje": "Дат је код програма у програмском језику C# који дефинише апстрактну класу Figura. У класи Figura написати статички иницијални блок у ком се иницијализује вредност атрибута brojFigura. Заокружити број испред наредбе коју треба додати у 7.линију кода, којом се иницијализује вредност статичког атрибута brojFigura. <br> <br> 1. publicabstractclassFigura { <br> 2. protectedstaticint brojFigura; <br> 3. protectedstring naziv; <br> 4. public Figura(string naziv) { <br> 5. this.naziv = naziv;  } <br> 6. ________________________________________ <br> 7. publicabstractdouble povrsinaFigure(); <br> 8. publicabstractdouble obimFigure(); <br> 9. publicstaticvoidUvecajBrojFigura(){ <br> 10. brojFigura++;  } <br> 11. publicoverridestring ToString(){ <br> 12. return\"Figura \";   }   } <br> Заокружити број испред одговора који даје исправно решење:",
    "moguci_odgovori": {
        "0": "static Figura() { brojFigura = 0; }",
        "1": "brojFigura = 0; ",
        "2": "static { brojFigura = 0; }",
        "3": "public Figura() { brojFigura = 0; } "
    },
    "tacni_odgovori": [0]
},

"206": {
    "pitanje": "Дат је код програма у програмском језику C# у ком су дефинисане три класе: classProgram која садржи Main(string[] args) методу, classA и classB. Анализирати дати код и одредити шта ће се приказати на екрану као резултат извршавања овог програма. Заокружити број испред одговора који садржи резултат исписа: <br> <br> classProgram : A { <br> publicstaticvoid Main(string[] args) { <br> Program p = newProgram(); <br> }  } <br> classA : B { <br> public A() { Console.WriteLine(\"Pozvan podrazumevani konstruktor klase <br> A\"); }  } <br> classB { <br> public B() { Console.WriteLine(\"Pozvan podrazumevani konstruktor klase <br> B\"); }  } ",
    "moguci_odgovori": {
        "0": "Ништа ",
        "1": "Позван подразумевани конструктор класе A",
        "2": "Позван подразумевани конструктор класе B",
        "3": "Позван подразумевани конструктор класе A и у другом реду: Позван подразумевани конструктор класе B",
        "4": "Позван подразумевани конструктор класе B и у другом реду: Позван подразумевани конструктор класе A"
    },
    "tacni_odgovori": [4]
},

"207": {
    "pitanje": "Дат је код програма у програмском језику C# у ком су дефинисане три класе: classProgram која садржи Main(string[] args) методу, classA и classB. Анализирати дати код и одредити да ли је код исправно написан. Заокружити број испред исказа који даје информацију о тачности кода: <br> <br> classProgram { <br> publicstaticvoid Main(string[] args) { <br> B b = newB(); <br>  b.Metod(5); <br> Console.WriteLine(\"b.i je \" + b.CitajI()); <br>  } <br> } <br> classA { <br> int i; <br> publicint CitajI(){return i;} <br> publicvoidMetod(int i) { this.i = i; } <br> } <br> classB : A { <br> publicvoidMetod(string s){ <br> Console.WriteLine(s);   }  }",
    "moguci_odgovori": {
        "0": "Програм има грешку, јер је метод Metod(inti) надјачан (предефинисан) са различитим потписом у класи B.",
        "1": "Програм има грешку, јер се b.Mетод(5) не може позвати пошто је метод Metod(inti) заклоњен у класи B",
        "2": "Програм има грешку због b.i, јер је поље i неприступачно из класе B.",
        "3": "Програм нема грешке, јер наслеђени метод класе А,Metod(inti) није надјачан у класи B, већ је дефинисан преоптерећен метод Metod(string s). "
    },
    "tacni_odgovori": [3]
},

"208": {
    "pitanje": "Заокружити бројеве испред наведених чланова класе који се ни под којим условима не наслеђују са родитељске класе на изведену класу:",
    "moguci_odgovori": {
        "0": "Readonly својства ",
        "1": "Заштићени чланови класа",
        "2": "Својства (property)",
        "3": "Приватни чланови класа",
        "4": ". Конструктор класе"
    },
    "tacni_odgovori": [3,4]
},

"209": {
    "pitanje": "Дата je наредба кода у програмском језику C# која представља декларацију низа. Које су декларација тачне:",
    "moguci_odgovori": {
        "0": "int niz = new int(30);",
        "1": "double[ ] niz = new double[30]; ",
        "2": "int[ ] niz = { 3, 4, 3, 2 };",
        "3": "char[ ] niz = new char[ ];",
        "4": "char[ ] niz = new char { 'a', 'b', 'c', 'd' };",
        "5": "char[ ] niz = new char[ ] { 'a', 'b' };"
    },
    "tacni_odgovori": [1,2,5]
},

"210": {
    "pitanje": "Да би наслеђени метод могао да се редефинише и тиме измени његова функционалност у класама наследницама, у родитељској класи испред ознаке повратног типа метода наводи се нека од понуђених кључних речи. <br> <br> Заокружити бројеве испред кључних речи које омогућавају редефинисање дефинисаног метода кроз ланац наслеђивања: ",
    "moguci_odgovori": {
        "0": "new",
        "1": "virtual",
        "2": "sealed",
        "3": "override",
        "4": "abstract",
        "5": "base",
        "6": "довољно је да буде public или protected"
    },
    "tacni_odgovori": [1,3]
},

"211": {
    "pitanje": "У класи Figura дат је подразумевани (default) конструктор и конструктор са 4 параметра: <br> <br> public Figura() {...} <br> public Figura(string ime, string boja, int pozX, int pozY) {...} <br> <br> Заокружити бројеве испред исправно написаних наредби креирања објеката класе Figura: ",
    "moguci_odgovori": {
        "0": "Figura f = Figura(\"lovac\", \"beli\", 7, 3); ",
        "1": "Figura f = newFigura(\"beli\", \"lovac\", 7, 3);",
        "2": "Figura f = newFigura();",
        "3": "Figura f = newFigura(\"lovac\", 3, 7, \"beli\");",
        "4": "Figura f = newFigura(\"lovac\", \"beli\", 3, 7); ",
        "5": "Figura f = newFigura(\"lovac\", \"beli\", 3);"
    },
    "tacni_odgovori": [1,2,4]
},

"212": {
    "pitanje": "Дат је код на C#- у којим су креиране три класе у ланцу наслеђивања. Имајући у виду класификаторе приступа пољима класа, заокружити бројеве испред поља која ће бити видљива унутар класе Sin: <br> <br> publicclassDeda { <br> privatedouble penzija; <br> protectedstring adresa; <br> publicstring ime; <br> } <br> publicclassOtac: Deda { <br> privatedouble plata; <br> protectedstring struka; <br> } <br> publicclassSin: Deda { <br> publicint razred; <br> } ",
    "moguci_odgovori": {
        "0": "penzija",
        "1": "adresa",
        "2": "ime",
        "3": "plata",
        "4": "struka",
        "5": "razred"
    },
    "tacni_odgovori": [1,2,5]
},

"213": {
    "pitanje": "Дат је код на C#- у којим су креиране три класе у ланцу наслеђивања. Унутар сваке класе декларисан је по један private, public и protected атрибут. У методи Main() класе Program креиран је објекат s класе Sin (Sin s = newSin();) Заокружити бројеве испред поља која ће бити видљива у креираном објекту s класе Sin: <br> <br> publicclassDeda { <br> privatedouble penzija; <br> protectedstring adresa; <br> publicstring ime; } <br> publicclassOtac: Deda { <br> privatedouble plata; <br> protectedstring firma; <br> publicstring struka; } <br> publicclassSin: Otac { <br>  privatedouble prosek; <br>  protectedint razred; <br>  publicstring skola; } ",
    "moguci_odgovori": {
        "0": "penzija ",
        "1": "adresa",
        "2": "ime",
        "3": "plata",
        "4": "struka",
        "5": "firma",
        "6": "prosek",
        "7": "razred",
        "8": "skola"
    },
    "tacni_odgovori": [2,4,8]
},

"214": {
    "pitanje": "Дати су искази који се односе на правила писања try-catch-finally блокова за руковање изузецима. Који искази су тачни:",
    "moguci_odgovori": {
        "0": "Блок try мора имати бар један catch блок",
        "1": "Блок try може имати више catch блокова",
        "2": "Ако блок try има више catch блокова, изузетак основне Exception класе мора се хватати у првом catch блоку",
        "3": "Ако блок try има више catch блокова, битан је редослед њиховог писања",
        "4": "Блок try мора имати бар један finally блок",
        "5": "Блок try не сме да има више catch блокова"
    },
    "tacni_odgovori": [0,1,3]
},

"215": {
    "pitanje": "Који искази у програмском језику C# дефинишу конструктор:",
    "moguci_odgovori": {
        "0": "Подразумевани конструктор без параметара се увек аутоматски додаје класи",
        "1": "Подразумевани конструктор без параметара се класи аутоматски додаје уколико у њој није експлицитно дефинисан ниједан конструктор",
        "2": "У класи се мора експлицитно дефинисати бар један конструктор",
        "3": "Конструктори немају тип резултата, чак ни void"
    },
    "tacni_odgovori": [1,3]
},

"216": {
    "pitanje": "Дати су искази који дефинишу полиморфизам, једну од особина објектно-оријентисаног језика C#. Који искази су тачни:",
    "moguci_odgovori": {
        "0": "Када је класа Б изведена из класе А, објекту класе А може се доделити показивач на објекат класе Б.",
        "1": "Када је класа Б изведена из класе А, у генеричку листу објеката класе Б, могу се убацити и објекти класе А и објекти класе Б.",
        "2": "Објекат типа Б се може пренети као аргумент методу на место параматера типа А уколико је Б класа наследница од А.",
        "3": "Када се у класи Б која је изведена из класе А изврши предефинисање (override) наслеђене методе, онда су у објекту класе Б доступне обе верзије ове методе (исто као код преoптерећивања метода – overload)."
    },
    "tacni_odgovori": [0,2]
},

"217": {
    "pitanje": "Дате су наредбе у програмском језику C# које дефинишу заглавље методе Print() са променљивим бројем параметара. Одредити који од понуђених одговора су исправни:",
    "moguci_odgovori": {
        "0": "publicvoid Print(paramsstring[] niska, paramsdouble[] broj)",
        "1": "publicvoid Print(paramsdouble[] broj, string niska)",
        "2": "publicvoidparams Print(double d1, double d2)",
        "3": "publicvoid Print(paramsdouble[] broj)",
        "4": "publicvoid Print(int n, paramsdouble[] broj)"
    },
    "tacni_odgovori": [3,4]
},

"218": {
    "pitanje": "Дат је код програма у програмском језику C#. Код садржи објекте две класе у којима је дефинисан метод toString(). Анализирати код датог програма и одредити који од датих исказа су тачни. <br> <br> namespace TestPrimer{ <br> classProgram { <br> staticvoid Main(string[] args) { <br> Object a = newKlasaA(); <br> Object obj = newObject(); <br> Console.WriteLine(a); <br> Console.WriteLine(obj); <br> }  }  }  <br> classKlasaA{ <br> int x; <br> publicoverridestring ToString() {return\"x u A je \" + x;} } <br> Заокружити бројеве испред очекиваних одговора:",
    "moguci_odgovori": {
        "0": "Програм има грешку, јер наредбу Console.WriteLine(a) треба заменити наредбом Console.WriteLine(a.toString()).",
        "1": "Приликом извршавања наредбе Console.WriteLine(a), програм позива се метод toString() наслеђен из класе Object",
        "2": "Приликом извршавања наредбе Console.WriteLine(a), програм позива метод toString() из класе KlasaА.",
        "3": "Приликом извршавања наредбе Console.WriteLine(obj), програм позива метод toString() из класе Object."
    },
    "tacni_odgovori": [2,3]
},

"219": {
    "pitanje": " У програмском језику C# дата је декларација две класе: KlasaА и KlasaB која наслеђује класу KlasaА. Анализирати дате класе и проценити који од понуђених исказа су тачни. <br> <br> namespace TestPrimer { <br> classProgram { <br> staticvoid Main(string[] args) { <br> KlasaB b = newKlasaB(); <br>  b.Print(); <br>  }   } <br> classKlasaA { <br> string s; <br> public KlasaA(string s) { this.s = s; } <br> publicvoid Print() { Console.WriteLine(this.s); }   } <br> classKlasaB :KlasaA{ }  } ",
    "moguci_odgovori": {
        "0": "Програм има грешку, јер KlasaB нема подразумевани конструктор KlasaB()",
        "1": "Програм има грешку јер KlasaB има подразумевани конструктор, док родитељска KlasaА нема такав конструктор. Програм би радио без грешке уколико би се уклонио конструктор са параметрима из KlasaА.",
        "2": "Програм има грешку која се може отклонити уколико би се у KlasaА експлицитно додао конструктор без параметара KlasaА().",
        "3": "Програм нема грешку, извршава се, али се на конзоли ништа не исписује јер је поље s добило подразумевану вредност String.Empty"
    },
    "tacni_odgovori": [1,2]
},

"220": {
    "pitanje": "Дат је код програма у програмском језику C# који декларише два објекта типа Pravougaonik и један објекат типа Krug. Класе Pravougaonik и Krug наслеђују апстрактну класу Figura и обе класе имају методуToString. Код програма треба допунити са наредбом која ће исписивати низ Figura[] декларисан у коду програма. <br> <br> 1. publicabstractclassFigura { <br> 2. protectedstaticint brojFigura=0; <br> 3. publicstaticint BrojFigura {get{return brojFigura;}} <br> 4. public Figura() {brojFigura++; } <br> 5. publicabstractdouble povrsinaFigure(); <br> 6. publicoverridestring ToString(){return\"Figura \";} } <br> … <br> 1. Pravougaonik pr1 = newPravougaonik(); <br> 2. Pravougaonik pr2 = newPravougaonik(3, 2); <br> 3. Krug kr1 = newKrug(2); <br> 4. Console.WriteLine(\"Broj figura=\"+Figura.BrojFigura+\"\\n\"); <br> 5. Figura[] niz = newFigura[Figura.BrojFigura]; <br> 6. niz[0] = pr1; niz[1] = pr2; niz[2] = kr1; <br> 7. Console.WriteLine(\"Prikaz figura:\"); <br> 8. ______________________________________________________________ <br> Заокружити бројеве испред одговора који представљају могуће начине приказа низа фигура: ",
    "moguci_odgovori": {
        "0": "foreach(Figura el in niz) Console.WriteLine(el);",
        "1": "for(int i=0; i&ltniz.Length; i++) Console.WriteLine(niz[i]);",
        "2": "foreach (el in niz) Console.WriteLine(el);",
        "3": "foreach (int i in niz) Console.WriteLine(niz[i]);"
    },
    "tacni_odgovori": [0,1]
},

"221": {
    "pitanje": "Дат је код програма у програмском језику C# и састоји се од две класе у једној датотеци. Анализирати дати код и проценити његову тачност: <br> <br> namespace TestPrimer{ <br> classProgram{ <br> staticvoid Main(string[] args){ <br> A a = newA(); <br>  a.Print(); <br>  }   } <br> classA{ <br> string s; <br> public A(string s) { this.s = s; } <br> publicvoidPrint(){ <br> Console.WriteLine(s); <br>  }   }  }",
    "moguci_odgovori": {
        "0": "Програм има грешку, јер класа А није јавна класа",
        "1": "Програм има грешку, јер класа А нема подразумевани конструктор",
        "2": "Програм нема грешака и нормално се извршава ништа не приказујући на екрану",
        "3": "Програм има грешку која се може исправити уколико се у четвртом реду наредба A a = new A(); замени наредбом A a = new A(\"poruka\");"
    },
    "tacni_odgovori": [1,3]
},

"222": {
    "pitanje": "Дата je дефиниција класе у програмском језику C# и састоји се од два конструктора, једне методе и пољa x. У дефиницији се користи службена реч this. Анализирати дати код и проценити тачност следећих исказа: <br> <br> classTestPrimer{ <br> publicdouble x; <br> public TestPrimer(double x){ <br> this.Fun(); <br> this.x = x;  } <br> public TestPrimer(){ <br> Console.WriteLine(\"Podrazumevani konstruktor\"); <br> this(23);   } <br> publicvoidFun(){ <br> Console.WriteLine(\"Poziv metoda fun()\");  <br> }   } ",
    "moguci_odgovori": {
        "0": "this.Fun() у конструктору TestPrimer(double x) може се поједноставити и заменити само са Fun()",
        "1": "this.xу конструктор у TestPrimer(double x) може се поједноставити и заменити само са x",
        "2": "позив конструктора this(23) унутар другог конструктора TestPrimer() је прво шта се извршава и мора се писати одмах после декларације public TestPrimer():this(23) ",
        "3": "this(23) у конструктору Test() мора се заменити са прецизнијим изразом this(23.0)"
    },
    "tacni_odgovori": [0,2]
},

"223": {
    "pitanje": "Дата je дефиниција класе у програмском језику C# и састоји се од два конструктора, методе и поља x и y. У петом реду дефинисан је конструктор са параметрима који формира тачку са координатама x и y. Допунити дефиницију конструктора. <br> <br> 1. publicclassPoint { <br> 2. privatedouble x, y; <br> 3.public Point() { x = 0; y = 0; } <br> 4.publicvoid set(double xx, double yy) { x = xx; y = yy; } <br> 5.public Point(double x, double y) { ______________; }  } <br> Заокружити бројеве испред тачних одговора:",
    "moguci_odgovori": {
        "0": "this.x=x; this.y=y;",
        "1": "x=x; y=y;",
        "2": "set(x,y);",
        "3": "set(this.x,this.y); ",
        "4": "x=this.x; y=this.y;"
    },
    "tacni_odgovori": [0,2]
},

"224": {
    "pitanje": " Дата je дефиниција класе у програмском језику C# и састоји се од два конструктора и поља x и y. У четвртом реду допунити подразумевани конструктор без параметара класе Point, који формира тачку у координатном почетку, позивајући конструктор са параметрима. <br> <br> 1.publicclassPoint { <br> 2.privatedouble x, y; <br> 3.public Point(double x, double y) { <br> 4.this.x = x; this.y = y; <br> 5. } <br> 6.public Point()_______________ <br> 7. } <br> Заокружити бројеве испред тражених одговора:",
    "moguci_odgovori": {
        "0": "public Point(): base(0, 0) { }",
        "1": "public Point(): this(0, 0) { }",
        "2": "public Point(){ Point(0,0); } ",
        "3": "public Point(): this(0.0, 0.0) { }",
        "4": "public Point(){ Point(0.0, 0.0); }"
    },
    "tacni_odgovori": [1,3]
},

"225": {
    "pitanje": "Дати су делови кода у програмском језику C# који треба да рачунају збир елемената матрице a, декларисане на следећи начин: <br>  int[,] a = newint[10, 10]. <br>  Анализирати дате кодове и проценити који од предлога је тачан. ",
    "moguci_odgovori": {
        "0": "int sum = 0; <br> for (int i = 0; i \f<\f b.Length; i++) <br> for (int j = 0; j \f<\f b[i].Length; j++) <br> sum3 += b[i][j]; ",
        "1": "int sum = 0; <br> foreach (int x in a) sum1 += x;",
        "2": "int sum = 0; <br> for (int i = 0; i \f<\f a.GetLength(0); i++) <br> for(int j=0; j\f<\fa.GetLength(1); j++) <br> sum2 += a[i,j];",
        "3": "int sum = 0; <br> foreach (int[] vrsta in b) <br> foreach (int el in vrsta) <br> sum4 += el;"
    },
    "tacni_odgovori": [1,2]
},

"226": {
    "pitanje": "На програмском језику C# дефинисане су класе: <br> 1.publicclassA { <br> 2. publicvirtualint Metod() { return 10; } <br> 3. } <br> 4.publicclassB : A { <br> 5. publicnewint Metod() { return 20; } <br> 6. } <br> 7.publicclassC : B { <br> 8. publicoverrideint Metod() { return 30; } <br> 9. } <br> <br> Компилатор јавља грешку при превођењу овог кода коју је могуће решити на више начина у зависности од очекиваног ефекта. <br> <br> Која ће решења отклонити грешку у коду:",
    "moguci_odgovori": {
        "0": "У 5. линији кода метод у класи B прогласити за abstract уместо new",
        "1": "У 5. линији кода кључну реч new заменити са override",
        "2": "У 7. линији кода класу C наследити из класе A, уместо из класе B",
        "3": "У 8. линији кода, иза декларације методе у класи C, позвати основни метод :base()",
        "4": "У 8. линији кода обрисати кључну реч override и заменити је са sealed"
    },
    "tacni_odgovori": [1,2]
},

"227": {
    "pitanje": "Дат је код програма у програмском језику C# којим су дефинисане четири класе: classProgram која садржи Main(String[] args) методу, classMasterStudent, classStudent и classOsoba. Приликом превођења овог кода компајлер јавља грешку. Заокружити бројеве испред понуђених исказа који описују разлоге настајања грешке приликом компајлирања: <br> <br> classProgram{ <br> staticvoid Main(string[] args){ <br>  m(newMasterStudent()); <br>  m(newStudent()); <br>  m(newOsoba()); <br>  m(newObject()); } <br> publicstaticvoid m(Student x){ <br> Console.WriteLine(x.ToString());   }  } <br> classMasterStudent : Student{ } <br> classStudent: Osoba{ <br> publicstring toString(){return\"Student\";}  } <br> classOsoba: Object{ <br> publicstring toString(){return\"Osoba\";} ",
    "moguci_odgovori": {
        "0": "Грешка је у позиву m(new MasterStudent())",
        "1": "Грешка је у позиву m(new Student()).",
        "2": "Грешка је у позиву m(new Osoba()).",
        "3": "Грешка је у позиву m(new Object())."
    },
    "tacni_odgovori": [2,3]
},

"228": {
    "pitanje": "Преко јавних својстава (public property) може се остварити приступ приватним члановима класе. <br> <br> Постављање вредности приватног поља врши се наредбом ___________, док се читање <br> вредности приватног поља врши наредбом ___________ у оквиру јавног својства. ",
    "moguci_odgovori": {
        "0": "1- set <br> 2 - get",
        "1": "1- get <br> 2 - set"
    },
    "tacni_odgovori": [0]
},

"229": {
    "pitanje": "Метод дефинисан у родитељској класи, у класама наследницама може бити редефинисан или сакривен. <br> <br> Да би се омогућило редефинисање методе, при дефиницији у родитељској класи, испред ознаке повратног типа метода наводи се кључна реч virtual, abstract или override, <br> <br> док у изведеној класи испред ознаке повратног типа треба навести кључну реч _________. <br> Сакривање методе родитељске класе врши се тако што се у изведеној класи испред ознаке повратног типа наведе кључна реч _________. ",
    "moguci_odgovori": {
        "0": "1- new <br> 2 - override",
        "1": "1- override <br> 2 - new"
    },
    "tacni_odgovori": [1]
},

"230": {
    "pitanje": "Започете су изјаве које се односе на делове кода за обраду изузетака. <br> Довршити започете реченице: <br> <br> Наредбе које се извршавају у случају настанка грешке, стављају се унутар блока __________ <br> <br> Наредбе које се извршавају и ако се деси и ако се не деси грешка, стављају се унутар блока __________ <br> <br> Наредбе које могу изазвати грешку стављају се унутар блока __________",
    "moguci_odgovori": {
        "0": "1- catch <br> 2 - finaly <br> 3 - try",
        "1": "1- catch <br> 2 - try <br> 3 - finaly"
    },
    "tacni_odgovori": [0]
},

"231": {
    "pitanje": "На програмском језику C# дефинисана је структура SVreme и класа CVreme, а затим креиране по две променљиве типа Svremeи CVreme: <br> <br> publicstructSVreme { <br> publicint sat; <br> publicint min; <br> public SVreme(int h,int m){ <br> sat = h; min = m;   }  } <br> publicclassCVreme { <br> publicint sat; <br> publicint min; <br> public CVreme(int h,int m) { <br> sat = h; min = m;   }  } <br> SVreme sv1 = newSVreme(12,15); <br> SVreme sv2 = sv1; <br> CVreme cv1 = newCVreme(12,15); <br> CVreme cv2 = cv1; <br> <br> По извршењу следећих наредби доделе вредности пољима променљивих st1 и cv1, одредити и на одговарајућу линију уписати вредности које ће имати одговарајућа поља променљивих st2 и cv2. <br> <br> sv1.sat = 24; __________ sv2.sat = ____________; <br> <br> cv1.sat = 24; __________ cv2.sat = ____________;",
    "moguci_odgovori": {
        "0": "1- 24 <br> 2 - 12",
        "1": "1- 12 <br> 2 - 24 "
    },
    "tacni_odgovori": [1]
},

"232": {
    "pitanje": "На програмском језику C# дефинисане су две класе: <br> <br> publicclassRoditelj { <br> publicvirtualvoid Poruka1(){ Console.WriteLine(\"R1\"); } <br> publicvoid Poruka2(){ Console.WriteLine(\"R2\"); } <br> } <br> publicclassDete: Roditelj { <br> publicoverridevoid Poruka1(){ Console.WriteLine(\"D1\"); } <br> publicnewvoid Poruka2(){ Console.WriteLine(\"D2\"); } <br> } <br> Унутар функције Main, креирана су два објекта ових класа на следећи начин: <br> Dete x = newDete(); <br> Roditelj y = newDete(); <br> <br> Проценити ефекат извршења наведених позива, и на предвиђене линије уписати шта ће се видети на стандардном излазу извршењем позваних метода: <br> <br> x.Poruka1(); __________ <br> x.Poruka2(); __________ <br> y.Poruka1(); __________ <br> y.Poruka2(); __________ ",
    "moguci_odgovori": {
        "0": "1 - D1 <br> 2 - D2 <br> 3 - D1 <br> 4 - R2",
        "1": "1 - D1 <br> 2 - D2 <br> 3 - D1 <br> 4 - R1"
    },
    "tacni_odgovori": [0]
},

"233": {
    "pitanje": "На програмском језику C# дефинисане су две класе: <br> <br> publicclassKlasaA { <br> publicvirtualint Metod() { return 10; } } <br> publicclassKlasaB : KlasaA { <br> publicoverrideint Metod() { return 20; } } <br> publicclassKlasaC : KlasaB { <br> publicnewint Metod() { return 30; } } <br> <br> Kреирани су објекти ових класа и из њих позвана метода Metod(). На предвиђене линије уписати шта метод Metod() враћа при позиву из наведених објеката: <br> <br> KlasaA a = newKlasaA(); а.Metod() враћа вредност _______________ <br> <br> KlasaB b = newKlasaВ(); b.Metod() враћа вредност _______________ <br> <br> KlasaA bb = newKlasaB(); bb.Metod() враћа вредност _______________ <br> <br> KlasaC c = newKlasaC(); c.Metod() враћа вредност _______________ <br> <br> KlasaB cc = newKlasaC(); cc.Metod() враћа вредност _______________ <br> <br> KlasaA ccc = newKlasaC(); ccc.Metod() враћа вредност _______________ ",
    "moguci_odgovori": {
        "0": "1 - 10 <br> 2 - 20 <br> 3 - 20 <br> 4 - 30 <br> 5 - 20 <br> 6 - 10",
        "1": "1 - 10 <br> 2 - 20 <br> 3 - 20 <br> 4 - 30 <br> 5 - 20 <br> 6 - 20"

    },
    "tacni_odgovori": [1]
},

"234": {
    "pitanje": " Са леве стране наведене су врсте грешака које се могу десити у коду, а са десне описи тих грешака. На линију испред описа уписати редни број под којим је наведен одговарајући тип грешке: <br> <br> 1. Синтаксне грешке (syntax error) _______________ ____ Откривају се у фази компилације и најлакше су за кориговање <br> <br> 2. Логичке грешке (logical error) _______________ ____ Не морају, али се могу десити током извршења и тада доводе до „пуцања“ програма <br> <br> 3. Грешке у време извршења (run-time error) _______________ ____ Програм функционише, нема „пуцања“, али се добијају погрешни резултати ",
    "moguci_odgovori": {
        "0": "1 <br> 3 <br> 2",
        "1": "3 <br> 1 <br> 2"
    },
    "tacni_odgovori": [0]
},

"235": {
    "pitanje": "Са леве стране дате су кључне речи које одређују типове класа, а са десне су описи класа. <br> На линију испред описа уписати редни број под којим је наведен одговарајући тип класе: <br> <br> 1. abstract _______________ ____ Класа која се простире у више фајлова <br> <br> 2. sealed _______________ ____ Класа садржи само декларације метода, али не и дефиницију (тело) методе <br> <br> 3. partial _______________ ____ Класа која се не може инстанцирати <br> <br> 4. interface _______________ ____ Класа из које се не може наслеђивати",
    "moguci_odgovori": {
        "0": "3 <br> 4 <br> 2 <br> 1",
        "1": "3 <br> 4 <br> 1 <br> 2"
    },
    "tacni_odgovori": [1]
},

"236": {
    "pitanje": "Са леве стране су наведене области видљивости појединих елемената класе, а са десне стране класификатори приступа којима се врши контрола области видљивости. На линију испред класификатора приступа унети редни број под којим је наведена одговарајућа област видљивости: <br> <br> 1. private _______________ ____ видљив унутар класе у којој је дефинисан, као и унутар изведених класа <br> <br> 2. public _______________ ____ видљив само унутар класе у којој је дефинисан <br> <br> 3. protected _______________ ____ видљив унутар пројекта у коме је дефинисан <br> <br> 4. internal _______________ ____ видљив и ван своје класе у којој је дефинисан ",
    "moguci_odgovori": {
        "0": "3 <br> 1 <br> 4 <br> 2",
        "1": "3 <br> 1 <br> 2 <br> 4"
    },
    "tacni_odgovori": [0]
},

"237": {
    "pitanje": "Са леве стране су наведени делови/елементи класе, а са десне стране улоге појединих класних елемената. На линују испред описа улоге унети редни број под којим је наведен одговарајући елеменат класе: <br> <br> 1. поље (атрибут) _______________ ____ Опис функционалности објеката класе <br> <br> 2. деструктор _______________ ____ Контрола приступа пољима класе <br> <br> 3. конструктор _______________ ____ Опис особина објеката класе <br> <br> 4. метод _______________ ____ Креирање објеката класе <br> <br> 5. својство / property _______________ ____ Уништавање објеката класе",
    "moguci_odgovori": {
        "0": "4 <br> 5 <br> 1 <br> 2 <br> 3",
        "1": "4 <br> 5 <br> 1 <br> 3 <br> 2"
    },
    "tacni_odgovori": [1]
},

"238": {
    "pitanje": "Са леве стране дате су врсте променљивих у програмском језику C#, а са десне декларације променљивих. На линију испред декларације променљиве унети број којим је означена одговарајућа врста променљиве: <br> <br> _______________ ____ const double epso = 8.85E-12 <br> <br> 1. Променљива вредносног типа  _______________ ____ int x = 10; <br> <br> 2. Променљива референтног типа _______________ ____ int[] a = new int[7]; <br> <br> 3. Именована константа _______________ ____ int[,] b=new int[10,10]; <br> <br> _______________ ____ int[] c = {1,2,3,4,5,6,7};",
    "moguci_odgovori": {
        "0": "switch(a){ case 3, 5: p++;break; default: p--; } ",
        "1": "switch(a){ case 3: case 5: p++;break; p--; } ",
        "2": "switch(a){ case 3: case 5: p++;break; default: p--; }",
        "3": "switch(a){ case 3: case 5: p++; default: p--; } "
    },
    "tacni_odgovori": [2]
},

"239": {
    "pitanje": "Дат је код програма у програмском језику C# који дефинише класу Osoba са њеним методама и атрибутима. Анализирати дати код и на основу декларације метода CompareTo (...) и Clone() одредити кôд који недостаје у првој линији. <br> <br> 1. classOsoba : _________________________________{ <br> 2. privatestring ime; <br> 3. privatedouble dohodak; <br> 4. public Osoba(string ime, double dohodak) { <br> 5. this.ime = ime; <br> 6. this.dohodak = dohodak;   } <br> 7. publicint CompareTo(Osoba osb) { <br> 8. if (this.dohodak \f<\f osb.dohodak) return -1; <br> 9. elseif (this.dohodak \f>\f osb.dohodak) return 1; <br> 10. elsereturn 0;  } <br> 11. publicObject Clone() { <br> 12. returnthis.MemberwiseClone();   } <br> 13. publicoverridestring ToString(){ <br> 14. return\"Ime: \"+this.ime+\"\\nDohodak: \"+this.dohodak;  }  } <br> Заокружити број испред тачног одговора: ",
    "moguci_odgovori": {
        "0": "IComparable<Osoba>, ICloneable",
        "1": "Comparable<Osoba>, Cloneable",
        "2": "IComparable<Osoba>, ICloneable<Osoba>",
        "3": "IComparable, ICloneable"
    },
    "tacni_odgovori": [0]
},

"240": {
    "pitanje": "Датим кодом у програмском језику C# креира се пет објеката класе Osoba која имплементира интерфејс IComparable. Допунити код програма наредбом која, помоћу колекције података, формира генеричку листу особа - променљива lista и наредбу која врши сортирање те листе. Анализирати дати код и одредити који од понуђених одговора је потребно дописати у 7. и 10. линију кода како би се правилно декларисала и сортирала променљива lista. <br> <br> 1. staticvoid Main(string[] args) { <br> 2. Osoba a = newOsoba(\"Marko Ilic\", 34); <br> 3. Osoba b = newOsoba(\"Mirko Prljic\", 30); <br> 4. Osoba c = newOsoba(\"Danilo Sekara\", 24); <br> 5. Osoba d = newOsoba(\"Sara Males\", 15); <br> 6. Osoba e = newOsoba(\"Borko Ilic\", 34); <br> 7. _____________________________________________ ; <br> 8. lista.Add(a); lista.Add(b); lista.Add(c); <br> 9. lista.Add(d); lista.Add(e); <br> 10. _____________________________________________ ; <br> 11. Console.WriteLine(\"Prikaz osoba po godinama starosti:\"); <br> 12. foreach (Osoba x in lista) { Console.WriteLine(x); } <br> 13. } <br> Заокружити број испред тачног одговора:",
    "moguci_odgovori": {
        "0": "List lista = newList();иlista.Sort(null);",
        "1": "List<Osoba> lista; иlista.Sort(); ",
        "2": "ArrayList<Osoba> lista = newArrayList<Osoba>(); иlista.Sort();",
        "3": "List<Osoba> lista = newList<Osoba>(); иlista.Sort();"
    },
    "tacni_odgovori": [3]
},

"241": {
    "pitanje": "Дат је део кода који је написан на C# програмском језику. Анализирати и одредити шта ће се приказати на излазу извршавањем овог кода: <br> <br> classPassA{ <br> publicstaticvoid Main(string[] args){ <br> PassA p = newPassA(); <br>  p.start();  } <br> publicvoid start() { <br> long[] a1 = {3,4,5}; <br> long[] a2 = fix(a1); <br> Console.Write(a1[0] + a1[1] + a1[2] + \" \"); <br> Console.WriteLine(a2[0] + a2[1] + a2[2]);  } <br> long[] fix(long[] a3){ <br>  a3[1] = 7; <br> return a3;  }  }",
    "moguci_odgovori": {
        "0": "12 15",
        "1": "15 15",
        "2": "345 375",
        "3": "375 375"
    },
    "tacni_odgovori": [1]
},

"242": {
    "pitanje": "TBU",
    "moguci_odgovori": {
        "0": "Грешке су у редовима 7, 10 i 16",
        "1": "Грешке су у редовима 7, 9 i 22",
        "2": "Грешке су у редовима 6, 7 i 10",
        "3": "Грешке су у редовима 6, 9 i 10",
        "4": "Грешке су у редовима 6, 9 i 24",
        "5": "Грешке су у редовима 9, 10 i 24"
    },
    "tacni_odgovori": [3]
},

"243": {
    "pitanje": "Дат је део кода који је написан на C# програмском језику. Анализирати код и одредити шта ће бити на излазу: <br> <br> classPassS{ <br> publicstaticvoid Main(String[] args){ <br> PassS p = newPassS(); <br>  p.start();  } <br> void start(){ <br> String s1 = \"slip\"; <br> String s2 = fix(s1); <br> Console.WriteLine(s1 + \" \" + s2);  } <br> String fix(String s1){ <br>  s1 = s1 + \"stream\"; <br> Console.Write(s1 + \" \"); <br> return\"stream\"; <br> } }",
    "moguci_odgovori": {
        "0": "slip stream",
        "1": "slipstream stream",
        "2": "stream slip stream",
        "3": "slipstream slip stream"
    },
    "tacni_odgovori": [3]
},

"244": {
    "pitanje": "Дат је код програма у програмском језику C# који дефинише апстрактну класу Figura. У класи Figura написати статички иницијални блок у ком се иницијализује вредност атрибута brojFigura. Заокружити број испред наредбе коју треба додати у 7.линију кода, којом се иницијализује вредност статичког атрибута brojFigura. <br> <br> 1. publicabstractclassFigura { <br> 2. protectedstaticint brojFigura; <br> 3. protectedstring naziv; <br> 4. public Figura(string naziv) { <br> 5. this.naziv = naziv;  } <br> 6. ________________________________________ <br> 7. publicabstractdouble povrsinaFigure(); <br> 8. publicabstractdouble obimFigure(); <br> 9. publicstaticvoidUvecajBrojFigura(){ <br> 10. brojFigura++;  } <br> 11. publicoverridestring ToString(){ <br> 12. return\"Figura \";   }   } <br> Заокружити број испред одговора који даје исправно решење:",
    "moguci_odgovori": {
        "0": "static Figura() { brojFigura = 0; }",
        "1": "brojFigura = 0; ",
        "2": "static { brojFigura = 0; }",
        "3": "public Figura() { brojFigura = 0; } "
    },
    "tacni_odgovori": [0]
},

"245": {
    "pitanje": "Дат је код програма у програмском језику C# у ком су дефинисане три класе: classProgram која садржи Main(string[] args) методу, classA и classB. Анализирати дати код и одредити шта ће се приказати на екрану као резултат извршавања овог програма. Заокружити број испред одговора који садржи резултат исписа: <br> <br> classProgram : A { <br> publicstaticvoid Main(string[] args) { <br> Program p = newProgram(); <br> }  } <br> classA : B { <br> public A() { Console.WriteLine(\"Pozvan podrazumevani konstruktor klase <br> A\"); }  } <br> classB { <br> public B() { Console.WriteLine(\"Pozvan podrazumevani konstruktor klase <br> B\"); }  } ",
    "moguci_odgovori": {
        "0": "Ништа ",
        "1": "Позван подразумевани конструктор класе A",
        "2": "Позван подразумевани конструктор класе B",
        "3": "Позван подразумевани конструктор класе A и у другом реду: Позван подразумевани конструктор класе B",
        "4": "Позван подразумевани конструктор класе B и у другом реду: Позван подразумевани конструктор класе A"
    },
    "tacni_odgovori": [4]
},

"246": {
    "pitanje": "Дат је код програма у програмском језику C# у ком су дефинисане три класе: classProgram која садржи Main(string[] args) методу, classA и classB. Анализирати дати код и одредити да ли је код исправно написан. Заокружити број испред исказа који даје информацију о тачности кода: <br> <br> classProgram { <br> publicstaticvoid Main(string[] args) { <br> B b = newB(); <br>  b.Metod(5); <br> Console.WriteLine(\"b.i je \" + b.CitajI()); <br>  } <br> } <br> classA { <br> int i; <br> publicint CitajI(){return i;} <br> publicvoidMetod(int i) { this.i = i; } <br> } <br> classB : A { <br> publicvoidMetod(string s){ <br> Console.WriteLine(s);   }  }",
    "moguci_odgovori": {
        "0": "Програм има грешку, јер је метод Metod(inti) надјачан (предефинисан) са различитим потписом у класи B.",
        "1": "Програм има грешку, јер се b.Mетод(5) не може позвати пошто је метод Metod(inti) заклоњен у класи B",
        "2": "Програм има грешку због b.i, јер је поље i неприступачно из класе B.",
        "3": "Програм нема грешке, јер наслеђени метод класе А,Metod(inti) није надјачан у класи B, већ је дефинисан преоптерећен метод Metod(string s). "
    },
    "tacni_odgovori": [3]
},

"247": {
    "pitanje": "Заокружити бројеве испред наведених чланова класе који се ни под којим условима не наслеђују са родитељске класе на изведену класу:",
    "moguci_odgovori": {
        "0": "Readonly својства ",
        "1": "Заштићени чланови класа",
        "2": "Својства (property)",
        "3": "Приватни чланови класа",
        "4": ". Конструктор класе"
    },
    "tacni_odgovori": [3,4]
},

"248": {
    "pitanje": "Метод дефинисан у родитељској класи, у класама наследницама може бити редефинисан или сакривен. <br> <br> Да би се омогућило редефинисање методе, при дефиницији у родитељској класи, испред ознаке повратног типа метода наводи се кључна реч virtual, abstract или override, <br> <br> док у изведеној класи испред ознаке повратног типа треба навести кључну реч _________. <br> Сакривање методе родитељске класе врши се тако што се у изведеној класи испред ознаке повратног типа наведе кључна реч _________. ",
    "moguci_odgovori": {
        "0": "1- new <br> 2 - override",
        "1": "1- override <br> 2 - new"
    },
    "tacni_odgovori": [1]
},

"249": {
    "pitanje": "Дати су искази који дефинишу полиморфизам, једну од особина објектно-оријентисаног језика C#. Који искази су тачни:",
    "moguci_odgovori": {
        "0": "Када је класа Б изведена из класе А, објекту класе А може се доделити показивач на објекат класе Б.",
        "1": "Када је класа Б изведена из класе А, у генеричку листу објеката класе Б, могу се убацити и објекти класе А и објекти класе Б.",
        "2": "Објекат типа Б се може пренети као аргумент методу на место параматера типа А уколико је Б класа наследница од А.",
        "3": "Када се у класи Б која је изведена из класе А изврши предефинисање (override) наслеђене методе, онда су у објекту класе Б доступне обе верзије ове методе (исто као код преoптерећивања метода – overload)."
    },
    "tacni_odgovori": [0,2]
},






"250": {
    "pitanje": "Инернет као глобална мрежа светског система умрежених рачунарских мрежа настао је:",
    "moguci_odgovori": {
        "0": "Интернет је настао деведесетих година након појаве www интернет сервиса",
        "1": "Почеци интернета се вежу за стварање АРПАНЕТ-а, 1969. године, мреже рачунара под контролом Министарства одбране САД.",
        "2": "Настанак интернета се везује за појаву прве бежичне локалне рачунарске мреже.",
        "3": "План интернета је настао деведесетих година, али још није у потпуности реализован"
    },
    "tacni_odgovori": [1]
},

"251": {
    "pitanje": "Која од понуђених изјава описује појам веб сајта:",
    "moguci_odgovori": {
        "0": "скуп протокола за отпремање и преузимање података са интернета као и протоколи за комуникацију на интернету",
        "1": "скуп веб-страница које могу да садрже текст, слике, видео-снимке и други мултимедијалан садржај састављен у једну целину",
        "2": "веб сајт чини интернет прегледач-програм који се користи за читањехипертекст докумената",
        "3": "интернет сервис (www) која омогућава корисницима да размењују документа која се састоје од текста, слика и мултимедијалних компоненти "
    },
    "tacni_odgovori": [1]
},

"252": {
    "pitanje": "Основна улога веб сервера је:",
    "moguci_odgovori": {
        "0": "Омогућава израду динамичких веб страница",
        "1": "Веб сервер је систем за управљање релационим базама података на интернету",
        "2": "Веб сервер испоручује захтеване Веб стране корисницима, који су укуцали одређену URL адресу у Веб претраживач",
        "3": "Управља хардверским и софтверским ресурсима рачунара"
    },
    "tacni_odgovori": [2]
},

"253": {
    "pitanje": "Основни протокол који користи веб сервер је:",
    "moguci_odgovori": {
        "0": "SMTP",
        "1": "HTTP",
        "2": "HTML",
        "3": "WWW"
    },
    "tacni_odgovori": [1]
},

"254": {
    "pitanje": "Која је основна улога CSS-a (Cascading Style Sheet)",
    "moguci_odgovori": {
        "0": "Дефинише структуру и садржај странице",
        "1": "Дефинише конкретан изглед елемената странице",
        "2": "Дефинише којим језиком веб сервер извршава динамичку веб страницу",
        "3": "Дефинише протокол за приступ одређеној веб страници"
    },
    "tacni_odgovori": [1]
},

"255": {
    "pitanje": "Које од понуђених опција одговара својству:a:visited:",
    "moguci_odgovori": {
        "0": "стилизовање активног линка",
        "1": "стилизовање посећеног линка",
        "2": "стилизовање линка које ће се применити када се пређе мишем преко њега",
        "3": "стилизовање елемент са називом класе: а"
    },
    "tacni_odgovori": [1]
},

"256": {
    "pitanje": "Унутар HTML странице, стилови се дефинишу навођењем селектора, својстава и вредности. <br> Како се дефинишу селектори стилова: ",
    "moguci_odgovori": {
        "0": "Селектори се дефинишу искључиво на основу имена HTML елемента",
        "1": "Селектори се дефинишу за HTML елементе на основу имена елемента, називакласе или идентификатора датог елемента",
        "2": "Селектори се дефинишу на основу атрибута сваког HTML елемента",
        "3": "Селектори се дефинишу коришћењем кључне речи selector и атрибута"
    },
    "tacni_odgovori": [1]
},

"257": {
    "pitanje": "Уколико је стил једног DIV елемента дефинисан са три класе blue, black и top, заокружити правилну линију кода којом је елемент дефинисан у оквиру HTML стране:",
    "moguci_odgovori": {
        "0": "&ltdiv id=”blueblacktop”&gtMaturski ispit -EIT &lt/div&gt",
        "1": "&ltdiv id=”blue” class=”black” class=”top”>Maturski ispit -EIT &lt/div&gt ",
        "2": "&ltdiv class=”blue” class=”black” class=”top”>Maturski ispit - EIT &lt/div&gt",
        "3": "&ltdiv class=”blue black top”&gtMaturski ispit -EIT&lt/div&gt"
    },
    "tacni_odgovori": [3]
},

"258": {
    "pitanje": "Дефинисан је ХТМЛ елемент: <br> <div id=”container”> Maturski ispit -EIT</div> <br> Којим начином стила се дефинишу стилови за дати елемент:",
    "moguci_odgovori": {
        "0": "container { <br> font-size: 1.5em; }",
        "1": "#container { <br> font-size: 1.5em; }",
        "2": ".container { <br> font-size: 1.5em; }",
        "3": "selector container { <br> font-size: 1.5em; }"
    },
    "tacni_odgovori": [1]
},

"259": {
    "pitanje": "Дефинисан је стил елемента у оквиру које се налази позадинска слика. <br> Коју вредност својства background-repeatтреба да има уколико слика не треба да се понавља у оквиру елемента:",
    "moguci_odgovori": {
        "0": "background-repeat: fixed;",
        "1": "background-repeat: null;",
        "2": "background-repeat: no-repeat;",
        "3": "background-repeat: repeat-x;"
    },
    "tacni_odgovori": [2]
},

"260": {
    "pitanje": "Која од понуђених опција омогућава постизање ефекта слојевитости елемената у оквиру HTML стране?",
    "moguci_odgovori": {
        "0": "Својство overlap",
        "1": "Својство layer",
        "2": "Својство z-index",
        "3": "Не постоји решење за постизање слојевитости елемената HTML стране"
    },
    "tacni_odgovori": [2]
},

"261": {
    "pitanje": ". Aналазирати следећи HTML код и одабрати који од понуђених опција описује резултат приказа HTML кода: <br> <br> <b><i>Maturski ispit </i></b>",
    "moguci_odgovori": {
        "0": "Текст ће бити само подебљан",
        "1": "Текст ће бити само искошен",
        "2": "Текст ће бити исписан подебљано и искошено",
        "3": "Неће се применити никакав ефекат на текст"
    },
    "tacni_odgovori": [2]
},

"262": {
    "pitanje": "Који је од наведених начина за укључивање CSS стила најпогоднији за стилизовање HTML странице, а посебно за касније одржавање и ажурирање:",
    "moguci_odgovori": {
        "0": "Увежена екстерна CSS датотека преко хипер везе у заглављу HTML веб странице - External Style Sheet",
        "1": "Дефинисан интерни CSS стил у оквиру head секције <style type=”text/css”>...</style>- Internal Style Sheet",
        "2": "Дефинисан стил у оквиру елемента HTML стране - Inline style",
        "3": "Не постоји решење за укључивање CSS стила у стилизовање HTML странице"
    },
    "tacni_odgovori": [0]
},

"263": {
    "pitanje": "Анализирајте својство дато ниже и заокружите које од понуђених опција одговара својству: <br> <br> background-attachment: fixed; <br> <br> дефинисања стила елемента са позадинском сликом,",
    "moguci_odgovori": {
        "0": "Позадинска слика се помера са остатком садржаја на страни",
        "1": "Позадинска слика се не понавља у оквиру елемента",
        "2": "Позадинска слика је непомична (фиксирана) у односу на остатак садржаја",
        "3": "Позадинска слика се понавља унутар елемента"
    },
    "tacni_odgovori": [2]
},

"264": {
    "pitanje": "Дат је следећи код који стилизује три блока – елемента странице са различитим позадинским бојама: <br> <br> <div style=\"background-color:red; <br> width:300px; height:100px; <br> position:relative; <br> top:10px; left:80px; <br> z-index:2\"> <br> </div> <br> <div style=\"background-color:yellow; <br> width:300px; height:100px; <br> position:relative; <br> top:-60px; left:35px; <br> z-index:1;\"> <br> </div> <br> <div style=\"background-color:green; <br> width:300px; height:100px; <br> position:relative; <br> top:-220px; left:120px; <br> z-index:3;\"> </div> <br> Анализирати и заокружити којa од понуђених опција описује горњи код:",
    "moguci_odgovori": {
        "0": "Слој са зеленом позадином је на врху и преклапа остале слојеве",
        "1": "Слој са жутом позадином је на врху и преклапа остале слојеве",
        "2": "Слој са црвеном позадином је на врху и преклапа остале слојеве",
        "3": "Слојеви се утапају у једну боју – нијансу смеђе "
    },
    "tacni_odgovori": [0]
},

"265": {
    "pitanje": "Веб сервери са специјализoваним програмима су:",
    "moguci_odgovori": {
        "0": "Microsoft Internet Information Services",
        "1": "Microsoft SQL Server",
        "2": "Apache Web Server",
        "3": "Microsoft NT Server"
    },
    "tacni_odgovori": [0,2]
},

"266": {
    "pitanje": "Појединачне HTML странице које израђујемо у програму за израду интернет презентација:",
    "moguci_odgovori": {
        "0": "Mожемо приказати одмах и у алату за израду интернет презентација",
        "1": "Можемо је приказати само ако се постави на веб сервер",
        "2": "Mожемо приказати одмах путем веб прегледача са локалног рачунара – без постављања на веб сервер",
        "3": "Не може се приказати док се не заврши комплетан веб сајт, постави на веб сервер и прође сигурносне провере веб сервера"
    },
    "tacni_odgovori": [0,2]
},

"267": {
    "pitanje": "Који су неопходни подаци које треба знати за успешно конфигурисање FTP клијента приликом постављања HTML веб презентације на веб сервер:",
    "moguci_odgovori": {
        "0": "Име FTP сервера или веб локације",
        "1": "Назив интернет опслуживача – провајдера који је обезбедио веб сервер",
        "2": "Корисничко име",
        "3": "Лозинка",
        "4": "IP адреса корисника",
        "5": "Назив сервера базе података"
    },
    "tacni_odgovori": [0,2,3]
},

"268": {
    "pitanje": "Интернет је:",
    "moguci_odgovori": {
        "0": "Интернет је светски систем умрежених рачунарских мрежа",
        "1": "Софтвер за преглед и приказ www страница се сматра Интернетом",
        "2": "Подаци који „путују“ светском мрежом и скуп корисника заједно чине Интернетмрежу",
        "3": ". Интернет чини њена хардверска компонента као и систем софтверских слојевакоји контролишу различите аспекте њене комуникационе инфраструктуре"
    },
    "tacni_odgovori": [0,1,2,3]
},

"269": {
    "pitanje": "Написати линију кода којом се укључује екстерна CSS датотека - style.css у оквиру заглавља веб странице - index.html (датотеке style.css и indeks.html се налазе у истом директоријуму):",
    "moguci_odgovori": {
        "0": "&ltlink rel=\"stylesheet\" type=\"text/css\" href=\"style.css\" &gt",
        "1": "&ltlink rel=\"stylesheet\" type=\"text.css\" href=\"style.css\" &gt"
    },
    "tacni_odgovori": [0]
},

"270": {
    "pitanje": "HTML документ може да прими податке од корисника помо <br> Повежите дате тагове и атрибуте са својимдефиницијама: <br> 1. FORM _______________ ____ Дефинише одредиште, фајл и који, или е-маил адресу на коју ће подаци са форме бити прослеђени <br> 2. INPUT _______________ ____ Одређује начин на који се подаци са форме шаљу на дефинисано одредиште (може бити „post” или „get“) <br> 3. ACTIONО _______________ ____ Oсновни таг формулара са којим се креира формулар за унос података од стране корисника  <br> <br> 4. METHOD HTML _______________ ____ Дефинише поље за унос податка унутар форме." ,
    "moguci_odgovori": {
        "0": "3 <br> 4 <br> 2 <br> 1",
        "1": "3 <br> 4 <br> 1 <br> 2"
    },
    "tacni_odgovori": [1]
},

"271": {
    "pitanje": "Стављањем редног броја испред, поређајте тачним редоследом (почев од броја 1 до броја 6), HTLM наредбе у складу са основном структуром HTML странице: <br> <br> _____ </body> <br> _____ <head> <br> _____ </html> <br> _____ <html> <br> _____ </head> <br> _____ <body>",
    "moguci_odgovori": {
        "0": "5 <br> 2 <br> 6 <br> 1 <br> 3 <br> 4",
        "1": "5 <br> 2 <br> 6 <br> 1 <br> 4 <br> 3"
    },
    "tacni_odgovori": [0]
},

"272": {
    "pitanje": "Са леве стране су дати интернет сервиси, а са десне стране су дефинисане операције које се могу извршити помоћу тих сервиса. <br> <br> На линију испред дефинисане операције, написати број њему одговарајућег сервиса. <br> <br> 1. E-mail _______________  ____  успостављање везе са удаљеним рачунаром и рад на њему <br> <br> 2. FTP _______________  ____ приказ HTML веб страница <br> <br> 3. WWW _______________  ____ слање електронске поште <br> <br> 4. Теlnet _______________  ____ пренос датотекa са удаљеног сервера",
    "moguci_odgovori": {
        "0": "3 <br> 4 <br> 1 <br> 2",
        "1": "4 <br> 3 <br> 1 <br> 2"
    },
    "tacni_odgovori": [1]
},

"273": {
    "pitanje": "Са леве стране су дати HTML тагови, а са десне стране су наведени индикатори. <br>  На линију испред уписати број, повезати наведене HTML тагове са индикаторима које ће се видети на HTML страници: <br> 1. <font> _______________  ____ приказ наслова трећег нивоа <br> <br> 2. <b> _______________  ____ приказ текста дате величине <br>  3. <h3> _______________  ____ приказ текста у боји <br> 4. <font size=\"3\"> _______________  ____ приказ подебљаног текста",
    "moguci_odgovori": {
        "0": "3 <br> 4 <br> 1 <br> 2",
        "1": "3 <br> 4 <br> 2 <br> 1"
    },
    "tacni_odgovori": [0]
},

"274": {
    "pitanje": "Са леве стране су дати HTML тагови, а са десне стране су наведенииндикатори. На линију испред уписати број, повезати наведене HTML тагове са индикаторима које ће се видети на HTML страници: <br> 1. <ol> _______________  ____ дефинисање елемента листе <br>  2. <li> _______________  ____ постављање позадинске боје <br> 3. <body > _______________  ____ постављање позадинске слике <br>  4. <body background=\"0001.jpg\"> _______________  ____ дефинисање нумерисане листе",
    "moguci_odgovori": {
        "0": "3 <br> 1 <br> 4 <br> 2",
        "1": "1 <br> 3 <br> 4 <br> 2"
    },
    "tacni_odgovori": [1]
},

"275": {
    "pitanje": "Са леве стране су дати HTML тагови, а са десне стране су наведени индикатори. <br> <br> На линију испред уписати број, повезати наведене HTML тагове са индикаторима које ће се видети на HTML страници: <br> <br> 1. <tr> _______________  ____ Дефинисање хиперлинка <br> <br> 2. <td> _______________  ____ Нови ред у ћелији <br> <br> 3. <img src=\"slika.jpg\" > _______________  ____ Нова ћелија у табели <br> <br> 4. <a style=\"color:white;\"href=\"index.html\"> _______________  ____ Уметање слике",
    "moguci_odgovori": {
        "0": "4 <br> 1 <br> 2 <br> 3",
        "1": "4 <br> 1 <br> 3 <br> 2"
    },
    "tacni_odgovori": [0]
},

"276": {
    "pitanje": "Направите редослед потребних корака за приказ једне статичке веб странице. <br> <br> Унесите редни број на линије испред описа корака, почев од броја 1 до броја 5. <br>  _______ Веб сервер шаље пронађену страну клијенту - веб претраживачу. <br>  _______ Корисник захтева да види веб страну (кликом на линк, укуцавањем адресе у адресну линију Веб претраживача, и слично) <br> _______ Аутор је креирао страну која се састоји од HTML кода и ставио је на веб сервер. <br> _______ Веб претраживач обрађује добијени HTML код и приказује кориснику уредно форматирану страницу са свим елементима(сликама, линковима, табелама,…) <br> _______ Веб сервер проналази HTML страну коју је корисник захтевао",
    "moguci_odgovori": {
        "0": "<pre>2  4  1  5  3</pre>",
        "1": "<pre>4  2  1  5  3</pre>"
    },
    "tacni_odgovori": [1]
},

"277": {
    "pitanje": "Направите редослед потребних корака за приказ једне динамичке веб странице. Унесите редни број на линије испред описа корака. <br> Уписати редни број почев од 1 на линију испред резервисане реченице, тако да одговара редоследу неопходних корака за приказ једне динамичке веб странице. <br>  _______ Веб претраживач обрађује добијени HTML код и приказује страницу кориснику са свим елементима. <br> _______ Веб сервер извршава програмски код, који је саставни део стране и креира HTM Lкод. <br> _______ Корисник креира захтев да види динамичку веб страну. Захтев се прослеђује од клијента (веб претраживача) до веб сервера, на којем се налази захтевана страна. <br> _______ Аутор је креирао страну, која се састоји од серверских контрола и инструкција у неком програмском језику, и ставио је на веб сервер. <br> _______ Веб сервер обрађује захтев корисника и проналази динамичку страну коју је корисник захтевао <br>_______ Веб сервер шаље преко Интернета генерисани HTML код веб претраживачу",
    "moguci_odgovori": {
        "0": "6 <br> 4 <br> 2 <br> 1 <br> 3 <br> 5",
        "1": "6 <br> 4 <br> 2 <br> 1 <br> 5 <br> 3"
    },
    "tacni_odgovori": [0]
},

"278": {
    "pitanje": "Који протокол TCP/IP стек протокола подржава захтеве веб прегледача:",
    "moguci_odgovori": {
        "0": "FTP",
        "1": "HTTP",
        "2": "TCP",
        "3": "IP"
    },
    "tacni_odgovori": [1]
},

"279": {
    "pitanje": "Коју је платформу за развој веб апликација развио и Microsoft:",
    "moguci_odgovori": {
        "0": "HTML",
        "1": "JSP",
        "2": "PHP",
        "3": "ASP.NET"
    },
    "tacni_odgovori": [3]
},

"280": {
    "pitanje": ".NET Framework представља:",
    "moguci_odgovori": {
        "0": "Програмски језик",
        "1": "Библиотеку класа",
        "2": "Скрипт језик који се извршава на клијент страни",
        "3": "Скрипт језик који се извршава на серверској страни"
    },
    "tacni_odgovori": [1]
},

"281": {
    "pitanje": "ASP.NET MVC 3.0 долази са новом техником за дефинисање погледа (View Engine):",
    "moguci_odgovori": {
        "0": "ASP.NET View Engine",
        "1": "Salome",
        "2": "Razor",
        "3": "Default"
    },
    "tacni_odgovori": [2]
},

"282": {
    "pitanje": "Дата је ASP.NET MVC апликација у којој је креирана нова мастер страница (master layout page) која се зове _Layout.WindowsPhone.cshtml. <br> <br> Ако желимо да укључимо нову мастер страницу на новом погледу (View), који сегмент кода треба да искористимо:",
    "moguci_odgovori": {
        "0": "@Html.ActionLink(“_Layout.WindowsPhone.cshtml”);",
        "1": "Layout = “~/views/Shared/_layout.WindowsPhone.cshtml”;",
        "2": "Layout = “Layout.WindowsPhone.cshtml”;",
        "3": "@Html.Partial(“_Layout.WindowsPhone.cshtml”);"
    },
    "tacni_odgovori": [1]
},

"283": {
    "pitanje": "Од понуђених опција, који симбол се користи за коментаре у ASP.NET MVC Razor синтакси:",
    "moguci_odgovori": {
        "0": "//",
        "1": "/* … */",
        "2": "&lt!-- ... --&gt",
        "3": "@* … *@"
    },
    "tacni_odgovori": [3]
},

"284": {
    "pitanje": "Од понуђене синтаксе, која је исправна формулација која дефинише верзију XML документа:",
    "moguci_odgovori": {
        "0": "&lt?xml version=\"1.0\" /&gt",
        "1": "&ltxml version=\"1.0\" /&gt",
        "2": "&lt?xml version=\"1.0\"?&gt",
        "3": "&ltxml version=\"1.0\"?&gt"
    },
    "tacni_odgovori": [2]
},

"285": {
    "pitanje": "SOAP протокол (Simple Object Access protocol) који се користи за размену података између рачунара коришћење веб сервиса, у основи користи један скрипт језик. <br> <br> О којем језику се ради:",
    "moguci_odgovori": {
        "0": "HTML",
        "1": "CSS",
        "2": "JavaScript",
        "3": "XML"
    },
    "tacni_odgovori": [3]
},

"286": {
    "pitanje": "Улога Domain Name Server-а је:",
    "moguci_odgovori": {
        "0": "превођење имена домена у IP адресу",
        "1": "хостовање веб сајта",
        "2": "да буде главни чвор у локалној рачунарској мрежи",
        "3": "приказ динамичких веб страница"
    },
    "tacni_odgovori": [0]
},

"287": {
    "pitanje": "Дефинишите кроз понуђене одговоре улогу Proxy сервера:",
    "moguci_odgovori": {
        "0": "Приступ удаљеном рачунару",
        "1": "Побољшава перформансе конекције, филтрира захтеве и прослеђује их на прави сервер",
        "2": "Пружа хостинг различитим медијским садржајима (Аудио, Видео)",
        "3": "Хостује веб стране"
    },
    "tacni_odgovori": [1]
},

"288": {
    "pitanje": "Дефинишите кроз понуђене одговоре улогу сервера датотека – File server (FTP):",
    "moguci_odgovori": {
        "0": "Омогућавају испоруку веб страна на захтев корисника",
        "1": "Размену електронске поште међу корисницима",
        "2": "Сигуран и поуздан трансфер података са једног рачунара на други",
        "3": "Размену порука у реалном времену"
    },
    "tacni_odgovori": [2]
},

"289": {
    "pitanje": "Telnet сервери омогућавају",
    "moguci_odgovori": {
        "0": "Размену порука у реалном времену",
        "1": "Приступ удаљеном рачунару",
        "2": "Размену електронске поште међу корисницима",
        "3": "Омогућавају испоруку веб страна на захтев корисника"
    },
    "tacni_odgovori": [1]
},

"290": {
    "pitanje": "Током извршавања апликацијеу JavaScript језику, на типове променљивих односи се следећа тврдња:",
    "moguci_odgovori": {
        "0": "Није могуће мењати типове променљивиху току извршавања апликације",
        "1": "Типови променљивих се могу мењати током извршавања програма",
        "2": "Сваки тип променљивих се обавезно мења током извршавања апликацијеу одговарајућу један веб тип променљиве",
        "3": "JavaScript не подржава типове променљивих"
    },
    "tacni_odgovori": [1]
},

"291": {
    "pitanje": "Који типови сервиса могу бити хостовани у конзолној или десктоп апликацији:",
    "moguci_odgovori": {
        "0": "ASMX",
        "1": "RESTful",
        "2": "WCF",
        "3": "XML"
    },
    "tacni_odgovori": [1,2]
},

"292": {
    "pitanje": "Мајкрософт .NET Framework садржи базне класе које пружају широк спектар могућности. Заокружити све елементе које су укључене у њу:",
    "moguci_odgovori": {
        "0": "класе корисничког интерфејса",
        "1": "класе за приступ подацима и базама",
        "2": "класе корисника",
        "3": "веб сервер и примере базе података",
        "4": "класе за манипулацију XML докумената",
        "5": "Скрипт језик који се извршава на клијент страни"
    },
    "tacni_odgovori": [0,1,4]
},

"293": {
    "pitanje": "Од понуђених појмова шта дефинише језик WSDL (Web Services Description) Language:",
    "moguci_odgovori": {
        "0": "Комуникациони интерфејс за веб сервис",
        "1": "Начин импелементације метода веб сервиса",
        "2": "Списак метода веб сервиса",
        "3": "Комуникациони протокол за веб сервис"
    },
    "tacni_odgovori": [1]
},

"294": {
    "pitanje": "Дата је MVC стандардна рута (default route)  <br> http://localhost/Customer/Details/5   <br> <br> која има 3 сегмента.  <br> На основу дате руте вредности ових сегмената допуните реченицу:  <br> <br> Име контролера (Controller Name) је: _____________, назив методе (Action Method Name) је: _____________ а ID параметра методе је дат са: _____________. ",
    "moguci_odgovori": {
        "0": "1 - Customer <br> 2 - Details <br> 3 -  5",
        "1": "1 - Customer <br> 2 - Details <br> 3 -  4"
    },
    "tacni_odgovori": [0]
},

"295": {
    "pitanje": "Веб обрасци могу да садрже неколико различитих типова компоненти <br> <br> Категоришите наведене компоненте веб образаца, и повежите категорија, уносећи тачан број на линију: <br> <br> 1. HTML контроле _______________  ____ TextBox, Label, Button, DropDownList, ListBox, Data Grid <br> <br> 2. Контроле за податке _______________  ____ FileSystemWatcher, MessageQueue, EventLog, <br> <br> 3. Серверске контроле _______________  ____ SqlConnection, SqlCommand, OleDbConnection <br> <br> 4. Системске компоненте _______________  ____ Text Area, Table, Image, Submit, Button, Reset Button ",
    "moguci_odgovori": {
        "0": "<pre>4  2  3 1</pre>",
        "1": "<pre>2 4 3 1</pre>"
    },
    "tacni_odgovori": [1]
},

"296": {
    "pitanje": "У JavaScript језику, свака веб страница има доле наведене објекте. Са леве стране су дати називи објеката, а са десне стране својства. <br> <br> Повезати својства објеката са називима објеката, уписујући тачан број на линију: <br> <br> 1. window _______________  ____ Садржи својства претходно посећених URL 2. location _______________  ____ Садржи својства садржаја текућег документа, као што су назив, боја подлоге, и форме <br> <br> 3. history _______________  ____ Садржи својства текуће URL <br> <br> 4. document _______________  ____ Објекат вишег нивоа, садржи својства применљива на цео прозор",
    "moguci_odgovori": {
        "0": "3 <br> 4 <br> 2 <br> 1",
        "1": "3 <br> 4 <br> 1 <br> 2"
    },
    "tacni_odgovori": [0]
},

"297": {
    "pitanje": "У JavaScript језику многи објекти имају уграђене функције (методе) којесимулирају догађаје. Ти догађаји настају услед акција корисника. <br> <br> Повежите догађаје са десне стране, са одговарајућим акцијама корисника, уносећи тачан број на линију: <br> <br> 1. focus _______________  ____ Изађе из фокуса елемента форме <br> <br> 2. субмит _______________  ____ Учита страницу у прегледач <br> <br> 3. load _______________  ____ Уђе у фокус неког елемента форме <br> <br> 4. blur _______________  ____ Изврши слање форме",
    "moguci_odgovori": {
        "0": "3 <br> 4 <br> 1 <br> 2",
        "1": "4 <br> 3 <br> 1 <br> 2"
    },
    "tacni_odgovori": [1]
},

"298": {
    "pitanje": "Садашње верзије IIS сервера изграђене су на модуларнојархитектури. <br> Са леве стране дати су модули, а са десне стране њиховефункције. <br> <br> Повежите називе модула са функцијама које обављају:  <br>  1. HTTP модул  _______________  ____ Модул за обављање послова везаних за евиденцију и дијагностику у захтеву <br>  2. Безбедностни модулс  _______________  ____ Модул за обављање послова у вези са садржајем у захтеву, као што је обрада захтева за статичке фајлове, враћање подразумеване странице када клијент не наведе ресурс у захтеву и наводи садржај директоријума <br>  3. Модули за евиденцију и дијагностику  _______________  ____ Модул за обављање послова који су специфични за обраду и процесирање захтева, као што је одговарање на информације, враћање HTTP грешака и преусмеравање захтева <br>  4. Модули садржаја  _______________  ____ Модул за обављање послова везаних за безбедност захтева и процесирања, као што су обављање ауторизације УРЛ-а и филтрирање захтева",
    "moguci_odgovori": {
        "0": "3 <br> 4 <br> 1 <br> 2",
        "1": "3 <br> 4 <br> 2 <br> 1"
    },
    "tacni_odgovori": [0]
},

"299": {
    "pitanje": "Који је од наведених начина за укључивање CSS стила најпогоднији за стилизовање HTML странице, а посебно за касније одржавање и ажурирање:",
    "moguci_odgovori": {
        "0": "Увежена екстерна CSS датотека преко хипер везе у заглављу HTML веб странице - External Style Sheet",
        "1": "Дефинисан интерни CSS стил у оквиру head секције <style type=”text/css”>...</style>- Internal Style Sheet",
        "2": "Дефинисан стил у оквиру елемента HTML стране - Inline style",
        "3": "Не постоји решење за укључивање CSS стила у стилизовање HTML странице"
    },
    "tacni_odgovori": [0]
},




"300": {
    "pitanje": "Једна од функција система за управљање базом података је ауторизација. <br> Означити шта она регулише:",
    "moguci_odgovori": {
        "0": "Права надокнаде за коришћење базе података",
        "1": "Права приступа појединих корисника појединим објектима (подацима и другим ресурсима) као и права извршења разних операција над тим објектима. ",
        "2": "Ауторска права над базом података и програмима који користе ту базу података"
    },
    "tacni_odgovori": [1]
},

"301": {
    "pitanje": "Ниво софтвера између корисника и физичких података у бази, који штити кориснике базе од детаља на физичком нивоу, назива се:",
    "moguci_odgovori": {
        "0": "Програмски језик",
        "1": "Систем за управљање базама података",
        "2": "База података",
        "3": "Case алат"
    },
    "tacni_odgovori": [1]
},

"302": {
    "pitanje": "Посматрајмо релациони модел БИБЛИОТЕКЕ. <br> <br> Издвојити ком делу релационог модела припада услов да два издавача не могу имати исти назив: ",
    "moguci_odgovori": {
        "0": "Структурном делу",
        "1": "Манипулативном делу",
        "2": "Интегративном делу",
        "3": "Софтверском делу"
    },
    "tacni_odgovori": [2]
},

"303": {
    "pitanje": "Одредити ентитете који садрже атрибуте који НИСУ одговарајући:",
    "moguci_odgovori": {
        "0": "Ентитет: СТУДЕНТ – Атрибути: име, презиме, смер, број бодова, просек",
        "1": "Ентитет: ДРЖАВА – Атрибути: назив, број становника, површина",
        "2": "Ентитет: КЊИГА – Атрибути: наслов, аутор, година издања, издавач, адреса издавача, телефон издавача",
        "3": "Ентитет: АВИОН – Атрибути: произвођач, марка, година производње, број седишта"
    },
    "tacni_odgovori": [2]
},

"304": {
    "pitanje": "Сврха јединственог идентификатора (кључа) је да:",
    "moguci_odgovori": {
        "0": "Јединствено одређује колону те табеле",
        "1": "Јединствено одређује табелу и врсту табеле",
        "2": "Јединствено одређује инстанцу ентитета",
        "3": "Јединствено одређује ентитет у бази података"
    },
    "tacni_odgovori": [2]
},

"305": {
    "pitanje": "Одредити шта релација М:М најчешће крије:",
    "moguci_odgovori": {
        "0": "Још атрибута",
        "1": "Још једну релацију",
        "2": "Још један ентитет",
        "3": "Ништа од наведеног"
    },
    "tacni_odgovori": [2]
},

"306": {
    "pitanje": "Одредити шта тачно резервисана реч DISTINCT проузрокује у SELECT наредби:",
    "moguci_odgovori": {
        "0": "Не приказује NULL вредности",
        "1": "Елиминише све јединствене вредности из табеле",
        "2": "Елиминише све врсте које се више пута јављају у приказу",
        "3": "Елиминише само јединствене врстe у приказу"
    },
    "tacni_odgovori": [2]
},

"307": {
    "pitanje": "Одредити оператор који би требало користити у SELECT наредби да би били приказани само они ученици чије презиме почиње словом А: ",
    "moguci_odgovori": {
        "0": "IN",
        "1": "LIKE",
        "2": "BETWEEN",
        "3": "AS LIKE",
        "4": "IS NULL"
    },
    "tacni_odgovori": [1]
},

"308": {
    "pitanje": "Одредити оператор који би требало употребити у SELECT наредби да би биле приказане све врсте табеле UCENICI које садрже null вредности у колони stipendija_id: ",
    "moguci_odgovori": {
        "0": "“=NULL”",
        "1": "ISNULL",
        "2": "NULL",
        "3": "IS NULL",
        "4": "LIKE NULL"
    },
    "tacni_odgovori": [3]
},

"309": {
    "pitanje": "Одредити коју клаузулу је потребно додати упиту <br> <br> SELECT prezime, ime, skola_id, mentor_id <br> FROM takmicari <br> <br> да би такмичари били уређени најпре по школи, а онда по ментору, па по презимену ученика:",
    "moguci_odgovori": {
        "0": "ORDER BY skola_id, prezime",
        "1": "ORDER BY skola_id, mentor_id, prezime, ime",
        "2": "ORDER BY skola_id, mentor_id, prezime",
        "3": "ORDER BY prezime, mentor_id, skola_id"
    },
    "tacni_odgovori": [2]
},

"310": {
    "pitanje": "Извршава се упит: <br> <br> SELECT prezime, ime, email <br> FROM ucenici <br> ORDER BY prezime DESC <br> <br> Заокружити исказ који је истинит: ",
    "moguci_odgovori": {
        "0": "Све врсте ће бити сортиране по презимену у абецедном поретку",
        "1": "Све врсте ће бити сортиране по презимену у обрнутом абецедном поретку.",
        "2": "Све врсте ће бити сортиране по презимену, а затим по имену."
    },
    "tacni_odgovori": [1]
},

"311": {
    "pitanje": "Одредити резервисану реч коју је потребно укључити у ORDER BY клаузулу да би приказали податке из табеле са подацима о такмичарима уређене у опадајућем поретку по броју бодова: ",
    "moguci_odgovori": {
        "0": "DESC",
        "1": "ASC",
        "2": "SORT",
        "3": "CHANGE",
        "4": "SORT DESC"
    },
    "tacni_odgovori": [0]
},

"312": {
    "pitanje": "Одабрати клаузулу коју је потребно користити уколико задатак захтева да SELECT упит врати подскуп података",
    "moguci_odgovori": {
        "0": "ANYWHERE",
        "1": "WHICH",
        "2": "WHERE",
        "3": "EVЕRY"
    },
    "tacni_odgovori": [2]
},

"313": {
    "pitanje": "За преглед података из табеле која се налази у оквиру базе података користи се: ",
    "moguci_odgovori": {
        "0": "ADD",
        "1": "DROP",
        "2": "INSERT",
        "3": "SELECT"
    },
    "tacni_odgovori": [3]
},

"314": {
    "pitanje": "За измену структуре у табели која се налази у оквиру базе података - додавање или брисање – уклањање колоне користи се:  ",
    "moguci_odgovori": {
        "0": "SELECT",
        "1": "CREATE",
        "2": "INSERT",
        "3": "ALTER"
    },
    "tacni_odgovori": [3]
},

"315": {
    "pitanje": "За додавање нове колоне у табелу, која се налази у оквиру базе података, користи се: ",
    "moguci_odgovori": {
        "0": "ADD_COLUMN",
        "1": "NEW_COLUMN",
        "2": "INSERT",
        "3": "ADD"
    },
    "tacni_odgovori": [3]
},


"316": {
    "pitanje": "Дата је табела KUPCI: <br> <br> <table> <tr> <td> Id </td> <td> Prezime </td> <td> Adresa </td> <td> Mesto </td> <td> PostBroj </td> <td> Status </td> </tr> <tr> <td> 1 </td> <td> Antić </td> <td> Mokroluška 35 </td> <td> Bečej </td> <td> 21220 </td> <td> Aktivan </td> </tr> <tr> <td> 2 </td> <td> Kostić </td> <td> Jug Бogdanova 12 </td> <td> Niš </td> <td> 18000 </td> <td> Pasivan </td> </tr> <tr> <td> 3 </td> <td> Marić </td> <td> Masarikova 1 </td> <td> Pirot </td> <td> 18300 </td> <td> Pasivan </td> </tr> <tr> <td> 4 </td> <td> Perić </td> <td> Taкovska 67 </td> <td> Niš </td> <td> 18000 </td> <td> Pasivan </td> </tr> <tr> <td> 5 </td> <td> Rakić </td> <td> Konstantinova 22 </td> <td> Sombor </td> <td> 25000 </td> <td> Aktivan </td> </tr> <tr> <td> 6 </td> <td> Tomić </td> <td> Kneza Miloša 13 </td> <td> Bečej </td> <td> 21220 </td> <td> Аktivan </td> </tr> </table> <br> <br> Извршава се упит: <br> <br> DELETE FROM KUPCI WHERE Mesto = ‘Niš’; <br> <br> Колико записа у табели ће остати? ",
    "moguci_odgovori": {
        "0": "0",
        "1": "2",
        "2": "4",
        "3": "3"
    },
    "tacni_odgovori": [2]
},


"317": {
    "pitanje": "Дата је табела KUPCI: <br> <br> <table> <tr> <td> Id </td> <td> Prezime </td> <td> Adresa </td> <td> Mesto </td> <td> PostBroj </td> <td> Status </td> </tr> <tr> <td> 1 </td> <td> Antić </td> <td> Mokroluška 35 </td> <td> Bečej </td> <td> 21220 </td> <td> Aktivan </td> </tr> <tr> <td> 2 </td> <td> Kostić </td> <td> Jug Бogdanova 12 </td> <td> Niš </td> <td> 18000 </td> <td> Pasivan </td> </tr> <tr> <td> 3 </td> <td> Marić </td> <td> Masarikova 1 </td> <td> Pirot </td> <td> 18300 </td> <td> Pasivan </td> </tr> <tr> <td> 4 </td> <td> Perić </td> <td> Taкovska 67 </td> <td> Niš </td> <td> 18000 </td> <td> Pasivan </td> </tr> <tr> <td> 5 </td> <td> Rakić </td> <td> Konstantinova 22 </td> <td> Sombor </td> <td> 25000 </td> <td> Aktivan </td> </tr> <tr> <td> 6 </td> <td> Tomić </td> <td> Kneza Miloša 13 </td> <td> Bečej </td> <td> 21220 </td> <td> Аktivan </td> </tr> </table> <br> <br> Извршава се упит: <br> <br> ALTER TABLE KUPCI ADD (DatUgovora (Date)); <br> <br> Одредити шта ће се десити након извршења упита:",
    "moguci_odgovori": {
        "0": "Промениће се тип података у колони DatUgovora у табели KUPCI",
        "1": "Биће додат нови запис – врста у табелу KUPCI",
        "2": "Биће додата нова колона под именом DatUgovora у табелу KUPCI",
        "3": "Биће преименована колона у табели KUPCI",
        "4": "Биће уклоњена – обрисана колона у табели KUPCI"
    },
    "tacni_odgovori": [2]
},

"318": {
    "pitanje": "Дата је табела KUPCI: <br> <br> <table> <tr> <td> Id </td> <td> Prezime </td> <td> Adresa </td> <td> Mesto </td> <td> PostBroj </td> <td> Status </td> </tr> <tr> <td> 1 </td> <td> Antić </td> <td> Mokroluška 35 </td> <td> Bečej </td> <td> 21220 </td> <td> Aktivan </td> </tr> <tr> <td> 2 </td> <td> Kostić </td> <td> Jug Bogdanova 12 </td> <td> Niš </td> <td> 18000 </td> <td> Pasivan </td> </tr> <tr> <td> 3 </td> <td> Marić </td> <td> Masarikova 1 </td> <td> Pirot </td> <td> 18300 </td> <td> Pasivan </td> </tr> <tr> <td> 4 </td> <td> Perić </td> <td> Takovska 67 </td> <td> Niš </td> <td> 18000 </td> <td> Pasivan </td> </tr> <tr> <td> 5 </td> <td> Rakić </td> <td> Konstantinova 22 </td> <td> Sombor </td> <td> 25000 </td> <td> Aktivan </td> </tr> <tr> <td> 6 </td> <td> Tomić </td> <td> Kneza Miloša 13 </td> <td> Bečej </td> <td> 21220 </td> <td> Aktivan </td> </tr> </table> <br> <br> Извршава се упит: <br> <br> SELECT Mesto, Adresa FROM KUPCI WHERE Prezime like ‘%tić’; <br> <br> Одредити колико редова ће имати резултантна табела не рачунајући заглавље: ",
    "moguci_odgovori": {
        "0": "0 редова",
        "1": "1 ред",
        "2": "2 реда",
        "3": "3 реда",
        "4": "6 редова"
    },
    "tacni_odgovori": [2]
},

"319": {
    "pitanje": "За проширење упита за издвајање дела података из табела базе података, као додатак, користи се клаузула",
    "moguci_odgovori": {
        "0": "ALL",
        "1": "EVERYONE",
        "2": "WHEN",
        "3": "WHERE"
    },
    "tacni_odgovori": [3]
},

"320": {
    "pitanje": "Дата је табела KUPCI: <br> <br> <table> <tr> <td> Id </td> <td> Prezime </td> <td> Adresa </td> <td> Mesto </td> <td> PostBroj </td> <td> Status </td> </tr> <tr> <td> 1 </td> <td> Antić </td> <td> Mokroluška 35 </td> <td> Bečej </td> <td> 21220 </td> <td> Aktivan </td> </tr> <tr> <td> 2 </td> <td> Kostić </td> <td> Jug Бogdanova 12 </td> <td> Niš </td> <td> 18000 </td> <td> Pasivan </td> </tr> <tr> <td> 3 </td> <td> Marić </td> <td> Masarikova 1 </td> <td> Pirot </td> <td> 18300 </td> <td> Pasivan </td> </tr> <tr> <td> 4 </td> <td> Perić </td> <td> Taкovska 67 </td> <td> Niš </td> <td> 18000 </td> <td> Pasivan </td> </tr> <tr> <td> 5 </td> <td> Rakić </td> <td> Konstantinova 22 </td> <td> Sombor </td> <td> 25000 </td> <td> Aktivan </td> </tr> <tr> <td> 6 </td> <td> Tomić </td> <td> Kneza Miloša 13 </td> <td> Bečej </td> <td> 21220 </td> <td> Аktivan </td> </tr> </table> <br> <br> Извршава се упит: <br> <br> SELECT Mesto, Adresa FROM KUPCI WHERE Prezime like ‘%mić’; <br> <br> Одредити колико редова ће имати резултантна табела не рачунајући заглавље:",
    "moguci_odgovori": {
        "0": "0 редова",
        "1": "1 ред",
        "2": "2 реда",
        "3": "3 реда",
        "4": "6 редова"
    },
    "tacni_odgovori": [1]
},

"321": {
    "pitanje": "Дата је табела KUPCI: <br> <br> <table> <tr> <td> Id </td> <td> Prezime </td> <td> Adresa </td> <td> Mesto </td> <td> PostBroj </td> <td> Status </td> </tr> <tr> <td> 1 </td> <td> Antić </td> <td> Mokroluška 35 </td> <td> Bečej </td> <td> 21220 </td> <td> Aktivan </td> </tr> <tr> <td> 2 </td> <td> Kostić </td> <td> Jug Bogdanova 12 </td> <td> Niš </td> <td> 18000 </td> <td> Pasivan </td> </tr> <tr> <td> 3 </td> <td> Marić </td> <td> Masarikova 1 </td> <td> Pirot </td> <td> 18300 </td> <td> Pasivan </td> </tr> <tr> <td> 4 </td> <td> Perić </td> <td> Takovska 67 </td> <td> Niš </td> <td> 18000 </td> <td> Pasivan </td> </tr> <tr> <td> 5 </td> <td> Rakić </td> <td> Konstantinova 22 </td> <td> Sombor </td> <td> 25000 </td> <td> Aktivan </td> </tr> <tr> <td> 6 </td> <td> Tomić </td> <td> Kneza Miloša 13 </td> <td> Bečej </td> <td> 21220 </td> <td> Aktivan </td> </tr> </table> <br> <br> Извршава се упит: <br> <br> SELECT DISTINCT Mesto FROM KUPCI; <br> <br> Одредити колико редова ће имати резултантна табела не рачунајући заглавље:",
    "moguci_odgovori": {
        "0": "5 редова",
        "1": "4 редa",
        "2": "2 реда",
        "3": "3 реда",
        "4": "6 редова"
    },
    "tacni_odgovori": [1]
},

"322": {
    "pitanje": "Издвојити могући резултат рада следеће SQL наредбе: <br> <br> SELECT ucenik_id <br> FROM ucenici <br> WHERE ucenik_id BETWEEN 200 AND 250 <br> OR ucenik_id IN (220, 280, 310) <br> AND (ucenik_id BETWEEN 250 AND 300)",
    "moguci_odgovori": {
        "0": "100",
        "1": "301, 302, 303, 304, 305, 306, 307, 308, 309",
        "2": "200, 201, 202, 203, 204, 205, 215, 225, 227, 228, 248",
        "3": "120, 180, 310 "
    },
    "tacni_odgovori": [2]
},

"323": {
    "pitanje": "Дата је табела KUPCI: <br> <br> <table> <tr> <td> Id </td> <td> Prezime </td> <td> Adresa </td> <td> Mesto </td> <td> PostBroj </td> <td> Status </td> </tr> <tr> <td> 1 </td> <td> Antić </td> <td> Mokroluška 35 </td> <td> Bečej </td> <td> 21220 </td> <td> Aktivan </td> </tr> <tr> <td> 2 </td> <td> Kostić </td> <td> Jug Бogdanova 12 </td> <td> Niš </td> <td> 18000 </td> <td> Pasivan </td> </tr> <tr> <td> 3 </td> <td> Marić </td> <td> Masarikova 1 </td> <td> Pirot </td> <td> 18300 </td> <td> Pasivan </td> </tr> <tr> <td> 4 </td> <td> Perić </td> <td> Taкovska 67 </td> <td> Niš </td> <td> 18000 </td> <td> Pasivan </td> </tr> <tr> <td> 5 </td> <td> Rakić </td> <td> Konstantinova 22 </td> <td> Sombor </td> <td> 25000 </td> <td> Aktivan </td> </tr> <tr> <td> 6 </td> <td> Tomić </td> <td> Kneza Miloša 13 </td> <td> Bečej </td> <td> 21220 </td> <td> Аktivan </td> </tr> </table> <br> <br> Извршава се упит: <br> <br> SELECT Prezime, Mesto, Adresa FROM KUPCI WHERE LENGTH(Adresa) > 14; <br> <br> Одредити колико редова ће имати резултантна табела не рачунајући заглавље:",
    "moguci_odgovori": {
        "0": "5 редова",
        "1": "4 редa",
        "2": "2 реда",
        "3": "3 реда",
        "4": "0 редова"
    },
    "tacni_odgovori": [3]
},

"324": {
    "pitanje": "Дата је табела KUPCI: <br> <br> <table> <tr> <td> Id </td> <td> Prezime </td> <td> Adresa </td> <td> Mesto </td> <td> PostBroj </td> <td> Status </td> </tr> <tr> <td> 1 </td> <td> Antić </td> <td> Mokroluška 35 </td> <td> Bečej </td> <td> 21220 </td> <td> Aktivan </td> </tr> <tr> <td> 2 </td> <td> Kostić </td> <td> Jug Bogdanova 12 </td> <td> Niš </td> <td> 18000 </td> <td> Pasivan </td> </tr> <tr> <td> 3 </td> <td> Marić </td> <td> Masarikova 1 </td> <td> Pirot </td> <td> 18300 </td> <td> Pasivan </td> </tr> <tr> <td> 4 </td> <td> Perić </td> <td> Takovska 67 </td> <td> Niš </td> <td> 18000 </td> <td> Pasivan </td> </tr> <tr> <td> 5 </td> <td> Rakić </td> <td> Konstantinova 22 </td> <td> Sombor </td> <td> 25000 </td> <td> Aktivan </td> </tr> <tr> <td> 6 </td> <td> Tomić </td> <td> Kneza Miloša 13 </td> <td> Bečej </td> <td> 21220 </td> <td> Aktivan </td> </tr> </table> <br> <br> Извршава се упит: <br> <br> SELECT Prezime, Mesto, Adresa FROM KUPCI WHERE LENGTH(Adresa) < 10; <br> <br> Одредити колико редова ће имати резултантна табела не рачунајући заглавље:",
    "moguci_odgovori": {
        "0": "5 редова",
        "1": "4 редa",
        "2": "2 реда",
        "3": "1 ред",
        "4": "0 редова"
    },
    "tacni_odgovori": [4]
},


"325": {
    "pitanje": "Дата је табела ARTIKLI: <br> <br> <table> <tr> <td> Id </td> <td> Naziv </td> <td> DatProiz </td> <td> JM </td> <td> Kol </td> <td> Cena </td> <td> Akcija </td> </tr> <tr> <td> 21 </td> <td> Hleb Sava </td> <td> 15.04.15 </td> <td> kom </td> <td> 100 </td> <td> 35 </td> <td> </td> </tr> <tr> <td> 32 </td> <td> Hleb Dunav </td> <td> 15.04.15 </td> <td> kom </td> <td> 50 </td> <td> 45 </td> <td> 0.05 </td> </tr> <tr> <td> 23 </td> <td> Baget beli </td> <td> 12.04.15 </td> <td> kom </td> <td> 20 </td> <td> 32 </td> <td> 0.12 </td> </tr> <tr> <td> 47 </td> <td> Baget crni </td> <td> 12.04.15 </td> <td> kom </td> <td> 12 </td> <td> 35 </td> <td> 0.08 </td> </tr> <tr> <td> 25 </td> <td> Tost tamni </td> <td> 10.04.15 </td> <td> kom </td> <td> 6 </td> <td> 75 </td> <td> 0.15 </td> </tr> <tr> <td> 36 </td> <td> Tost beli </td> <td> 10.04.15 </td> <td> kom </td> <td> 8 </td> <td> 70 </td> <td> </td> </tr> <tr> <td> 28 </td> <td> Kifla integralna </td> <td> 15.04.15 </td> <td> kom </td> <td> 15 </td> <td> 18 </td> <td> 0 </td> </tr> <tr> <td> 10 </td> <td> Brašno Graham </td> <td> 10.03.15 </td> <td> kg </td> <td> 24 </td> <td> 54 </td> <td> 0 </td> </tr> </table> <br> <br> Одредити упит који приказује називе за све артикле и за сваки одредити укупну цену за <br> <br> дату количину:",
    "moguci_odgovori": {
        "0": "SELECT Naziv, Kol * Cena as Ukupno FROM ARTIKLI;",
        "1": "SELECT Naziv, count(Kol * Cena) FROM ARTIKLI;",
        "2": "SELECT Naziv, COUNT (Kol , Cena) as Ukupno FROM ARTIKLI;",
        "3": "SELECT Naziv, Kol + Cena FROM ARTIKLI;"
    },
    "tacni_odgovori": [0]
},

"326": {
    "pitanje": "Дата је табела ARTIKLI: <br> <br> <table> <tr> <td> Id </td> <td> Naziv </td> <td> DatProiz </td> <td> JM </td> <td> Kol </td> <td> Cena </td> <td> Akcija </td> </tr> <tr> <td> 21 </td> <td> Hleb Sava </td> <td> 15.04.15 </td> <td> kom </td> <td> 100 </td> <td> 35 </td> <td> </td> </tr> <tr> <td> 32 </td> <td> Hleb Dunav </td> <td> 15.04.15 </td> <td> kom </td> <td> 50 </td> <td> 45 </td> <td> 0.05 </td> </tr> <tr> <td> 23 </td> <td> Baget beli </td> <td> 12.04.15 </td> <td> kom </td> <td> 20 </td> <td> 32 </td> <td> 0.12 </td> </tr> <tr> <td> 47 </td> <td> Baget crni </td> <td> 12.04.15 </td> <td> kom </td> <td> 12 </td> <td> 35 </td> <td> 0.08 </td> </tr> <tr> <td> 25 </td> <td> Tost tamni </td> <td> 10.04.15 </td> <td> kom </td> <td> 6 </td> <td> 75 </td> <td> 0.15 </td> </tr> <tr> <td> 36 </td> <td> Tost beli </td> <td> 10.04.15 </td> <td> kom </td> <td> 8 </td> <td> 70 </td> <td> </td> </tr> <tr> <td> 28 </td> <td> Kifla integralna </td> <td> 15.04.15 </td> <td> kom </td> <td> 15 </td> <td> 18 </td> <td> 0 </td> </tr> <tr> <td> 10 </td> <td> Brašno Graham </td> <td> 10.03.15 </td> <td> kg </td> <td> 24 </td> <td> 54 </td> <td> 0 </td> </tr> </table> <br> <br> Одредити упит који приказује називе за све артикле на акцији и нове цене, умањене за акцијски попуст: ",
    "moguci_odgovori": {
        "0": "SELECT Naziv, Akcija * Cena FROM ARTIKLI where Akcija is not NULL;",
        "1": "SELECT Naziv, (1-Akcija) * Cena FROM ARTIKLI where Akcija is NULL;",
        "2": "SELECT Naziv, Akcija * Cena FROM ARTIKLI where Akcija <> 0 (NULL);",
        "3": "SELECT Naziv, (1-Akcija) * Cena FROM ARTIKLI where Akcija is not NULL;"
    },
    "tacni_odgovori": [3]
},

"327": {
    "pitanje": "Дата је табела ARTIKLI: <br> <br> <table> <tr> <td> Id </td> <td> Naziv </td> <td> DatProiz </td> <td> JM </td> <td> Kol </td> <td> Cena </td> <td> Akcija </td> </tr> <tr> <td> 21 </td> <td> Hleb Sava </td> <td> 15.04.15 </td> <td> kom </td> <td> 100 </td> <td> 35 </td> <td> </td> </tr> <tr> <td> 32 </td> <td> Hleb Dunav </td> <td> 15.04.15 </td> <td> kom </td> <td> 50 </td> <td> 45 </td> <td> 0.05 </td> </tr> <tr> <td> 23 </td> <td> Baget beli </td> <td> 12.04.15 </td> <td> kom </td> <td> 20 </td> <td> 32 </td> <td> 0.12 </td> </tr> <tr> <td> 47 </td> <td> Baget crni </td> <td> 12.04.15 </td> <td> kom </td> <td> 12 </td> <td> 35 </td> <td> 0.08 </td> </tr> <tr> <td> 25 </td> <td> Tost tamni </td> <td> 10.04.15 </td> <td> kom </td> <td> 6 </td> <td> 75 </td> <td> 0.15 </td> </tr> <tr> <td> 36 </td> <td> Tost beli </td> <td> 10.04.15 </td> <td> kom </td> <td> 8 </td> <td> 70 </td> <td> </td> </tr> <tr> <td> 28 </td> <td> Kifla integralna </td> <td> 15.04.15 </td> <td> kom </td> <td> 15 </td> <td> 18 </td> <td> 0 </td> </tr> <tr> <td> 10 </td> <td> Brašno Graham </td> <td> 10.03.15 </td> <td> kg </td> <td> 24 </td> <td> 54 </td> <td> 0 </td> </tr> </table> <br> <br> Извршава се упит: <br> <br> SELECT Naziv, DatProiz, Kol from Artikli where Id < 30 and Cena <= 45; <br> <br> Одредити колико редова има табела која је резултат рада упита не рачунајући заглавље: ",
    "moguci_odgovori": {
        "0": "0 редова",
        "1": "1 ред",
        "2": "2 реда",
        "3": "3 реда"
    },
    "tacni_odgovori": [3]
},

"328": {
    "pitanje": "Дата је табела ARTIKLI: <br> <br> <table> <tr> <td> Id </td> <td> Naziv </td> <td> DatProiz </td> <td> JM </td> <td> Kol </td> <td> Cena </td> <td> Akcija </td> </tr> <tr> <td> 21 </td> <td> Hleb Sava </td> <td> 15.04.15 </td> <td> kom </td> <td> 100 </td> <td> 35 </td> <td> </td> </tr> <tr> <td> 32 </td> <td> Hleb Dunav </td> <td> 15.04.15 </td> <td> kom </td> <td> 50 </td> <td> 45 </td> <td> 0.05 </td> </tr> <tr> <td> 23 </td> <td> Baget beli </td> <td> 12.04.15 </td> <td> kom </td> <td> 20 </td> <td> 32 </td> <td> 0.12 </td> </tr> <tr> <td> 47 </td> <td> Baget crni </td> <td> 12.04.15 </td> <td> kom </td> <td> 12 </td> <td> 35 </td> <td> 0.08 </td> </tr> <tr> <td> 25 </td> <td> Tost tamni </td> <td> 10.04.15 </td> <td> kom </td> <td> 6 </td> <td> 75 </td> <td> 0.15 </td> </tr> <tr> <td> 36 </td> <td> Tost beli </td> <td> 10.04.15 </td> <td> kom </td> <td> 8 </td> <td> 70 </td> <td> </td> </tr> <tr> <td> 28 </td> <td> Kifla integralna </td> <td> 15.04.15 </td> <td> kom </td> <td> 15 </td> <td> 18 </td> <td> 0 </td> </tr> <tr> <td> 10 </td> <td> Brašno Graham </td> <td> 10.03.15 </td> <td> kg </td> <td> 24 </td> <td> 54 </td> <td> 0 </td> </tr> </table> <br> <br> Извршава се упит: <br> <br> SELECT max(Cena), min(Cena) from Artikli; <br> <br> Заокружити број испред траженог одговора. <br> Одредити резултат рада упита: ",
    "moguci_odgovori": {
        "0": "max(Cena) | min(Cena) <br> 75 | 32 ",
        "1": "max(Cena) | min(Cena) <br> 75 | 18 ",
        "2": "max(Cena) | min(Cena) <br>  6 | 100 ",
        "3": "max(Cena) | min(Cena) <br> 18 | 54 "
    },
    "tacni_odgovori": [1]
},

"329": {
    "pitanje": "Дата је табела ARTIKLI: <br> <br> <table> <tr> <td> Id </td> <td> Naziv </td> <td> DatProiz </td> <td> JM </td> <td> Kol </td> <td> Cena </td> <td> Akcija </td> </tr> <tr> <td> 21 </td> <td> Hleb Sava </td> <td> 15.04.15 </td> <td> kom </td> <td> 100 </td> <td> 35 </td> <td> </td> </tr> <tr> <td> 32 </td> <td> Hleb Dunav </td> <td> 15.04.15 </td> <td> kom </td> <td> 50 </td> <td> 45 </td> <td> 0.05 </td> </tr> <tr> <td> 23 </td> <td> Baget beli </td> <td> 12.04.15 </td> <td> kom </td> <td> 20 </td> <td> 32 </td> <td> 0.12 </td> </tr> <tr> <td> 47 </td> <td> Baget crni </td> <td> 12.04.15 </td> <td> kom </td> <td> 12 </td> <td> 35 </td> <td> 0.08 </td> </tr> <tr> <td> 25 </td> <td> Tost tamni </td> <td> 10.04.15 </td> <td> kom </td> <td> 6 </td> <td> 75 </td> <td> 0.15 </td> </tr> <tr> <td> 36 </td> <td> Tost beli </td> <td> 10.04.15 </td> <td> kom </td> <td> 8 </td> <td> 70 </td> <td> </td> </tr> <tr> <td> 28 </td> <td> Kifla integralna </td> <td> 15.04.15 </td> <td> kom </td> <td> 15 </td> <td> 18 </td> <td> 0 </td> </tr> <tr> <td> 10 </td> <td> Brašno Graham </td> <td> 10.03.15 </td> <td> kg </td> <td> 24 </td> <td> 54 </td> <td> 0 </td> </tr> </table> <br> <br> Извршава се упит: <br> <br> SELECT Naziv, DatProiz, Kol from Artikli where Id > 30 and Cena >= 45; <br> <br> Резултат извршења упита је табела са заглављем и",
    "moguci_odgovori": {
        "0": "0 редова и 2 колоне",
        "1": "1 редом и 3 колоне",
        "2": "2 реда и 3 колоне",
        "3": "3 реда и 2 колоне"
    },
    "tacni_odgovori": [2]
},

"330": {
    "pitanje": "Дата је табела KUPCI: <br> <br> <table> <tr> <td> Id </td> <td> Prezime </td> <td> Adresa </td> <td> Mesto </td> <td> PostBroj </td> <td> Status </td> </tr> <tr> <td> 1 </td> <td> Antić </td> <td> Mokroluška 35 </td> <td> Bečej </td> <td> 21220 </td> <td> Aktivan </td> </tr> <tr> <td> 2 </td> <td> Kostić </td> <td> Jug Bogdanova 12 </td> <td> Niš </td> <td> 18000 </td> <td> Pasivan </td> </tr> <tr> <td> 3 </td> <td> Marić </td> <td> Masarikova 1 </td> <td> Pirot </td> <td> 18300 </td> <td> Pasivan </td> </tr> <tr> <td> 4 </td> <td> Perić </td> <td> Takovska 67 </td> <td> Niš </td> <td> 18000 </td> <td> Pasivan </td> </tr> <tr> <td> 5 </td> <td> Rakić </td> <td> Konstantinova 22 </td> <td> Sombor </td> <td> 25000 </td> <td> Aktivan </td> </tr> <tr> <td> 6 </td> <td> Tomić </td> <td> Kneza Miloša 13 </td> <td> Bečej </td> <td> 21220 </td> <td> Aktivan </td> </tr> </table> <br> <br> Извршава се упит: <br> <br> SELECT Prezime, Mesto, Adresa FROM KUPCI WHERE LENGTH(Adresa) > 10; <br> <br> Резултат извршења упита је табела са заглављем и",
    "moguci_odgovori": {
        "0": "5 редова и 3 колоне",
        "1": "4 редa и 4 колоне",
        "2": "2 реда и 3 колоне",
        "3": "1 редом и 2 колоне",
        "4": "0 редова и 3 колоне"
    },
    "tacni_odgovori": [0]
},

"331": {
    "pitanje": "Дата је табела KUPCI: <br> <br> <table> <tr> <td> Id </td> <td> Prezime </td> <td> Adresa </td> <td> Mesto </td> <td> PostBroj </td> <td> Status </td> </tr> <tr> <td> 1 </td> <td> Antić </td> <td> Mokroluška 35 </td> <td> Bečej </td> <td> 21220 </td> <td> Aktivan </td> </tr> <tr> <td> 2 </td> <td> Kostić </td> <td> Jug Bogdanova 12 </td> <td> Niš </td> <td> 18000 </td> <td> Pasivan </td> </tr> <tr> <td> 3 </td> <td> Marić </td> <td> Masarikova 1 </td> <td> Pirot </td> <td> 18300 </td> <td> Pasivan </td> </tr> <tr> <td> 4 </td> <td> Perić </td> <td> Takovska 67 </td> <td> Niš </td> <td> 18000 </td> <td> Pasivan </td> </tr> <tr> <td> 5 </td> <td> Rakić </td> <td> Konstantinova 22 </td> <td> Sombor </td> <td> 25000 </td> <td> Aktivan </td> </tr> <tr> <td> 6 </td> <td> Tomić </td> <td> Kneza Miloša 13 </td> <td> Bečej </td> <td> 21220 </td> <td> Aktivan </td> </tr> </table> <br> <br> Извршава се упит: <br> <br> SELECT count(*) FROM KUPCI WHERE Status= ‘Aktivan’; <br> <br> Одредити резултат упита: ",
    "moguci_odgovori": {
        "0": "3",
        "1": "4",
        "2": "2",
        "3": "1",
        "4": "0"
    },
    "tacni_odgovori": [0]
},


"332": {
    "pitanje": "Дата је табела KUPCI: <br> <br> <table> <tr> <td> Id </td> <td> Prezime </td> <td> Adresa </td> <td> Mesto </td> <td> PostBroj </td> <td> Status </td> </tr> <tr> <td> 1 </td> <td> Antić </td> <td> Mokroluška 35 </td> <td> Bečej </td> <td> 21220 </td> <td> Aktivan </td> </tr> <tr> <td> 2 </td> <td> Kostić </td> <td> Jug Bogdanova 12 </td> <td> Niš </td> <td> 18000 </td> <td> Pasivan </td> </tr> <tr> <td> 3 </td> <td> Marić </td> <td> Masarikova 1 </td> <td> Pirot </td> <td> 18300 </td> <td> Pasivan </td> </tr> <tr> <td> 4 </td> <td> Perić </td> <td> Takovska 67 </td> <td> Niš </td> <td> 18000 </td> <td> Pasivan </td> </tr> <tr> <td> 5 </td> <td> Rakić </td> <td> Konstantinova 22 </td> <td> Sombor </td> <td> 25000 </td> <td> Aktivan </td> </tr> <tr> <td> 6 </td> <td> Tomić </td> <td> Kneza Miloša 13 </td> <td> Bečej </td> <td> 21220 </td> <td> Aktivan </td> </tr> </table> <br> <br> Извршава се упит: <br> <br> SELECT Prezime, Adresa, Mesto FROM KUPCI order by Prezime; <br> <br> Записи у резултантној табели ће имати: ",
    "moguci_odgovori": {
        "0": "поредак исти као у приказаној табели",
        "1": "поредак супротан од поретка у приказаној табели",
        "2": "поредак измењен у односу на приказану табелу, али не супротан"
    },
    "tacni_odgovori": [0]
},


"333": {
    "pitanje": "Дата је табела KUPCI: <br> <br> <table> <tr> <td> Id </td> <td> Prezime </td> <td> Adresa </td> <td> Mesto </td> <td> PostBroj </td> <td> Status </td> </tr> <tr> <td> 1 </td> <td> Antić </td> <td> Mokroluška 35 </td> <td> Bečej </td> <td> 21220 </td> <td> Aktivan </td> </tr> <tr> <td> 2 </td> <td> Kostić </td> <td> Jug Bogdanova 12 </td> <td> Niš </td> <td> 18000 </td> <td> Pasivan </td> </tr> <tr> <td> 3 </td> <td> Marić </td> <td> Masarikova 1 </td> <td> Pirot </td> <td> 18300 </td> <td> Pasivan </td> </tr> <tr> <td> 4 </td> <td> Perić </td> <td> Takovska 67 </td> <td> Niš </td> <td> 18000 </td> <td> Pasivan </td> </tr> <tr> <td> 5 </td> <td> Rakić </td> <td> Konstantinova 22 </td> <td> Sombor </td> <td> 25000 </td> <td> Aktivan </td> </tr> <tr> <td> 6 </td> <td> Tomić </td> <td> Kneza Miloša 13 </td> <td> Bečej </td> <td> 21220 </td> <td> Aktivan </td> </tr> </table> <br> <br>Извршава се упит:  <br> <br> SELECT Prezime, Adresa, Mesto FROM KUPCI order by Mesto; <br> <br> Заокружити број испред траженог одговора. <br> Записи у резултантној табели ће имати:",
    "moguci_odgovori": {
        "0": "поредак исти као у приказаној табели",
        "1": "поредак супротан од приказане табеле",
        "2": "поредак измењен у односу на приказану табелу, али не супротан"
    },
    "tacni_odgovori": [2]
},

"334": {
    "pitanje": "После извршења дате наредбе: <br> <br> CREATE TABLE RADNIK <br> ( IDBR integer, <br> IME varchar(20) NOT NULL, <br> POSAO varchar(15) NOT NULL, <br> KVALIF varchar(3), <br> RUKOVODILAC integer, <br> DATZAP date, <br> PREMIJA float, <br> PLATA float, <br> BROD integer <br> ); <br> добија се: ",
    "moguci_odgovori": {
        "0": "табела RADNIK са девет колона од којих се четири обавезно попуњавају",
        "1": "табела RADNIK са шест колона од којих се три обавезно попуњавају",
        "2": "табела RADNIK са девет колона од којих се две обавезно попуњавају",
        "3": "табела RADNIK са осам колона од којих се једна обавезно попуњава"
    },
    "tacni_odgovori": [2]
},

"335": {
    "pitanje": "После извршења наредбе: <br> <br> CREATE TABLE RADNIK <br> ( IDBR integer, <br> IME varchar(20) NOT NULL, <br> POSAO varchar(15) NOT NULL, <br> KVALIF varchar(3), <br> RUKOVODILAC integer, <br> DATZAP date, <br> PREMIJA float, <br> PLATA float, <br> BROD integer <br> ); <br> добија се: ",
    "moguci_odgovori": {
        "0": "табела RADNIK са примарним кључем и страним кључем",
        "1": "табела RADNIK са примарним кључем и без страног кључа",
        "2": "табела RADNIK без примарног кључа и са страним кључем",
        "3": "табела RADNIK без примарног кључа и без страног кључа"
    },
    "tacni_odgovori": [3]
},

"336": {
    "pitanje": "После извршења наредбе: <br> <br> CREATE INDEXind_ime ON RADNIK (IME ASC); <br> <br> (поставља) се:",
    "moguci_odgovori": {
        "0": "у табели RADNIK поставља INDEX над колоном IME",
        "1": "у табели INDEX поставља IME над колоном RADNIK",
        "2": "у табели RADNIK поставља INDEX над колоном ind_ime",
        "3": "у табели RADNIK поставља INDEX над колоном ASC"
    },
    "tacni_odgovori": [0]
},

"337": {
    "pitanje": "Извршењем дате наредбе: <br> <br> ALTER TABLE PROJEKATADD RokKraj date; <br> <br> постиже се: ",
    "moguci_odgovori": {
        "0": "у бази података у табели PROJEKAT уклања се колона RokKraj",
        "1": "у бази података у табели PROJEKAT додаје се колона RokKraj",
        "2": "у бази података у табели RokKraj додаје се колона PROJEKAT",
        "3": "у базу података додаје се табела PROJEKAT"
    },
    "tacni_odgovori": [1]
},

"338": {
    "pitanje": "Дата је табела ARTIKLI: <br> <br> <table> <tr> <td> Id </td> <td> Naziv </td> <td> DatProiz </td> <td> JM </td> <td> Kol </td> <td> Cena </td> <td> Akcija </td> </tr> <tr> <td> 21 </td> <td> Hleb Sava </td> <td> 15.04.15 </td> <td> kom </td> <td> 100 </td> <td> 35 </td> <td> </td> </tr> <tr> <td> 32 </td> <td> Hleb Dunav </td> <td> 15.04.15 </td> <td> kom </td> <td> 50 </td> <td> 45 </td> <td> 0.05 </td> </tr> <tr> <td> 23 </td> <td> Baget beli </td> <td> 12.04.15 </td> <td> kom </td> <td> 20 </td> <td> 32 </td> <td> 0.12 </td> </tr> <tr> <td> 47 </td> <td> Baget crni </td> <td> 12.04.15 </td> <td> kom </td> <td> 12 </td> <td> 35 </td> <td> 0.08 </td> </tr> <tr> <td> 25 </td> <td> Tost tamni </td> <td> 10.04.15 </td> <td> kom </td> <td> 6 </td> <td> 75 </td> <td> 0.15 </td> </tr> <tr> <td> 36 </td> <td> Tost beli </td> <td> 10.04.15 </td> <td> kom </td> <td> 8 </td> <td> 70 </td> <td> </td> </tr> <tr> <td> 28 </td> <td> Kifla integralna </td> <td> 15.04.15 </td> <td> kom </td> <td> 15 </td> <td> 18 </td> <td> 0 </td> </tr> <tr> <td> 10 </td> <td> Brašno Graham </td> <td> 10.03.15 </td> <td> kg </td> <td> 24 </td> <td> 54 </td> <td> 0 </td> </tr> </table> <br> <br> Заокружити број испред траженог одговора <br> Одредити упит који коригује – повећава цене за све артикле линеарно за 8 процената у односу на тренутну цену",
    "moguci_odgovori": {
        "0": "UPDATE ARTIKLI SET Cena = Cena*0.8;",
        "1": "UPDATE ARTIKLI SET Cena АS Cena*0.8;",
        "2": "UPDATE ARTIKLI SET Cena = Cena*(1+0.08);",
        "3": "UPDATE ARTIKLI SET Cena ASCena*(1 + 0.08)"
    },
    "tacni_odgovori": [2]
},


"339": {
    "pitanje": "Дата је табела RADNIK: <br> <br> <table> <tr> <td> IDBR </td> <td> IME </td> <td> PREZIME </td> <td> PLATA </td> <td> PREMIJA </td> <td> DATZAP </td> </tr> <tr> <td> 5874 </td> <td> Todor </td> <td> Marjanović </td> <td> 1000 </td> <td> 1100 </td> <td> 19.4.1971 </td> </tr> <tr> <td> 5898 </td> <td> Andrija </td> <td> Aleksić </td> <td> 1100 </td> <td></td> <td> 20.1.1980 </td> </tr> <tr> <td> 5900 </td> <td> Slobodan </td> <td> Golubović </td> <td> 900 </td> <td> 1300 </td> <td> 3.10.1978 </td> </tr> <tr> <td> 5932 </td> <td> Mitar </td> <td> Gavrilović </td> <td> 2600 </td> <td></td> <td> 25.3.1985 </td> </tr> <tr> <td> 5953 </td> <td> Persida </td> <td> Kosanović </td> <td> 1100 </td> <td> 0 </td> <td> 12.1.1979 </td> </tr> <tr> <td> 6234 </td> <td> Marko </td> <td> Pavlović </td> <td> 1300 </td> <td> 3000 </td> <td> 17.12.1990 </td> </tr> <tr> <td> 6789 </td> <td> Janko </td> <td> Nikolić </td> <td> 3900 </td> <td> 10 </td> <td> 23.12.1999 </td> </tr> </table> <br> <br> Заокружити број испред упитa којим ће се приказати само презиме, име и датум запослења за раднике запослене пре 1. јануара 1980.",
    "moguci_odgovori": {
        "0": "Select Prezime, Ime, DatZap from Radnik;",
        "1": "Select Ime, Prezime, DatZap from Radnik where DatZap < #1.1.1980#;",
        "2": "SELECT PREZIME, IME, DATZAPFROM RADNIK where datzap>#1/1/1980#;",
        "3": "Select Prezime, Ime, DatZap from Radnik where DatZap<#1/1/1980#;"
    },
    "tacni_odgovori": [3]
},

"340": {
    "pitanje": "Дата је табела RADNIK: <br> <br> <table> <tr> <td> IDBR </td> <td> IME </td> <td> PREZIME </td> <td> PLATA </td> <td> PREMIJA </td> <td> DATZAP </td> </tr> <tr> <td> 5874 </td> <td> Todor </td> <td> Marjanović </td> <td> 1000 </td> <td> 1100 </td> <td> 19.4.1971 </td> </tr> <tr> <td> 5898 </td> <td> Andrija </td> <td> Aleksić </td> <td> 1100 </td> <td></td> <td> 20.1.1980 </td> </tr> <tr> <td> 5900 </td> <td> Slobodan </td> <td> Golubović </td> <td> 900 </td> <td> 1300 </td> <td> 3.10.1978 </td> </tr> <tr> <td> 5932 </td> <td> Mitar </td> <td> Gavrilović </td> <td> 2600 </td> <td></td> <td> 25.3.1985 </td> </tr> <tr> <td> 5953 </td> <td> Persida </td> <td> Kosanović </td> <td> 1100 </td> <td> 0 </td> <td> 12.1.1979 </td> </tr> <tr> <td> 6234 </td> <td> Marko </td> <td> Pavlović </td> <td> 1300 </td> <td> 3000 </td> <td> 17.12.1990 </td> </tr> <tr> <td> 6789 </td> <td> Janko </td> <td> Nikolić </td> <td> 3900 </td> <td> 10 </td> <td> 23.12.1999 </td> </tr> </table> <br> <br> Извршава се упит: <br> <br> SELECT ime, prezime, plata FROM radnik <br> WHERE plata = (SELECT MAX(plata) FROM radnik); <br> <br> Одредити резултат извршења упита:",
    "moguci_odgovori": {
        "0": "<table> <tr> <td> IME </td> <td> PREZIME </td> <td> PLATA </td> </tr> <tr> <td> Slobodan </td> <td> Golubović </td> <td> 3900 </td> </tr> <tr> <td> Mitar </td> <td> Gavrilović </td> <td> 2600 </td> </tr> </table>",
        "1": "<table> <tr> <td> IME </td> <td> PREZIME </td> <td> PLATA </td> </tr> <tr> <td> Slobodan </td> <td> Golubović </td> <td> 3900 </td> </tr> <tr> <td> Janko </td> <td> Nikolić </td> <td> 3900 </td> </tr> </table>",
        "2": "<table> <tr> <td> IME </td> <td> PREZIME </td> <td> PLATA </td> </tr> <tr> <td> Slobodan </td> <td> Golubović </td> <td> 3900 </td> </tr> </table>",
        "3": "<table> <tr> <td> IME </td> <td> PREZIME </td> <td> PLATA </td> </tr> <tr> <td> Janko </td> <td> Nikolić </td> <td> 3900 </td> </tr> </table>"
    },
    "tacni_odgovori": [1]
},

"341": {
    "pitanje": "Дата је табела RADNIK: <br> <br> <table> <tr> <td> IDBR </td> <td> IME </td> <td> PREZIME </td> <td> PLATA </td> <td> PREMIJA </td> <td> DATZAP </td> </tr> <tr> <td> 5874 </td> <td> Todor </td> <td> Marjanović </td> <td> 1000 </td> <td> 1100 </td> <td> 19.4.1971 </td> </tr> <tr> <td> 5898 </td> <td> Andrija </td> <td> Aleksić </td> <td> 1100 </td> <td></td> <td> 20.1.1980 </td> </tr> <tr> <td> 5900 </td> <td> Slobodan </td> <td> Golubović </td> <td> 900 </td> <td> 1300 </td> <td> 3.10.1978 </td> </tr> <tr> <td> 5932 </td> <td> Mitar </td> <td> Gavrilović </td> <td> 2600 </td> <td></td> <td> 25.3.1985 </td> </tr> <tr> <td> 5953 </td> <td> Persida </td> <td> Kosanović </td> <td> 1100 </td> <td> 0 </td> <td> 12.1.1979 </td> </tr> <tr> <td> 6234 </td> <td> Marko </td> <td> Pavlović </td> <td> 1300 </td> <td> 3000 </td> <td> 17.12.1990 </td> </tr> <tr> <td> 6789 </td> <td> Janko </td> <td> Nikolić </td> <td> 3900 </td> <td> 10 </td> <td> 23.12.1999 </td> </tr> </table> <br> <br> Извршава се упит: <br> <br> SELECT ime, prezime, plata+premija AS zarada FROM radnik <br> WHERE premija is not NULL and premija> 10; <br> <br> Одредити шта је резултат извршења упита:",
    "moguci_odgovori": {
        "0": "<table> <tr> <td> IME </td> <td> PREZIME </td> <td> ZARADA </td> </tr> <tr> <td> Slobodan </td> <td> Golubović </td> <td> 5200 </td> </tr> <tr> <td> Marko </td> <td> Pavlović </td> <td> 4300 </td> </tr> </table> ",
        "1": "<table> <tr> <td> IME </td> <td> PREZIME </td> <td> ZARADA </td> </tr> <tr> <td> Slobodan </td> <td> Golubović </td> <td> 3900 </td> </tr> <tr> <td> Marko </td> <td> Pavlović </td> <td> 3000 </td> </tr> </table> ",
        "2": "<table> <tr> <td> IME </td> <td> PREZIME </td> <td> ZARADA </td> </tr> <tr> <td> Mitar </td> <td> Gavrilović </td> <td> 2600 </td> </tr> </table> ",
        "3": "<table> <tr> <td> IME </td> <td> PREZIME </td> <td> ZARADA </td> </tr> <tr> <td> Persida </td> <td> Kosanović </td> <td> 1100 </td> </tr> <tr> <td> Janko </td> <td> Nikolić </td> <td> 3900 </td> </tr> </table> "
    },
    "tacni_odgovori": [0]
},


"342": {
    "pitanje": "Дата је табела RADNIK: <br> <br> <table> <tr> <td> IDBR </td> <td> IME </td> <td> PREZIME </td> <td> PLATA </td> <td> PREMIJA </td> <td> DATZAP </td> </tr> <tr> <td> 5874 </td> <td> Todor </td> <td> Marjanović </td> <td> 1000 </td> <td> 1100 </td> <td> 19.4.1971 </td> </tr> <tr> <td> 5898 </td> <td> Andrija </td> <td> Aleksić </td> <td> 1100 </td> <td></td> <td> 20.1.1980 </td> </tr> <tr> <td> 5900 </td> <td> Slobodan </td> <td> Golubović </td> <td> 900 </td> <td> 1300 </td> <td> 3.10.1978 </td> </tr> <tr> <td> 5932 </td> <td> Mitar </td> <td> Gavrilović </td> <td> 2600 </td> <td></td> <td> 25.3.1985 </td> </tr> <tr> <td> 5953 </td> <td> Persida </td> <td> Kosanović </td> <td> 1100 </td> <td> 0 </td> <td> 12.1.1979 </td> </tr> <tr> <td> 6234 </td> <td> Marko </td> <td> Pavlović </td> <td> 1300 </td> <td> 3000 </td> <td> 17.12.1990 </td> </tr> <tr> <td> 6789 </td> <td> Janko </td> <td> Nikolić </td> <td> 3900 </td> <td> 10 </td> <td> 23.12.1999 </td> </tr> </table> <br> <br> Извршава се упит: <br> <br> SELECT ime, prezime, plata+premija AS zarada FROM radnik <br> WHEREpremijais not NULL; <br> <br> Одредити колико редова има табела која је резултат извршења упита не рачунајући заглавље:",
    "moguci_odgovori": {
        "0": "0",
        "1": "2",
        "2": "4",
        "3": "5"
    },
    "tacni_odgovori": [2]
},


"343": {
    "pitanje": "TBU",
    "moguci_odgovori": {
        "0": "Називи свих одељења",
        "1": "Називи одељења у којима су распоређени радници",
        "2": "Називи одељења у којима нису распоређени радници",
        "3": "Назив одељења у ком има највише радника"
    },
    "tacni_odgovori": [2]
},


"344": {
    "pitanje": "Дата је табела KUPCI: <br> <br> <table> <tr> <td> Id </td> <td> Prezime </td> <td> Adresa </td> <td> Mesto </td> <td> PostBroj </td> <td> Status </td> </tr> <tr> <td> 1 </td> <td> Antić </td> <td> Mokroluška 35 </td> <td> Bečej </td> <td> 21220 </td> <td> Aktivan </td> </tr> <tr> <td> 2 </td> <td> Kostić </td> <td> Jug Бogdanova 12 </td> <td> Niš </td> <td> 18000 </td> <td> Pasivan </td> </tr> <tr> <td> 3 </td> <td> Marić </td> <td> Masarikova 1 </td> <td> Pirot </td> <td> 18300 </td> <td> Pasivan </td> </tr> <tr> <td> 4 </td> <td> Perić </td> <td> Taкovska 67 </td> <td> Niš </td> <td> 18000 </td> <td> Pasivan </td> </tr> <tr> <td> 5 </td> <td> Rakić </td> <td> Konstantinova 22 </td> <td> Sombor </td> <td> 25000 </td> <td> Aktivan </td> </tr> <tr> <td> 6 </td> <td> Tomić </td> <td> Kneza Miloša 13 </td> <td> Bečej </td> <td> 21220 </td> <td> Аktivan </td> </tr> </table> <br> <br> у којој поља AdresaPostBrojStatus могу бити неодређена. <br> Извршaва се упит: <br> <br> INSERT INTO KUPCI (Id, Prezime, Mesto) <br> VALUES (9,'Andrejić','Ada'); <br> <br> Одредити резултат рада овог упита: ",
    "moguci_odgovori": {
        "0": "Добићемо поруку о грешци",
        "1": "У табелу ће бити додат један запис",
        "2": "Табела се неће променити",
        "3": "Додате вредности нису правилне"
    },
    "tacni_odgovori": [1]
},


"345": {
    "pitanje": "Дата је табела KUPCI: <br> <br> <table> <tr> <td> Id </td> <td> Prezime </td> <td> Adresa </td> <td> Mesto </td> <td> PostBroj </td> <td> Status </td> </tr> <tr> <td> 1 </td> <td> Antić </td> <td> Mokroluška 35 </td> <td> Bečej </td> <td> 21220 </td> <td> Aktivan </td> </tr> <tr> <td> 2 </td> <td> Kostić </td> <td> Jug Бogdanova 12 </td> <td> Niš </td> <td> 18000 </td> <td> Pasivan </td> </tr> <tr> <td> 3 </td> <td> Marić </td> <td> Masarikova 1 </td> <td> Pirot </td> <td> 18300 </td> <td> Pasivan </td> </tr> <tr> <td> 4 </td> <td> Perić </td> <td> Taкovska 67 </td> <td> Niš </td> <td> 18000 </td> <td> Pasivan </td> </tr> <tr> <td> 5 </td> <td> Rakić </td> <td> Konstantinova 22 </td> <td> Sombor </td> <td> 25000 </td> <td> Aktivan </td> </tr> <tr> <td> 6 </td> <td> Tomić </td> <td> Kneza Miloša 13 </td> <td> Bečej </td> <td> 21220 </td> <td> Аktivan </td> </tr> </table> <br> <br> Извршава се упит: <br> <br> DELETE FROM KUPCI WHERE Mesto Like ‘*?o?*’; <br> <br> Одредити вредности Id оних записа који ће бити уклоњени из табеле након извршења датог упита: ",
    "moguci_odgovori": {
        "0": "1,2",
        "1": "2,3",
        "2": "3,5",
        "3": "1,6"
    },
    "tacni_odgovori": [2]
},


"346": {
    "pitanje": "Дата је табела KUPCI: <br> <br> <table> <tr> <td> Id </td> <td> Prezime </td> <td> Adresa </td> <td> Mesto </td> <td> PostBroj </td> <td> Status </td> </tr> <tr> <td> 1 </td> <td> Antić </td> <td> Mokroluška 35 </td> <td> Bečej </td> <td> 21220 </td> <td> Aktivan </td> </tr> <tr> <td> 2 </td> <td> Kostić </td> <td> Jug Бogdanova 12 </td> <td> Niš </td> <td> 18000 </td> <td> Pasivan </td> </tr> <tr> <td> 3 </td> <td> Marić </td> <td> Masarikova 1 </td> <td> Pirot </td> <td> 18300 </td> <td> Pasivan </td> </tr> <tr> <td> 4 </td> <td> Perić </td> <td> Taкovska 67 </td> <td> Niš </td> <td> 18000 </td> <td> Pasivan </td> </tr> <tr> <td> 5 </td> <td> Rakić </td> <td> Konstantinova 22 </td> <td> Sombor </td> <td> 25000 </td> <td> Aktivan </td> </tr> <tr> <td> 6 </td> <td> Tomić </td> <td> Kneza Miloša 13 </td> <td> Bečej </td> <td> 21220 </td> <td> Аktivan </td> </tr> </table> <br> <br> Извршава се упит: <br> <br> CREATE TABLE NoviKupci <br> (Id number PrimaryKey, Prezime text(50), Adresa Text(50), Mesto Text(20), <br> PostBroj Number, Status Text(8) is Null); <br> <br> Одредити резултат извршења упита: ",
    "moguci_odgovori": {
        "0": "Креира нову табелу NoviKupci",
        "1": "У нову табелу NoviKupci преписује све записе из табеле KUPCI",
        "2": "Уклања табелу KUPCI и замењује је табелом NoviKupci",
        "3": "Не креира нову табелу NoviKupci, јер већ постоји табела KUPCI"
    },
    "tacni_odgovori": [0]
},

"347": {
    "pitanje": ". Упит: <br> <br> CREATE TABLE NoviKupci <br> (Id number PrimaryKey, Prezime text(50), Adresa Text(50), Mesto Text(20), <br> PostBroj Number, Status Text(8) is Null); <br> <br> спада у: ",
    "moguci_odgovori": {
        "0": "Параметарске упите",
        "1": "Акционе упите",
        "2": "Селекционе упите",
        "3": "Агрегатне упите"
    },
    "tacni_odgovori": [1]
},

"348": {
    "pitanje": "Дате су табеле: KUPCI, NoviKupci следеће (једнаке) структуре: <br> <br> (Id number PrimaryKey, Prezime text(50), Adresa Text(50), Mesto Text(20), <br> PostBroj Number, Status Text(8) is Null); : <br> <br> Извршава се упит: <br> <br> INSERT INTO NoviKupci <br> SELECT *FROM KUPCI WHERE Status = ‘Aktivan’; <br> <br> Одредити резултат извршења упита: ",
    "moguci_odgovori": {
        "0": "У табелу NoviKupci уписује све записе из табеле KUPCI",
        "1": "У табелу NoviKupci уписује само записе из табеле KUPCI са задатим статусом",
        "2": "У табелу KUPCI уписује све записе из табеле NoviKupci",
        "3": "У табелу KUPCI уписује само записе из табеле NoviKupci са задатим статусом"
    },
    "tacni_odgovori": [1]
},

"349": {
    "pitanje": "Дат је упит: <br> <br> SELECT * <br> FROM ucenici <br> WHERE odeljenje=4 OR odeljenje=7 OR odeljenje=10 <br> <br> Изабрати оператор који би требало користити у датом упиту да би избегли вишеструко коришћење оператора ОR:",
    "moguci_odgovori": {
        "0": "LIKE",
        "1": "BETWEEN",
        "2": "AND",
        "3": "IN"
    },
    "tacni_odgovori": [3]
},







"350": {
    "pitanje": "Заокружити број испед понуђеног одговора који представља број вредности које може да врати подупит уколико је испред њега постављен оператор једнакости (=), а да при том упит у коме се налази тај подупит функционише. ",
    "moguci_odgovori": {
        "0": "Hеограничено",
        "1": "Само једну",
        "2": "До две",
        "3": "До пет"
    },
    "tacni_odgovori": [1]
},

"351": {
    "pitanje": "Изабрaти исказ о подупитима који је тачан:",
    "moguci_odgovori": {
        "0": "Подупит се пише под наводницима",
        "1": "Подупит не сме да садржи групне функције",
        "2": "Подупит се често користи у WHERE клаузули да врати вредности које испуњавају одрећени услов",
        "3": "Подупит се најчешће извршава последњи, након што се изврши главни (спољни) упит"
    },
    "tacni_odgovori": [2]
},

"352": {
    "pitanje": "Табела Zaposleni садржи поља: zaposleni_id, ime, prezime, plata, odsek_id. <br> Дат је упит: <br> <br> SELECT zaposleni_id, ime <br> FROM zaposleni <br> WHERE plata=(SELECT MAX(plata) FROM zaposleni GROUP BY odsek_id) <br> <br> Одредити разлог због кога дати упит не ради: ",
    "moguci_odgovori": {
        "0": "Подупит се пише под наводницима",
        "1": "Подупит не сме користити групне функције",
        "2": "Подупит враћа више од једне врсте, а коришћен је оператор за поређење са једном вредношћу",
        "3": "Подупит може користити само колоне које се налазе у спољњем упиту иза речи SELECT"
    },
    "tacni_odgovori": [1]
},

"353": {
    "pitanje": "Дате су табеле: KUPCI, NoviKupci следеће (једнаке) структуре: <br> <br> (Id number PrimaryKey, Prezime text(50), Adresa Text(50), Mesto Text(20), <br> PostBroj Number, Status Text(8) is Null); : <br> <br> Извршава се упит: <br> <br> INSERT INTO NoviKupci <br> SELECT *FROM KUPCI WHERE Status <> ‘Aktivan’; <br> <br> Одредити шта је резултат извршења датог упита:",
    "moguci_odgovori": {
        "0": "У табелу NoviKupci уписује сaмo записе из табеле KUPCI са статусом који је једнак Aktivan",
        "1": "У табелу NoviKupci уписује само записе из табеле KUPCI са статусом који није једнак Aktivan",
        "2": "У табелу KUPCI уписује све записе из табеле NoviKupci",
        "3": "У табелу KUPCI уписује само записе из табеле NoviKupci са статусом који није једнак Aktivan"
    },
    "tacni_odgovori": [1]
},

"354": {
    "pitanje": "Табела Zaposleni садржи поља: zaposleni_id, ime, prezime, plata, odsek_id. <br> Потребно је приказати ид одсека, најмању и највећу плату у сваком одсеку. <br> Заокружити број испред упита који одговара претходном захтеву: ",
    "moguci_odgovori": {
        "0": "SELECT odsek_id, MIN(plata), MAX(plata) <br> FROM zaposleni HAVING odsek_id",
        "1": "SELECT odsek_id, MIN(plata), MAX(plata) <br> FROM zaposleni GROUP BY odsek_id ",
        "2": "SELECT odsek_id, MIN(plata), MAX(plata) <br> FROM zaposleni <br> WHERE odsek=odsek_id ",
        "3": "SELECT MIN(plata), MAX(plata) <br> FROM zaposleni GROUP BY odsek_id "
    },
    "tacni_odgovori": [1]
},

"355": {
    "pitanje": "Заокружити број испред назива споја који је потребно користити да би приказали сви редови из табела Zaposleni и Istorija_zaposlenih.",
    "moguci_odgovori": {
        "0": "Унутрашњи спој",
        "1": "Десни спољашњи спој",
        "2": "Леви спољашњи спој",
        "3": "Потпуни спољашњи спој"
    },
    "tacni_odgovori": [3]
},

"356": {
    "pitanje": "Заокруживањем редног броја испред понуђеног одговора, изабрати исказ који најбоље описује природно спајање табела.",
    "moguci_odgovori": {
        "0": "Спој између две табеле које имају колоне са истим именом, типом података и дужином",
        "1": "Спој између две табеле који као резултат даје Декартов производ",
        "2": "Спој између две табеле код којих не постоје поља која имају исто име, тип и дужину.",
        "3": "Спој који користи само једну табелу."
    },
    "tacni_odgovori": [0]
},

"357": {
    "pitanje": "Одабрати клаузулу коју је потребно користи уколико листа иза резервисане речи SELECT садржи колону и групну функцију: ",
    "moguci_odgovori": {
        "0": "HAVING клаузулу",
        "1": "GROUP BY клаузулу",
        "2": "JOIN клаузулу",
        "3": "ORDER BY клаузулу"
    },
    "tacni_odgovori": [1]
},

"358": {
    "pitanje": ". Табела Zaposleni садржи поља: Zaposleni_Id, Ime, Prezime, Plata, Odsek_Id и незавршени упит: <br> <br> SELECT COUNT(Odsek_Id), Ime, Prezime <br> FROM Zaposleni <br> GROUP BY????? <br> <br> Одредити чиме је потребно заменити ????? да би упит био исправан. Заокружити број испред тачног одговора:",
    "moguci_odgovori": {
        "0": "Odsek_Id",
        "1": "Odsek_Id, Ime",
        "2": "Odsek_Id, Ime, Prezime",
        "3": "Ime, Prezime"
    },
    "tacni_odgovori": [3]
},

"359": {
    "pitanje": "Извршава се следећа SELECT наредба: <br> <br> SELECT MAX(plata), odsek_id <br> FROM zaposleni <br> GROUP BY odsek_id <br> <br> Означити које ће вреднoсти бити приказане: ",
    "moguci_odgovori": {
        "0": "Највећа плата коју има запослени у фирми.",
        "1": "Највећa платa у сваком одсеку",
        "2": "Запослени који има највећу плату.",
        "3": "Запослени који имају највећу плату у сваком одсеку"
    },
    "tacni_odgovori": [1]
},

"360": {
    "pitanje": "Извршава се следећа SELECT наредба: <br> <br> SELECT MIN(datum_zaposlenja), odsek_id <br> FROM zaposleni <br> GROUP BY odsek_id <br> <br> Одредити које ће вредности бити приказане:",
    "moguci_odgovori": {
        "0": "Најранији датум запослења за сваки одсек предузећа.",
        "1": "Најранији датум запослења у целој табели ZAPOSLENI",
        "2": "Датум запослења последњег запосленог радника у целом предузећу",
        "3": "Датум запослења најстаријег запосленог радника у целом предузећу.",
        "4": "Датум запослења најстаријег запосленог радника у сваком одсеку предузећа."
    },
    "tacni_odgovori": [0]
},

"361": {
    "pitanje": "Означити функцију која враћа датум и време на рачунару који је сервер базе података:",
    "moguci_odgovori": {
        "0": "DATE",
        "1": "DATATIME",
        "2": "SYSDATE",
        "3": "CURRENTDATE"
    },
    "tacni_odgovori": [2]
},

"362": {
    "pitanje": "Означити оператор поређења који захтевa листу вредности:",
    "moguci_odgovori": {
        "0": "IN",
        "1": "LIKE ",
        "2": "BETWEEN … IN …",
        "3": "IS NULL"
    },
    "tacni_odgovori": [0]
},

"363": {
    "pitanje": "Означити шта се дешава када се креира Декартов производ:",
    "moguci_odgovori": {
        "0": "Табела се спаја са собом, свака колона са сваком колоном",
        "1": "Tабела се спаја са другом једнаком табелом",
        "2": "Све врсте једне табеле се спајају са свим врстама друге табеле",
        "3": "Све врсте које се не слажу у WHERE клаузули се приказују"
    },
    "tacni_odgovori": [2]
},

"364": {
    "pitanje": "Одредити реченицу која је тачна о оператору ANY који се примењује са подупитом који враћа више вредности:",
    "moguci_odgovori": {
        "0": "Оператор ANY може да се користи са резервисаном речју DISTINCT",
        "1": "Оператор ANY је синоним за оператор АLL",
        "2": "Оператор ANY упоређујеса свим вредностима које враћа подупит",
        "3": "Оператор ANY може да се користи са операторима LIKE и IN"
    },
    "tacni_odgovori": [2]
},


"365": {
    "pitanje": "Дата је табела ARTIKLI: <br> <br> <table> <tr> <td> Id </td> <td> Naziv </td> <td> DatProiz </td> <td> JM </td> <td> Kol </td> <td> Cena </td> <td> Akcija </td> </tr> <tr> <td> 21 </td> <td> Hleb Sava </td> <td> 15.04.15 </td> <td> kom </td> <td> 100 </td> <td> 35 </td> <td> </td> </tr> <tr> <td> 32 </td> <td> Hleb Dunav </td> <td> 15.04.15 </td> <td> kom </td> <td> 50 </td> <td> 45 </td> <td> 0.05 </td> </tr> <tr> <td> 23 </td> <td> Baget beli </td> <td> 12.04.15 </td> <td> kom </td> <td> 20 </td> <td> 32 </td> <td> 0.12 </td> </tr> <tr> <td> 47 </td> <td> Baget crni </td> <td> 12.04.15 </td> <td> kom </td> <td> 12 </td> <td> 35 </td> <td> 0.08 </td> </tr> <tr> <td> 25 </td> <td> Tost tamni </td> <td> 10.04.15 </td> <td> kom </td> <td> 6 </td> <td> 75 </td> <td> 0.15 </td> </tr> <tr> <td> 36 </td> <td> Tost beli </td> <td> 10.04.15 </td> <td> kom </td> <td> 8 </td> <td> 70 </td> <td> </td> </tr> <tr> <td> 28 </td> <td> Kifla integralna </td> <td> 15.04.15 </td> <td> kom </td> <td> 15 </td> <td> 18 </td> <td> 0 </td> </tr> <tr> <td> 10 </td> <td> Brašno Graham </td> <td> 10.03.15 </td> <td> kg </td> <td> 24 </td> <td> 54 </td> <td> 0 </td> </tr> </table> <br> <br> Потребно је приказати називе, цене и количине за све артикле чији назив не почиње са Hleb, Baget или Tost. <br> Заокружити број испред упита који одговара постављеном захтеву.",
    "moguci_odgovori": {
        "0": "SELECT Naziv, Kol, Cena FROM ARTIKLI;",
        "1": "SELECT Naziv, Kol, Cena FROM ARTIKLI where Naziv not in ('Hleb* ', 'Baget* ', 'Tost*');",
        "2": "SELECT Naziv, Kol , Cena FROM ARTIKLI where Naziv not like 'Hleb* ’ and Naziv not like 'Tost* ’ and Naziv not like 'Baget* ’;",
        "3": "SELECT Naziv, Kol, Cena FROM ARTIKLI where Naziv not like ('Hleb* ', 'Baget* ', 'Tost* ');"
    },
    "tacni_odgovori": [1]
},


"366": {
    "pitanje": "Дата је табела ARTIKLI и упит: <br> <br> <table> <tr> <td> Id </td> <td> Naziv </td> <td> DatProiz </td> <td> JM </td> <td> Kol </td> <td> Cena </td> <td> Akcija </td> </tr> <tr> <td> 21 </td> <td> Hleb Sava </td> <td> 15.04.15 </td> <td> kom </td> <td> 100 </td> <td> 35 </td> <td> </td> </tr> <tr> <td> 32 </td> <td> Hleb Dunav </td> <td> 15.04.15 </td> <td> kom </td> <td> 50 </td> <td> 45 </td> <td> 0.05 </td> </tr> <tr> <td> 23 </td> <td> Baget beli </td> <td> 12.04.15 </td> <td> kom </td> <td> 20 </td> <td> 32 </td> <td> 0.12 </td> </tr> <tr> <td> 47 </td> <td> Baget crni </td> <td> 12.04.15 </td> <td> kom </td> <td> 12 </td> <td> 35 </td> <td> 0.08 </td> </tr> <tr> <td> 25 </td> <td> Tost tamni </td> <td> 10.04.15 </td> <td> kom </td> <td> 6 </td> <td> 75 </td> <td> 0.15 </td> </tr> <tr> <td> 36 </td> <td> Tost beli </td> <td> 10.04.15 </td> <td> kom </td> <td> 8 </td> <td> 70 </td> <td> </td> </tr> <tr> <td> 28 </td> <td> Kifla integralna </td> <td> 15.04.15 </td> <td> kom </td> <td> 15 </td> <td> 18 </td> <td> 0 </td> </tr> <tr> <td> 10 </td> <td> Brašno Graham </td> <td> 10.03.15 </td> <td> kg </td> <td> 24 </td> <td> 54 </td> <td> 0 </td> </tr> </table> <br> <br> SELECT Naziv, Kol, Cena, DateDiff(\"d\", DatProiz,“2015-04-18“) FROM ARTIKLI; <br> <br> Одредити шта ће бити приказано након извршења упита:",
    "moguci_odgovori": {
        "0": "Називи, цене и количине за све артикле",
        "1": "Називи, цене и количине за све артикле који су произведени пре 18.04.2015",
        "2": "Називи, цене, количине и број дана од датума производње до 18.04.2015. за све артикле ",
        "3": "Називи, цене, количине и број дана од датума производње до дана истека рока за све артикле"
    },
    "tacni_odgovori": [2]
},


"367": {
    "pitanje": "Дата је табела RADNIK и упит: <br> <br> <table> <tr> <td> IDBR </td> <td> IME </td> <td> PREZIME </td> <td> PLATA </td> <td> PREMIJA </td> <td> DATZAP </td> </tr> <tr> <td> 6234 </td> <td> Marko </td> <td> Pavlović </td> <td> 1300 </td> <td> 3000 </td> <td> 17.12.1990 </td> </tr> <tr> <td> 6789 </td> <td> Janko </td> <td> Nikolić </td> <td> 3900 </td> <td> 10 </td> <td> 23.12.1999 </td> </tr> </table> <br> <br> SELECT ime, prezime, DateDiff(\"yyyy\", datzap, now()) as god from radnik; <br> <br> Одредити шта је резултат упита: ",
    "moguci_odgovori": {
        "0": "Табела са подацима о именима и презименима радника",
        "1": "Табела са подацима о именима, презименима и броју година које су протекле од датума запослења радника до краја века",
        "2": "Табела са подацима о именима, презименима и датумима запослења радника",
        "3": "Табела са подацима о именима, презименима и броју година које су протекле од датума запослења радника до тренутног датума"
    },
    "tacni_odgovori": [3]
},

"368": {
    "pitanje": "Дата је табела RADNIK (IDBR, prezime, ime, plata,datZap, BROD) и упит: <br> <br> SELECT prezime, ime, posao, plata <br> FROM Radnik WHERE ime LIKE @name <br> <br> Одредити групу којој припада дати упит:",
    "moguci_odgovori": {
        "0": "Параметарски упити",
        "1": "Групни упити",
        "2": "Акциони упити",
        "3": "Агрегатни упити"
    },
    "tacni_odgovori": [0]
},

"369": {
    "pitanje": "Одредити оператор поређења који се може користити у упиту који има подупит који враћа више врста:",
    "moguci_odgovori": {
        "0": "IN, ANY и АLL",
        "1": "LIKE",
        "2": "BETWEEN... AND ...",
        "3": "=, < и >"
    },
    "tacni_odgovori": [0]
},

"370": {
    "pitanje": "Извршава се SELECT упит који у себи има подупит: <br> <br> SELECT prezime, ime <br> FROM ucenici <br> WHERE odeljenje_id IN <br> (SELECT odeljenje_id <br> FROM podela <br> WHERE nastavnik_id=20) <br> <br> Одредити реченицу о датом подупиту која је тачна:",
    "moguci_odgovori": {
        "0": "Спољни упит се извршава пре угњеженог подупита",
        "1": "Резултати унутрашњег упита се враћају спољном упиту",
        "2": "Јавља се грешка ако и унутрашњи и спољни упит не враћају вредности",
        "3": "Оба упита (и спољашњи и унутрашњи) морају вратити вредност да не би дошло до грешке."
    },
    "tacni_odgovori": [1]
},

"371": {
    "pitanje": "Одредити реченицу која најбоље описује значење АNY оператора:",
    "moguci_odgovori": {
        "0": "Једнак било ком члану листе",
        "1": "Упорећује вредност са сваком вредношћу коју враћа подупит",
        "2": "Упорећује вредност са првом вредности коју враћа подупит.",
        "3": "Једнак свакој вредности у листи"
    },
    "tacni_odgovori": [1]
},

"372": {
    "pitanje": "Потребно је креирати извештај који приказује имена свих производа чија је цена већа од просечне цене свих производа: <br> Заокружити број испред упита који одговара постављеном задатку:",
    "moguci_odgovori": {
        "0": "SELECT naziv <br> FROM proizvod <br> WHERE cena > (SELECT AVG(cena) FROM proizvod) ",
        "1": "SELECT naziv <br> FROM proizvod <br> WHERE cena > AVG(cena)",
        "2": "SELECT AVG(cena), naziv <br> FROM proizvod <br> WHERE cena > AVG(cena) <br> GROUP BY naziv",
        "3": "SELECT naziv <br> FROM (SELECT AVG(cena) FROM proizvod) <br> WHERE cena > AVG(cena) "
    },
    "tacni_odgovori": [0]
},

"373": {
    "pitanje": "Табела ARTIKLI садржи следеће колоне: artikl_id, naziv, kategorija, cena, kolicina. <br> Потребно је да се прикаже категорија и минимална цена артикла у свакој категорији. <br> Изабрати упит који даје тражени извештај: ",
    "moguci_odgovori": {
        "0": "SELECT kategorija, MIN(cena) <br> FROM artikli <br> GROUP BY cena",
        "1": "SELECT kategorija, MIN(cena) <br> FROM artikli <br> GROUP BY kategorija",
        "2": "SELECT MIN(cena), kategorija <br> FROM artikli <br> GROUP BY MIN(cena), kategorija",
        "3": "SELECT cena, MIN(kategorija) <br> FROM artikli <br> GROUP BY kategorija"
    },
    "tacni_odgovori": [1]
},

"374": {
    "pitanje": "Уколико подупит формираног упита враћа једну врсту, заокружити број испред оператора који се може користити у таквом упиту",
    "moguci_odgovori": {
        "0": "LIKE",
        "1": "ANY",
        "2": "ALL",
        "3": "IN"
    },
    "tacni_odgovori": [0]
},

"375": {
    "pitanje": "Табела RADIONICA садржи следеће колоне: radinica_id, naziv, zanat, lokacija_id. <br> Потребно је да се прикаже број радионица са јединственим занатом на свакој локацији. <br> Изабрати упит који даје тражени извештај:",
    "moguci_odgovori": {
        "0": "SELECT location_id, COUNT(DISTINCT zanat) <br> FROM radionicа",
        "1": "SELECT location_id, COUNT(zanat) <br> FROM radionicа <br> GROUP BY lokacija_id",
        "2": "SELECT location_id, COUNT(DISTINCT zanat) <br> FROM radionicа <br> GROUP BY lokacija_id",
        "3": "SELECT location_id, COUNT(DISTINCT zanat) <br> FROM radionicа <br> GROUP BY zanat"
    },
    "tacni_odgovori": [2]
},

"376": {
    "pitanje": "Одредити број спојева (join) који се морају применити за спајање пет табела:",
    "moguci_odgovori": {
        "0": "3",
        "1": "4",
        "2": "5",
        "3": "Један више од броја табела"
    },
    "tacni_odgovori": [1]
},

"377": {
    "pitanje": "Изабрати назив могућности SQL наредбе да враћа податке из две или више табела :",
    "moguci_odgovori": {
        "0": "Селекција ",
        "1": "Пројекција",
        "2": "Спајање",
        "3": "Разврставање"
    },
    "tacni_odgovori": [2]
},

"378": {
    "pitanje": "Изабрати у ком делу SQL наредбе се могу користити аритметичке операције:",
    "moguci_odgovori": {
        "0": "SELECT",
        "1": "FROM",
        "2": "WHERE",
        "3": "ORDER BY"
    },
    "tacni_odgovori": [0]
},

"379": {
    "pitanje": "Табела RADNIK садржи следеће колоне: radnik_id, ime, prezime, odsek_id, plata. <br> Потребно је да се прикаже просечна зарада запослених y сваком одсеку. <br> Изабрати упит који даје тражени извештај:",
    "moguci_odgovori": {
        "0": "SELECT plata(AVG) <br> FROM radnik <br> GROUP BY odsek_id",
        "1": "SELECT AVG plata <br> FROM radnik <br> GROUP BY odsek_id",
        "2": "SELECT AVG(plata) <br> FROM radnik <br> BY odsek_id",
        "3": "SELECT AVG(plata) <br> FROM radnik <br> GROUP BY odsek_id"
    },
    "tacni_odgovori": [3]
},

"380": {
    "pitanje": "Табела PROIZVOD садржи следеће колоне: proizvod_id, opis, cena, lokacija_id. Потребно је приказати оне производе који задовољавају следеће услове: <br> <br> - cena сваког приказаног производа приказује се увећана за 10%. <br> - lokacija_id мора бити 2000, 2001 или 2002. <br> - 10% оригиналне цене мора бити мање од 100 динара. <br> <br> Проценити који упит даје тражене податке:",
    "moguci_odgovori": {
        "0": "SELECT cena, proizvod_id, cena*1.10 <br> FROM proizvod <br> WHERE cena*0.10<100,00 <br> AND lokacija_id IN (2000, 2001, 2002)",
        "1": "SELECT cena, proizvod_id, cena*0.10 <br> FROM proizvod <br> WHERE cena*1.10>100,00 <br> AND (lokacija_id IN (2000, 2001, 2002)",
        "2": "SELECT cena, proizvod_id, cena*1.10 <br> FROM proizvod <br> WHERE cena*1.10<100,00 <br> AND lokacija_id = (2000, 2001, 2002)",
        "3": "SELECT cena, proizvod_id, cena*1.10 <br> FROM proizvod <br> WHERE cena*0.10>100,00 <br> AND (lokacija_id IN (2000, 2001, 2002)"
    },
    "tacni_odgovori": [0]
},

"381": {
    "pitanje": "Одредити шта ће се десити ако се користи DELETE наредба без WHERE клаузуле: ",
    "moguci_odgovori": {
        "0": "Све врсте у табели ће бити обрисане",
        "1": "Појавит ће се грешка",
        "2": "Ни једна врста неће бити обрисана",
        "3": "Само ће једна врста бити обрисана"
    },
    "tacni_odgovori": [0]
},

"382": {
    "pitanje": "Извршава се наредба: <br> <br> DELETE * FROM ucenik. <br> Одредити шта ће се десити са табелом UCENIK:",
    "moguci_odgovori": {
        "0": "Биће обрисана табела UCENIK",
        "1": "Биће обрисана колона UCENIK",
        "2": "Све врсте у табели UCENIK ће бити обрисане",
        "3": "Само ће прва врста у табели UCENIK бити обрисана"
    },
    "tacni_odgovori": [2]
},

"383": {
    "pitanje": "Табела ZAPOSLENI има следећа поља (zaposeleni_id, ime, prezime, plata, odsek_id, bonus). <br> Потребно је доделити бонус свим запосленим у сектору 10, Вредност бонуса поставити на исти бонус који је додељен запосленом чији је id 1221: ",
    "moguci_odgovori": {
        "0": "UPDATE zaposleni <br> SET bonus = SELECT bonus FROM zaposelni <br> WHERE zaposeleni_id = 1221",
        "1": "UPDATE zaposleni <br> SET bonus = (SELECT bonus FROM zaposelni <br> WHERE zaposeleni_id = 1221)",
        "2": "UPDATE zaposleni <br> SET bonus = (SELECT bonus FROM zaposelni <br> WHERE zaposeleni_id = 1221) <br> WHERE odesk_id = 10",
        "3": "UPDATE zaposleni <br> SET bonus = (SELECT bonus FROM zaposelni <br> WHERE zaposeleni_id = 1221 <br> WHERE odesk_id = 10)"
    },
    "tacni_odgovori": [2]
},

"384": {
    "pitanje": "Извршава се наредба: <br> <br> SELECT COUNT(*) <br> FROM ucenik. <br> <br> Одредити шта ради ова наредба:",
    "moguci_odgovori": {
        "0": "Јавит ће се грешка, јер нема WHERE клаузуле",
        "1": "Биће приказан број врста у табели UCENIK",
        "2": "Биће приказани сви подаци о ученицима из табеле, а након тога приказат ће се и њихов броj",
        "3": "Биће приказани сви подаци о ученицима"
    },
    "tacni_odgovori": [1]
},

"385": {
    "pitanje": "Извршава се упит: <br> <br> SELECT prezime, ime, email <br> FROM ucenik <br> ORDER BY prezime <br> WHERE prosek>=4.50 <br> <br> Наредба се неће извршити. <br> Заокружити због чега се наредба неће извршити:",
    "moguci_odgovori": {
        "0": "Наредба се неће извршити једино ако нема ни једног одличног ученика",
        "1": "Услов није добро написан",
        "2": "Потребно је убацити HAVING клаузулу",
        "3": "Потребно је променити редослед клаузула"
    },
    "tacni_odgovori": [3]
},

"386": {
    "pitanje": "Изабрати где се пише ORDER BY клаузула:",
    "moguci_odgovori": {
        "0": "Увек на крају упита",
        "1": "У листи иза SELECT наредбе",
        "2": "Испред WHERE клаузуле"
    },
    "tacni_odgovori": [0]
},

"387": {
    "pitanje": ". Извршава се следећа наредба: <br> <br> SELECT ucenik_id, ime, prosek <br> FROM ucenik <br> ORDER BY ime, prosek <br> <br> Изабрати шта се дешава када се наредба изврши:",
    "moguci_odgovori": {
        "0": "Списак ученика се сортира нумерички",
        "1": "Списак ученика се сортира алфабетски",
        "2": "Списак ученика се сортира најпре нумерички, а онда алфабетски",
        "3": "Списак ученика се сортира најпре алфабетски, а онда нумерички"
    },
    "tacni_odgovori": [3]
},

"388": {
    "pitanje": "Изабрати која реченица о властитом споју (self join) је истинита:",
    "moguci_odgovori": {
        "0": "Алијаси табела се не могу користити за одрећивање имена табеле",
        "1": "Властити спој (self join) се може користити само уз помоћ погледа (view)",
        "2": ". Алијаси табела се морају користити да би одредили имена табеле"
    },
    "tacni_odgovori": [2]
},

"389": {
    "pitanje": "Изабрати која реченица о клаузули GROUP BY је истинита:",
    "moguci_odgovori": {
        "0": "Груписање се најпре врши по првој колони у листи која се налази иза резервисаних речи GROUP BY",
        "1": "Груписање се најпре врши по последњој колони у листи која се налази иза резервисаних речи GROUP BY",
        "2": "GROUP BY клаузула се не може користи са ORDER BY клаузулом"
    },
    "tacni_odgovori": [0]
},

"390": {
    "pitanje": "Уколико је потребно табелу спојити саму са собом, тада је потребно користити:",
    "moguci_odgovori": {
        "0": "Алијасе табела",
        "1": "Алијасе колона",
        "2": "HAVING клаузулу",
        "3": "GROUP BY клаузулу"
    },
    "tacni_odgovori": [0]
},

"391": {
    "pitanje": "Изабрати наредбу која се користи да се уклони поглед (view):",
    "moguci_odgovori": {
        "0": "DROP",
        "1": "DELETE",
        "2": "DROP VIEW",
        "3": "REMOVE VIEW"
    },
    "tacni_odgovori": [2]
},

"392": {
    "pitanje": "Уколико се кроз поглед (view) жели да се промене подаци он не сме садржати",
    "moguci_odgovori": {
        "0": "WHERE клаузулу",
        "1": "Спој",
        "2": "алијас колоне",
        "3": "GROUP BY клаузулу"
    },
    "tacni_odgovori": [3]
},

"393": {
    "pitanje": "Означити како се назива спајање свих врста једне табеле, са свим врстама друге табеле",
    "moguci_odgovori": {
        "0": "упаривање",
        "1": "производ",
        "2": "Декартов производ",
        "3": "Декартово спајање"
    },
    "tacni_odgovori": [2]
},

"394": {
    "pitanje": "Означити тачан исказ",
    "moguci_odgovori": {
        "0": "Окидачи (тригери) се углавном користе за контролу извршавања наредби SQL-a",
        "1": "Окидачи (тригери) се углавном користе за чување базе података од вируса",
        "2": "Окидачи (тригери) се углавном користе за очување интегритета података у бази података"
    },
    "tacni_odgovori": [2]
},

"395": {
    "pitanje": "Изабрати тврђење које је истинито у вези ADO.NET-а:",
    "moguci_odgovori": {
        "0": "ADO.NET технологија представља модел састављен од скупа класа за приступ и манипулацију подацима који су смештени у различитим базама података. ",
        "1": "ADO.NET је језик намењен приступу подацима који су смештени у различитим базама података",
        "2": "ADO.NET технологија је скуп функција намењених коришћењу података на Интернету који су смештени у различитим базама података."
    },
    "tacni_odgovori": [0]
},


"396": {
    "pitanje": "TBU",
    "moguci_odgovori": {
        "0": "Приказују називи свих одељења и висина просечне плате у њима",
        "1": "Групишу по одељењима радници са платом већом од просечне плате",
        "2": "Приказују називи одељења и висина просечне плате у њима само за одељења у којима је просечна плата већа од 1000   <-- tacno",
        "3": "Приказују бројеви свих одељења и висина просечне плате у њима"
    },
    "tacni_odgovori": [2]
},


"397": {
    "pitanje": "TBU",
    "moguci_odgovori": {
        "0": "Распоређивање свих радника у одељење чији је brod 40",
        "1": "Брисаање нераспоређених радника",
        "2": "Уклањање одељења чији је brod 40",
        "3": "Распоређивање нераспоређених радника у одељење чији је brod 40"
    },
    "tacni_odgovori": [3]
},


"398": {
    "pitanje": "TBU",
    "moguci_odgovori": {
        "0": "Параметарски упит",
        "1": "Агрегатни упит",
        "2": "Угњеждени упит",
        "3": "Aкциони упит"
    },
    "tacni_odgovori": [3]
},


"399": {
    "pitanje": "TBU",
    "moguci_odgovori": {
        "0": "UPDATE Radnik SET brod = 10 WHERE brod=40;",
        "1": "UPDATE Radnik SET brod = 40 WHERE brod=10;",
        "2": "ALTER TABLE Radnik SET brod = 40 WHERE brod=10;",
        "3": "DROP TABLE Radnik SET brod = 10 WHERE brod=40;"
    },
    "tacni_odgovori": [1]
},




"400": {
    "pitanje": "TBU",
    "moguci_odgovori": {
        "0": "Називи свих одељења и имена радника у њима",
        "1": "Називи само одељења у којима нема радника",
        "2": "Називи само одељења у којима има радника са именима радника у њима",
        "3": "Називи одељења у којима има радника са именима радника у њима, и називи одељења у којима нема радника"
    },
    "tacni_odgovori": [3]
},

"401": {
    "pitanje": "Одредити оператор поређења који се не може користити у упиту који има подупит који враћа више вредности:",
    "moguci_odgovori": {
        "0": "АLL",
        "1": "ANY",
        "2": "=",
        "3": ">"
    },
    "tacni_odgovori": [2]
},

"402": {
    "pitanje": "Табела ZAPOSLENI има следећа поља (zaposeleni_id, ime, prezime, plata, odsek_id). <br> <br> Потребно је повећати плату запосленима у IТ сектору 12.5%. IТ сектор има као шифру одсека – 15. Изабрати коју наредбу је потребно употребити да би се урадила тражена измена у табели:  ",
    "moguci_odgovori": {
        "0": "UPDATE zaposleni(plata) <br> SET plata=plata*1,125 ",
        "1": "UPDATE zaposleni <br> SET plata=plata*0.125 <br> WHERE odsek_id=15",
        "2": "UPDATE zaposleni <br> SET plata=plata*1.125 <br> WHERE odsek_id=15",
        "3": "UPDATE zaposleni (plata) <br> VALUES (plata*0.125) <br> WHERE odsek_id=15 "
    },
    "tacni_odgovori": [2]
},

"403": {
    "pitanje": "Дат је упит за креирање погледа и наведени искази који се односе на дати упит. <br> Заокружити број испред тачног исказа: <br> <br> CREATE VIEW Pregled_Proseka AS <br> SELECT UcenikID, Ime, Prezime, AVG(Ocena) AS Prosek FROM Testovi <br> WHERE OdeljenjeID IN (1, 2, 3, 4) <br> GROUP BY UcenikID, Ime, Prezime; ",
    "moguci_odgovori": {
        "0": "Подаци у табели Testovi се могу модификовати коришћењем погледа Pregled_Proseka",
        "1": "Коришћењем датог погледа, подаци се могу само у додавати у табелу Testovi, али не и мењати",
        "2": "Овако дат упит изазива грешку при извршењу",
        "3": "Коришћењем датог погледа, подаци из табеле Testovi се могу само прегледавати, али не и додавати или мењати"
    },
    "tacni_odgovori": [3]
},

"404": {
    "pitanje": "Одредити својство података које база података не може да обезбеди:",
    "moguci_odgovori": {
        "0": "Исправност",
        "1": "Истинитост",
        "2": "Потпуност",
        "3": "Заштићеност"
    },
    "tacni_odgovori": [1]
},

"405": {
    "pitanje": "Одабрати све могуће инстанце ентитета ОСОБА:",
    "moguci_odgovori": {
        "0": "Новак Ђоковић",
        "1": "име и презиме",
        "2": "Никола Тесла",
        "3": "женско",
        "4": "датум рођења"
    },
    "tacni_odgovori": [0,2]
},

"406": {
    "pitanje": "За измену – ажурирање структуре табеле која се налази у оквиру базе података користи се:",
    "moguci_odgovori": {
        "0": "ALTER – ADD – за додавање колоне у табелу",
        "1": "ALTER – DROP – за брисање – уклањање колоне из табеле",
        "2": "ALTER – INSERT – за додавање колоне у табелу",
        "3": "ALTER – DELETЕ – за брисање – уклањање кoлоне из табеле"
    },
    "tacni_odgovori": [0,1]
},

"407": {
    "pitanje": "За упите са специфицираним редоследом приказа врста у резултујућој табели користи се клаузула ORDER BY после које се наводи назив колоне:",
    "moguci_odgovori": {
        "0": "и службена реч ASCENDING за растући редослед",
        "1": "и службена реч DESCENDING за опадајући редослед ",
        "2": "и службена реч ASCENDING за опадајући редослед",
        "3": "и службена реч DESCENDING за растући редослед",
        "4": "службена реч се може изоставити, добија се растући поредак",
        "5": "службена реч се може изоставити, добија се опадајући поредак"
    },
    "tacni_odgovori": [0,1,4]
},

"408": {
    "pitanje": "Одредити компоненте информационих система поред харвера, софтвера и рачунарских мрежа:",
    "moguci_odgovori": {
        "0": "подаци",
        "1": "језик за обраду података",
        "2": "базна компонента",
        "3": "мрежна компонента"
    },
    "tacni_odgovori": [0,1]
},

"409": {
    "pitanje": "Делови манипулативне компоненте релационог система су:",
    "moguci_odgovori": {
        "0": "Релациона алгебра",
        "1": "Релационе функције",
        "2": "Релациони рачун",
        "3": "Релациони типови "
    },
    "tacni_odgovori": [0,2]
},

"410": {
    "pitanje": "Одредити ентитете који садрже одговарајуће атрибуте",
    "moguci_odgovori": {
        "0": "Ентитет: КЊИГА – Атрибути: наслов, аутор, издавач, година издања",
        "1": "Ентитет: АУТОМОБИЛ – Атрибути: марка, година производње, боја, власник, година рођења власника, регистарски бро",
        "2": "Ентитет: УЧЕНИК – Атрибути: име, презиме, разред, одељење, број оправданих, број неоправданих, просек",
        "3": "Ентитет: ДРЖАВА – Атрибути: назив, број становника, површина, главни град, број становника главног града, име градоначелника главног града"
    },
    "tacni_odgovori": [0,2]
},

"411": {
    "pitanje": "Одредити ентитете који садрже атрибуте, који НИСУ одговарајући:",
    "moguci_odgovori": {
        "0": "Ентитет: КЊИГА – Атрибути: наслов, аутор, издавач, година издања",
        "1": "Ентитет: АУТОМОБИЛ – Атрибути: марка, година производње, боја, власник, година рођења власника, регистарски бро",
        "2": "Ентитет: УЧЕНИК – Атрибути: име, презиме, разред, одељење, број оправданих, број неоправданих, просек",
        "3": "Ентитет: ДРЖАВА – Атрибути: назив, број становника, површина, главни град, број становника главног града, име градоначелника главног града",
        "4": "ЕНТИТЕТ: САЈАМ – Атрибути: назив, датум почетка, датум завршетка, број излагача, број посетилаца"
    },
    "tacni_odgovori": [1,3]
},

"412": {
    "pitanje": "Поребно је у табелу под именом RADNIK додати примарни кључ - прогласити примарним кључем колону IDBR. ",
    "moguci_odgovori": {
        "0": "ALTER TABLE RADNIK <br> ADD CONSTRAINT PK_RADNIK PRIMARY KEY (IDBR);",
        "1": "ALTER TABLERADNIK <br> ADD PRIMARY KEY (IDBR);",
        "2": "CREATE TABLERADNIK <br> ADD PK_RADNIK PRIMARY KEY (IDBR);",
        "3": "DROPTABLERADNIK <br> ADD PK_RADNIK PRIMARY KEY (IDBR);"
    },
    "tacni_odgovori": [0,1]
},

"413": {
    "pitanje": "Дата је табела RADNIK: <br> <br> <table> <tr> <td> IDBR </td> <td> IME </td> <td> PREZIME </td> <td> PLATA </td> <td> PREMIJA </td> <td> DATZAP </td> </tr> <tr> <td> 5900 </td> <td> Slobodan </td> <td> Golubović </td> <td> 900 </td> <td> 1300 </td> <td> 3.10.1978 </td> </tr> <tr> <td> 5932 </td> <td> Mitar </td> <td> Gavrilović </td> <td> 2600 </td> <td></td> <td> 25.3.1985 </td> </tr> <tr> <td> 5953 </td> <td> Persida </td> <td> Kosanović </td> <td> 1100 </td> <td> 0 </td> <td> 12.1.1979 </td> </tr> <tr> <td> 6234 </td> <td> Marko </td> <td> Pavlović </td> <td> 1300 </td> <td> 3000 </td> <td> 17.12.1990 </td> </tr> <tr> <td> 6789 </td> <td> Janko </td> <td> Nikolić </td> <td> 3900 </td> <td> 10 </td> <td> 31.12.1995 </td> </tr> </table> <br> <br> Заокружити бројеве испред упита којим ће се приказати само презиме и име за раднике запослене у периоду од 1. јануара 1980. до 31. децембра 1995.  ",
    "moguci_odgovori": {
        "0": "Select Prezime, Ime from Radnik where DatZap > #1.1.1980#; and < #1.1.1995#;",
        "1": "Select Prezime, Ime from Radnik where DatZap <= #1.1.1980# and DatZap <= #31.12.1995#;",
        "2": "SELECT PREZIME, IME, DATZAPFROM RADNIK where datzap between #1/1/1980# and #31/12/1995#;",
        "3": "Select Prezime, Ime from Radnik where datzap between #1/1/1980# and #1/1/1995#"
    },
    "tacni_odgovori": [1,2]
},


"414": {
    "pitanje": "TBU",
    "moguci_odgovori": {
        "0": "Параметарски упит",
        "1": "Агрегатни упит",
        "2": "Угњеждени упит",
        "3": "Aкциони упит"
    },
    "tacni_odgovori": [3]
},

"415": {
    "pitanje": "Изабрати које две команде се могу користити за измену постојећих података у бази:",
    "moguci_odgovori": {
        "0": "DELETE",
        "1": "MERGE",
        "2": "SELECT",
        "3": "UPDATE"
    },
    "tacni_odgovori": [1,3]
},

"416": {
    "pitanje": "Одредити које кључне речи се могу користити када се креира поглед (view):",
    "moguci_odgovori": {
        "0": "HAVING",
        "1": "WHERE",
        "2": "OPTION",
        "3": "INTO"
    },
    "tacni_odgovori": [0,1]
},

"417": {
    "pitanje": "Изабрати главне компоненте ADO.NET технологије:",
    "moguci_odgovori": {
        "0": "Access",
        "1": ".NET Framework data providers",
        "2": "DataSet",
        "3": "Office"
    },
    "tacni_odgovori": [1,2]
},

"418": {
    "pitanje": "Систем базе података у ужем смислу састоји се из базе података и _________________________________________",
    "moguci_odgovori": {
        "0": "системa за администрацију, организовање и меморисање тих података",
        "1": "системa за администрацију тих података",
        "2": "системa за организовање и меморисање тих података"
    },
    "tacni_odgovori": [0]
},

"419": { 
    "pitanje": "Навести средство којим корисник остварује комуникацију са релационом базом података: :",
    "moguci_odgovori": {
        "0": "XML ( eXtensible Markup Language) ",
        "1": "SQL ( Structured Querry Language)",
        "2": "PHP ( Personal Home Page )"
    },
    "tacni_odgovori": [1]
},

"420": {
    "pitanje": "Системи за управљање базом података данас имају углавном _____________________________ архитектуру.",
    "moguci_odgovori": {
        "0": "server-server",
        "1": "klijent-sajt",
        "2": "klijent-server"
    },
    "tacni_odgovori": [2]
},

"421": {
    "pitanje": "Релациони модел података представља базу података као скуп ______________",
    "moguci_odgovori": {
        "0": "tabela",
        "1": "entiteta",
        "2": "instanci"
    },
    "tacni_odgovori": [0]
},

"422": {
    "pitanje": "Уколико су сви атрибути релације елементарни и не могу се раставити, кажемо да је релација у ___________ нормалној форми",
    "moguci_odgovori": {
        "0": "prvoj",
        "1": "drugoj",
        "2": "trecoj"
    },
    "tacni_odgovori": [0]
},

"423": {
    "pitanje": "Уколико сви атрибути релације који нису део кључа, зависе од сваког атрибута који је део кључа, кажемо да је релација у _____________ нормалној форми.",
    "moguci_odgovori": {
        "0": "prvoj",
        "1": "drugoj",
        "2": "trecoj"
    },
    "tacni_odgovori": [1]
},

"424": {
    "pitanje": "Уколико сви атрибути релације који нису део кључа, не зависе од неког атрибута који није део кључа, кажемо да је релација у _______________ нормалној форми.",
    "moguci_odgovori": {
        "0": "prvoj",
        "1": "drugoj",
        "2": "trecoj"
    },
    "tacni_odgovori": [2]
},

"425": {
    "pitanje": "Уколико је ентитет егзистенцијално зависан од неког ентитета са којим је у вези, онда њега називамо ______________ ентитет",
    "moguci_odgovori": {
        "0": "slabi",
        "1": "zavisan",
        "2": "nezavisan"
    },
    "tacni_odgovori": [0]
},

"426": {
    "pitanje": "TBU",
    "moguci_odgovori": {
        "0": "5",
        "1": "3",
        "2": "4"
    },
    "tacni_odgovori": [1]
},

"427": {
    "pitanje": "Поглед је ________________________ (изведена) табела, чији се садржај генерише на <br> захтев ____________________________.",
    "moguci_odgovori": {
        "0": "virtuelna <br> servera",
        "1": "virtuelna <br> klijenta",
        "2": "virtuelna <br> korisnika"
    },
    "tacni_odgovori": [2]
},

"428": {
    "pitanje": "Тригери (окидачи) се могу стартовати непосредно ____________ или ____________ SQL наредбе",
    "moguci_odgovori": {
        "0": "pre |i posle",
        "1": "nakon izvrsenja |i gasenja "
    },
    "tacni_odgovori": [0]
},

"429": {
    "pitanje": "Навести компоненте релационог модела: _______________________________, _______________________________ и _______________________________.",
    "moguci_odgovori": {
        "0": "strukturna, integritetska i esencijalna",
        "1": "strukturna, integritetska i manipulativna",
        "2": "strukturna, integritetska i spoljna"
    },
    "tacni_odgovori": [1]
},

"430": {
    "pitanje": "Повезати резервисану реч са редним бројем који одговара појму на који се односи у терминологији база података. <br> <br> 1. Табела __________ ____ VIEW <br> <br> 2. Страни кључ __________ ____ CONSTRAINT <br> <br> 3. Поглед __________ ____ TABLE <br> <br> 4. Окидач __________ ____ FOREIGN KEY <br> <br> 5. Ограничење __________ ____ TRIGGER ",
    "moguci_odgovori": {
        "0": "3 <br> 5 <br> 1 <br> 4 <br> 2",
        "1": "3 <br> 5 <br> 4 <br> 1 <br> 1",
        "2": "3 <br> 5 <br> 1 <br> 2 <br> 4"
    },
    "tacni_odgovori": [2]
},

"431": {
    "pitanje": "Уписати редни број почев од 1 на линију испред резервисане речи тако да одговара редоследу навођења. <br> За формирање упита за издвајање дела података из табеле која се налази у оквиру базе података користе се у следећем редоследу: <br> <br> _____ GROUP BY <br> _____ WHERE <br> _____ SELECT <br> _____ ORDER BY <br> _____ FROM",
    "moguci_odgovori": {
        "0": "4 <br> 3 <br> 1 <br> 5 <br> 2",
        "1": "4 <br> 3 <br> 5 <br> 1 <br> 2",
        "2": "4 <br> 3 <br> 1 <br> 2 <br> 5"
    },
    "tacni_odgovori": [0]
},

"432": {
    "pitanje": "На левој страни су дате кардиналности везе, а на десној страни релације. <br> На линији испред релација уписати одговарајући редни број кардиналности везе. <br> <br> 1. 1 : 1 __________ ____ ВЛАСНИК – БРОЈ ТЕЛЕФОНА <br> <br> 2. 1 : М __________ ____ НАСТАВНИК – ПРЕДМЕТ <br> <br> 3. М : М __________ ____ ОСОБА – ПАСОШ ",
    "moguci_odgovori": {
        "0": "3 <br> 2 <br> 1",
        "1": "2 <br> 3 <br> 1"
    },
    "tacni_odgovori": [1]
},

"433": {
    "pitanje": "Написати на цртама испред логичких операција редне бројеве њихових приоритета: <br> <br> 1. највиши приоритет __________ ____ OR <br> <br> 2. средњи приоритет __________ ____ NOT <br> <br> 3. најнижи приоритет__________ ____ AND",
    "moguci_odgovori": {
        "0": "3 <br> 1 <br> 2",
        "1": "3 <br> 2 <br> 1"
    },
    "tacni_odgovori": [0]
},

"434": {
    "pitanje": "TBU",
    "moguci_odgovori": {
        "0": "5 <br> 3 <br> 1 <br> 4 <br> 2",
        "1": "5 <br> 3 <br> 1 <br> 2 <br> 4"
    },
    "tacni_odgovori": [1]
},

"435": {
    "pitanje": "Одредити шта ће се десити ако се користи DELETE наредба без WHERE клаузуле: ",
    "moguci_odgovori": {
        "0": "Све врсте у табели ће бити обрисане",
        "1": "Појавит ће се грешка",
        "2": "Ни једна врста неће бити обрисана",
        "3": "Само ће једна врста бити обрисана"
    },
    "tacni_odgovori": [0]
},

"436": {
    "pitanje": "Извршава се наредба: <br> <br> DELETE * FROM ucenik. <br> Одредити шта ће се десити са табелом UCENIK:",
    "moguci_odgovori": {
        "0": "Биће обрисана табела UCENIK",
        "1": "Биће обрисана колона UCENIK",
        "2": "Све врсте у табели UCENIK ће бити обрисане",
        "3": "Само ће прва врста у табели UCENIK бити обрисана"
    },
    "tacni_odgovori": [2]
},

"437": {
    "pitanje": "Табела ZAPOSLENI има следећа поља (zaposeleni_id, ime, prezime, plata, odsek_id, bonus). <br> Потребно је доделити бонус свим запосленим у сектору 10, Вредност бонуса поставити на исти бонус који је додељен запосленом чији је id 1221: ",
    "moguci_odgovori": {
        "0": "UPDATE zaposleni <br> SET bonus = SELECT bonus FROM zaposelni <br> WHERE zaposeleni_id = 1221",
        "1": "UPDATE zaposleni <br> SET bonus = (SELECT bonus FROM zaposelni <br> WHERE zaposeleni_id = 1221)",
        "2": "UPDATE zaposleni <br> SET bonus = (SELECT bonus FROM zaposelni <br> WHERE zaposeleni_id = 1221) <br> WHERE odesk_id = 10",
        "3": "UPDATE zaposleni <br> SET bonus = (SELECT bonus FROM zaposelni <br> WHERE zaposeleni_id = 1221 <br> WHERE odesk_id = 10)"
    },
    "tacni_odgovori": [2]
},

"438": {
    "pitanje": "Извршава се наредба: <br> <br> SELECT COUNT(*) <br> FROM ucenik. <br> <br> Одредити шта ради ова наредба:",
    "moguci_odgovori": {
        "0": "Јавит ће се грешка, јер нема WHERE клаузуле",
        "1": "Биће приказан број врста у табели UCENIK",
        "2": "Биће приказани сви подаци о ученицима из табеле, а након тога приказат ће се и њихов броj",
        "3": "Биће приказани сви подаци о ученицима"
    },
    "tacni_odgovori": [1]
},

"439": {
    "pitanje": "Извршава се упит: <br> <br> SELECT prezime, ime, email <br> FROM ucenik <br> ORDER BY prezime <br> WHERE prosek>=4.50 <br> <br> Наредба се неће извршити. <br> Заокружити због чега се наредба неће извршити:",
    "moguci_odgovori": {
        "0": "Наредба се неће извршити једино ако нема ни једног одличног ученика",
        "1": "Услов није добро написан",
        "2": "Потребно је убацити HAVING клаузулу",
        "3": "Потребно је променити редослед клаузула"
    },
    "tacni_odgovori": [3]
},

"440": {
    "pitanje": "Изабрати где се пише ORDER BY клаузула:",
    "moguci_odgovori": {
        "0": "Увек на крају упита",
        "1": "У листи иза SELECT наредбе",
        "2": "Испред WHERE клаузуле"
    },
    "tacni_odgovori": [0]
},

"441": {
    "pitanje": "Дата је if-else наредба: <br> if(a==3 || a==5) p++; else p--; <br> Одредити који код представља дату стуктуру приказану помоћу једне switch наредбе:",
    "moguci_odgovori": {
        "0": "switch(a){ case 3, 5: p++;break; default: p--; } ",
        "1": "switch(a){ case 3: case 5: p++;break; p--; } ",
        "2": "switch(a){ case 3: case 5: p++;break; default: p--; }",
        "3": "switch(a){ case 3: case 5: p++; default: p--; } "
    },
    "tacni_odgovori": [2]
},

"442": {
    "pitanje": "Одредити оператор који би требало користити у SELECT наредби да би били приказани само они ученици чије презиме почиње словом А: ",
    "moguci_odgovori": {
        "0": "IN",
        "1": "LIKE",
        "2": "BETWEEN",
        "3": "AS LIKE",
        "4": "IS NULL"
    },
    "tacni_odgovori": [1]
},

"443": {
    "pitanje": "Одредити оператор који би требало употребити у SELECT наредби да би биле приказане све врсте табеле UCENICI које садрже null вредности у колони stipendija_id: ",
    "moguci_odgovori": {
        "0": "“=NULL”",
        "1": "ISNULL",
        "2": "NULL",
        "3": "IS NULL",
        "4": "LIKE NULL"
    },
    "tacni_odgovori": [3]
},

"444": {
    "pitanje": "Одредити коју клаузулу је потребно додати упиту <br> <br> SELECT prezime, ime, skola_id, mentor_id <br> FROM takmicari <br> <br> да би такмичари били уређени најпре по школи, а онда по ментору, па по презимену ученика:",
    "moguci_odgovori": {
        "0": "ORDER BY skola_id, prezime",
        "1": "ORDER BY skola_id, mentor_id, prezime, ime",
        "2": "ORDER BY skola_id, mentor_id, prezime",
        "3": "ORDER BY prezime, mentor_id, skola_id"
    },
    "tacni_odgovori": [2]
},

"445": {
    "pitanje": "Извршава се упит: <br> <br> SELECT prezime, ime, email <br> FROM ucenici <br> ORDER BY prezime DESC <br> <br> Заокружити исказ који је истинит: ",
    "moguci_odgovori": {
        "0": "Све врсте ће бити сортиране по презимену у абецедном поретку",
        "1": "Све врсте ће бити сортиране по презимену у обрнутом абецедном поретку.",
        "2": "Све врсте ће бити сортиране по презимену, а затим по имену."
    },
    "tacni_odgovori": [1]
},

"446": {
    "pitanje": "Одредити резервисану реч коју је потребно укључити у ORDER BY клаузулу да би приказали податке из табеле са подацима о такмичарима уређене у опадајућем поретку по броју бодова: ",
    "moguci_odgovori": {
        "0": "DESC",
        "1": "ASC",
        "2": "SORT",
        "3": "CHANGE",
        "4": "SORT DESC"
    },
    "tacni_odgovori": [0]
},

"447": {
    "pitanje": "Одабрати клаузулу коју је потребно користити уколико задатак захтева да SELECT упит врати подскуп података",
    "moguci_odgovori": {
        "0": "ANYWHERE",
        "1": "WHICH",
        "2": "WHERE",
        "3": "EVЕRY"
    },
    "tacni_odgovori": [2]
},

"448": {
    "pitanje": "За преглед података из табеле која се налази у оквиру базе података користи се: ",
    "moguci_odgovori": {
        "0": "ADD",
        "1": "DROP",
        "2": "INSERT",
        "3": "SELECT"
    },
    "tacni_odgovori": [3]
},

"449": {
    "pitanje": "За измену структуре у табели која се налази у оквиру базе података - додавање или брисање – уклањање колоне користи се:  ",
    "moguci_odgovori": {
        "0": "SELECT",
        "1": "CREATE",
        "2": "INSERT",
        "3": "ALTER"
    },
    "tacni_odgovori": [3]
}


}